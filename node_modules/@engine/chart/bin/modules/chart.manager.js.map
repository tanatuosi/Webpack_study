{"version":3,"file":"chart.manager.js","sourceRoot":"","sources":["../../src/modules/chart.manager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAG9C,MAAM,OAAO,YAAa,SAAQ,aAAkC;IACzD,QAAQ,CAAC,QAA6B,EAAE,OAAe;QAC1D,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,CAAC;IAEM,OAAO;QACV,IAAI,CAAC,UAAU,EAAE;aACZ,OAAO,CAAC,KAAK,CAAC,EAAE;YACb,KAAK,CAAC,MAAM,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;QAEP,KAAK,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAEM,OAAO;QACV,IAAI,CAAC,UAAU,EAAE;aACZ,OAAO,CAAC,KAAK,CAAC,EAAE;YACb,KAAK,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACX,CAAC;CACJ;AAED,MAAM,CAAC,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC","sourcesContent":["import { WidgetManager } from '@engine/utils';\nimport { AbstractReportChart } from './adapter/chart.abstract';\n\nexport class ChartManager extends WidgetManager<AbstractReportChart> {\n    public register(instance: AbstractReportChart, chartId: string) {\n        super.register(instance, chartId.toUpperCase());\n    }\n\n    public destroy() {\n        this.getWidgets()\n            .forEach(chart => {\n                chart.remove();\n            });\n\n        super.destroy();\n    }\n\n    public refresh() {\n        this.getWidgets()\n            .forEach(chart => {\n                chart.refresh();\n            });\n    }\n}\n\nexport const chartManager = new ChartManager();\n"]}