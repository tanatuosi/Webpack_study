var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { errorTip } from '@engine/core';
import { AbstractReportChart } from './chart.abstract';
/**
 * 0803版本前图表
 */
export class ReportChartAlpha extends AbstractReportChart {
    render() {
        return {
            type: BI.AbsoluteLayout.xtype,
        };
    }
    mounted() {
        this.options.chartAttrGetter()
            .then(chartAttr => {
            if ('errorCode' in chartAttr) {
                this.fireEvent('EVENT_SHOW_ERROR', chartAttr);
                throw {
                    errorCode: chartAttr.errorCode,
                    errorMsg: chartAttr.errorMsg,
                };
            }
            this.chartAttr = chartAttr;
        });
        const chart = VanCharts.init(this.element.context);
        chart.setOptions(this.chartAttr);
        this.bind(chart);
    }
    refresh(chartData = this.chartAttr) {
        const chart = VanCharts.init(this.element.context);
        chart.clear();
        chart.setOptions(chartData);
        this.bind(chart);
    }
    resize() {
        const chart = VanCharts.init(this.element.context);
        chart.resize();
        this.bind(chart);
    }
    bind(chart) {
        chart.doHyperlink = (params) => {
            this.fireEvent(ReportChartAlpha.EVENT_HYPER_LINK, params);
        };
    }
    changeParameter() { }
    reload() { }
    remove() { }
}
ReportChartAlpha.xtype = 'report.chart_alpha';
ReportChartAlpha.EVENT_HYPER_LINK = 'EVENT_HYPER_LINK';
ReportChartAlpha.VERSION = '1.0.0';
ReportChartAlpha.BUILD_TIME = '2020-8-3 09:48:57';
__decorate([
    errorTip()
], ReportChartAlpha.prototype, "render", null);
//# sourceMappingURL=chart_alpha.js.map