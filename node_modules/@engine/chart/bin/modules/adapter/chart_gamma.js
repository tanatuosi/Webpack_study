var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { shortcut } from '@engine/core';
import { ReportChartBeta } from './chart_beta';
let ReportChartGamma = class ReportChartGamma extends ReportChartBeta {
    removeChart() {
        var _a;
        (_a = this.chart) === null || _a === void 0 ? void 0 : _a.remove();
    }
    refresh() {
        var _a;
        // CHART-16896 图表的refresh方法是空的，没啥用，和图表沟通后直接用resize方法即可。
        (_a = this.chart) === null || _a === void 0 ? void 0 : _a.resize();
    }
};
ReportChartGamma.xtype = 'report.chart_gamma';
ReportChartGamma.VERSION = '1.0.0';
ReportChartGamma.BUILD_TIME = '2020-11-2 17:32:05';
ReportChartGamma = __decorate([
    shortcut()
], ReportChartGamma);
export { ReportChartGamma };
//# sourceMappingURL=chart_gamma.js.map