var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { errorTip, shortcut } from '@engine/core';
import { ReportChartGamma } from './chart_gamma';
let ReportChartDelta = class ReportChartDelta extends ReportChartGamma {
    resize(wScale, hScale, fontScale) {
        var _a;
        if (hScale && wScale) {
            this.options.wScale = wScale;
            this.options.hScale = hScale;
            this.options.fontScale = fontScale;
            (_a = this.chart) === null || _a === void 0 ? void 0 : _a.setAutoFitScale(fontScale, wScale, hScale);
        }
    }
    enforceChartAttr() {
        var _a;
        const { wScale, hScale, fontScale } = this.options;
        if ((_a = this.chartAttr) === null || _a === void 0 ? void 0 : _a.chartAttr) {
            this.chartAttr.chartAttr.wScale = wScale;
            this.chartAttr.chartAttr.hScale = hScale;
            this.chartAttr.chartAttr.fontScale = fontScale;
        }
    }
    refresh() {
        var _a;
        (_a = this.chart) === null || _a === void 0 ? void 0 : _a.setAutoFitScale(this.options.fontScale, this.options.wScale, this.options.hScale);
    }
    // 新版本图表不需要创建前resetGlobalScale
    render() {
        return {
            type: BI.AbsoluteLayout.xtype,
        };
    }
};
ReportChartDelta.xtype = 'report.chart_delta';
ReportChartDelta.VERSION = '2.0.0';
ReportChartDelta.BUILD_TIME = '';
__decorate([
    errorTip()
], ReportChartDelta.prototype, "render", null);
ReportChartDelta = __decorate([
    shortcut()
], ReportChartDelta);
export { ReportChartDelta };
//# sourceMappingURL=chart_delta.js.map