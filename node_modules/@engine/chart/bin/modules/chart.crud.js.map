{"version":3,"file":"chart.crud.js","sourceRoot":"","sources":["../../src/modules/chart.crud.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAGvD;;;GAGG;AACH,MAAM,UAAU,cAAc,CAAC,GAI9B;IAOG,MAAM,EAAE,OAAO,EAAE,UAAU,GAAG,EAAE,KAAc,GAAG,EAAZ,IAAI,UAAK,GAAG,EAA3C,yBAAqC,CAAM,CAAC;IAElD,OAAO,UAAU,CAAC,YAAY,EAAE;QAC5B,MAAM,kBACF,OAAO,EACP,MAAM,EAAE,UAAU,IACf,IAAI,CACV;KACJ,CAAC,CAAC;AACP,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,oBAAoB,CAAC,IAMpC;IACG,OAAO,WAAW,CAAC,2BAA2B,EAAE;QAC5C,IAAI;KACP,CAAC,CAAC;AACP,CAAC","sourcesContent":["import { requestGet, requestPost } from '@engine/crud';\nimport { XCellHyperLink } from '@engine/link';\n\n/**\n * 获取图表数据\n * @param chartID 图表ID\n */\nexport function fetchChartData(opt: {\n    chartID: string;\n    widgetName?: string;\n    [key: string]: any;\n}): Promise<{\n    chartAttr: any,\n    chartID: string,\n} | {\n    errorCode: string;\n    errorMsg: string;\n}> {\n    const { chartID, widgetName = '', ...args } = opt;\n\n    return requestGet('chart/data', {\n        params: {\n            chartID,\n            ecName: widgetName,\n            ...args,\n        },\n    });\n}\n\n/**\n * 获取超链信息\n * @param data 传输数据\n */\nexport function fetchChartHyperLinks(data: {\n    chartID: string;\n    sheetIndex: number;\n    ecName: string;\n    ChartHyperlink_ID: string;\n    [key: string]: any;\n}): Promise<XCellHyperLink> {\n    return requestPost('chart/calculate/hyperlink', {\n        data,\n    });\n}\n"]}