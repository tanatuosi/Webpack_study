import { Label, Radio } from '@fui/core';
export declare class ParameterRadioGroupSingleSelectRadioItem extends BI.BasicButton {
    static xtype: string;
    text: Label;
    radio: Radio;
    options: {
        baseCls: string;
        $testId: string;
        hgap: number;
        text: string;
        value?: string | undefined;
        width?: number | undefined;
        adaptive: boolean;
        scale: number;
    };
    props: {
        baseCls: string;
        $testId: string;
        hgap: number;
        text: string;
        value?: string;
        width?: number;
        adaptive: boolean;
        scale: number;
    };
    render(): {
        type: string;
        cls: string;
        horizontalAlign: string;
        verticalAlign: string;
        columnSize: (string | number)[];
        items: ({
            el: {
                type: string;
                items: {
                    type: string;
                    ref: (_ref: Radio) => void;
                    width: number;
                    height: number;
                    iconWidth: number;
                    iconHeight: number;
                }[];
            };
            width: number;
            type?: undefined;
            ref?: undefined;
            cls?: undefined;
            textAlign?: undefined;
            whiteSpace?: undefined;
            hgap?: undefined;
            text?: undefined;
            value?: undefined;
            textHeight?: undefined;
        } | {
            type: string;
            ref: (_ref: Label) => void;
            cls: string;
            textAlign: string;
            whiteSpace: string;
            hgap: number;
            text: string;
            value: string | undefined;
            textHeight: number | undefined;
            el?: undefined;
            width?: undefined;
        })[];
        height?: undefined;
    } | {
        type: string;
        cls: string;
        height: number;
        items: ({
            el: {
                type: string;
                items: {
                    type: string;
                    ref: (_ref: Radio) => void;
                    width: number;
                    height: number;
                    iconWidth: number;
                    iconHeight: number;
                }[];
            };
            width: number;
            type?: undefined;
            ref?: undefined;
            cls?: undefined;
            textAlign?: undefined;
            whiteSpace?: undefined;
            hgap?: undefined;
            text?: undefined;
            value?: undefined;
            textHeight?: undefined;
        } | {
            type: string;
            ref: (_ref: Label) => void;
            cls: string;
            textAlign: string;
            whiteSpace: string;
            hgap: number;
            text: string;
            value: string | undefined;
            textHeight: number | undefined;
            el?: undefined;
            width?: undefined;
        })[];
        horizontalAlign?: undefined;
        verticalAlign?: undefined;
        columnSize?: undefined;
    };
    doRedMark(...args: any[]): void;
    unRedMark(...args: any[]): void;
    doClick(): void;
    setSelected(v: any): void;
    static EVENT_CHANGE: string;
}
