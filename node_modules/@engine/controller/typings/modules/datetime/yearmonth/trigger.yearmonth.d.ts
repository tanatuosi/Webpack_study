import { SignEditor } from '@fui/core';
export declare class YearMonthTrigger extends BI.Trigger {
    static xtype: string;
    props: {
        /**
         * 水印
         */
        watermark?: string;
        /**
         * 最小日期
         */
        min: string;
        /**
         * 最大日期
         */
        max: string;
        /**
         * 显示的日期格式化方式
         */
        format?: string;
        /**
         * 是否允许编辑
         */
        allowEdit?: true;
        /**
         * 控件值
         */
        value?: {
            type: 1 | 2;
            value: {
                year?: number;
                month?: number;
            };
        };
        extraCls: string;
        height?: number;
    };
    private storeTriggerValue;
    private editor;
    private storeValue?;
    render(): {
        type: string;
        items: ({
            el: {
                type: string;
                height: number | undefined;
                validationChecker: (v: string) => boolean;
                quitChecker(): boolean;
                ref: (_ref: SignEditor) => void;
                hgap: number;
                vgap: number;
                allowBlank: boolean;
                watermark: string;
                title: () => string;
                listeners: {
                    eventName: string;
                    action: () => void;
                }[];
                invisible?: undefined;
                cls?: undefined;
            };
            left: number;
            right: number;
            top: number;
            bottom: number;
            width?: undefined;
        } | {
            el: {
                type: string;
                height?: undefined;
                validationChecker?: undefined;
                ref?: undefined;
                hgap?: undefined;
                vgap?: undefined;
                allowBlank?: undefined;
                watermark?: undefined;
                title?: undefined;
                listeners?: undefined;
                invisible?: undefined;
                cls?: undefined;
            };
            width: number;
            right: number;
            top: number;
            bottom: number;
            left?: undefined;
        } | {
            el: {
                type: string;
                invisible: true | undefined;
                cls: string;
                title: () => string;
                hgap: number;
                height?: undefined;
                validationChecker?: undefined;
                ref?: undefined;
                vgap?: undefined;
                allowBlank?: undefined;
                watermark?: undefined;
                listeners?: undefined;
            };
            left: number;
            right: number;
            top: number;
            bottom: number;
            width?: undefined;
        })[];
    };
    mounted(): void;
    private getFormattedTitle;
    private getStandardDateStr;
    private getFormatString;
    private dateCheck;
    private checkVoid;
    private setInnerValue;
    private getDisplayText;
    setValue(v?: {
        type: 1 | 2;
        value: {
            year?: number;
            month?: number;
        };
    }): void;
    setMinDate(minDate: string): void;
    setMaxDate(maxDate: string): void;
    getKey(): any;
    getValue(): {
        type: 2 | 1;
        value: {
            year?: number | undefined;
            month?: number | undefined;
        };
    } | undefined;
    focus(): void;
    blur(): void;
    setWaterMark(v: string): void;
}
