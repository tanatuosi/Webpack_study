import { ReportDate } from './report_date/report_date';
/**
 * 转换时间控件对象值为毫秒数
 * @param dateValue 时间控件对象值
 */
export declare function transformDateValue2DateMs(dateValue: {
    type: 1 | 2;
    value: {
        year: number;
        month: number;
        day?: number;
        hour?: number;
        minute?: number;
        second?: number;
    };
}): number;
/**
 * 根据日期格式获得日期控件类型
 * @param format 格式
 */
export declare function getControlTypeByFormat(format: string): string;
/**
 * 根据Format类型获取时间范围
 * REPORT-80190: "本月"和"今年"按钮只有当天日期在 [minDate, maxDate] 范围内时才生效
 * @param startDate 外部传入的startDate
 * @param endDate 外部传入的endDate
 * @param format 格式
 */
export declare function getDateRangeByFormat(startDate: string | Date | undefined, endDate: string | Date | undefined, format: string): {
    minDate: string | undefined;
    maxDate: string | undefined;
};
/**
 * 将日期毫秒数转为格式所要求的字符串
 * @param milliseconds 毫秒数或者2010-07这样的字符串
 * @param format 格式
 */
export declare function transformDateMs2String(milliseconds: number | string, format: string): string;
/**
 * 转换time_combo控件对象值为毫秒数
 * @param milliseconds 毫秒数
 */
export declare function transformTimeValue2DateMs(timeValue: {
    hour: number;
    minute: number;
    second: number;
}, reportDate: ReportDate): number;
/**
 * 将字符串格式转换为xxxx-xx-xx
 * @param date 日期字符串
 * @param format 格式
 */
export declare function transform2YMDFormat(date: string | undefined | Date, format: string): string | undefined;
/**
 * 设置下拉框下拉图标字体大小样式
 * @param baseCls 基础样式class
 * @param dep 字体大小、宽高
 * @returns 返回新的样式class
 */
export declare function setDatetimeComboFontSize(baseCls: string, dep: {
    fontSize: number;
    width: number;
    height: number;
}): string;
export declare function isLegal(date: ReportDate, format: string, start?: string, end?: string): boolean;
/**
 * 日期转化为控件所需的格式
 */
export declare function transform2DateComboValue(date: ReportDate, format: string, start?: string, end?: string): {
    hour: number;
    minute: number;
    second: number;
    type?: undefined;
    value?: undefined;
} | {
    type: number;
    value: {
        year: number;
        month: number;
        day: number;
        hour: number;
        minute: number;
        second: number;
    };
    hour?: undefined;
    minute?: undefined;
    second?: undefined;
} | undefined;
export declare function setDatetimeComboStyle({ opacity, background, color, border, ['border-radius']: borderRadius }: {
    opacity?: number;
    background?: string;
    color?: string;
    border?: string;
    'border-radius'?: string;
}): string;
export declare function setDatetimeComboPopupStyle({ itemHeight, fontSize }: {
    itemHeight: string;
    fontSize: string;
}): string;
