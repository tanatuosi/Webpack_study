import { fetchParamControlAttr, fetchWidgetViewValue } from '../controller.crud';
import { AbstractParameterControllerWidget, ControllerValidation } from '../controller.abstract';
import { ParameterControllerForm, ParameterControllerBasicProps4Item, ParameterControllerPropsWithEditor, ParameterControllerPropsWithCombo, ParameterControllerBasicProps4Render, ParameterControllerDelayer } from '../controller';
import { ParameterMultiSelectCombo } from './multiselectcombo/multiselectcombo';
import '../combo/combo.less';
export declare class ParameterTagComboCheckboxNext extends AbstractParameterControllerWidget {
    static xtype: string;
    private combo;
    static BASE_CLS: string;
    props: ParameterControllerTagComboCheckboxProps4RenderProps & ParameterControllerForm & ParameterControllerDelayer;
    get editComp(): ParameterMultiSelectCombo;
    private ratio;
    render(): {
        type: string;
        cls: string;
        ref: (_ref: ParameterMultiSelectCombo) => void;
        allowEdit: boolean;
        allowCount: boolean;
        itemHeightGetter: () => number;
        itemsCreator: (options: {
            keyword?: string;
            selectedValues: string[];
            times: number;
            type: number;
            loadTotal?: boolean;
        }, callback: Function) => void;
        width: number;
        height: number;
        value: {
            text: string;
            value: string;
        }[] | undefined;
        watermark: string;
        customData: boolean;
        listeners: {
            eventName: string;
            action: () => void;
        }[];
    };
    mounted(): void;
    updateControllAttrByValue(v: string | number | (string | number)[], controlData?: {
        text: string;
        value: string;
    }[]): Promise<{
        text: string;
        value: string;
    }[] | undefined>;
    setControllerValue(v: string | number | (string | number)[], controlData?: {
        text: string;
        value: string;
    }[]): Promise<void>;
    setValue(v: string | number | (string | number)[], controlData?: {
        text: string;
        value: string;
    }[]): void;
    preGetValidation(): ControllerValidation;
    private validateCustomData;
    postGetValidation(): ControllerValidation;
    postValidateAndToast(): boolean;
    emitManualStopEditEvent(): void;
    getValue(): string | any[];
    reset(): void;
    reloadControlAttr(): void;
    setInteractValue(v: {
        data: {
            text: string;
            value: string;
        }[];
        value: string | number | (string | number)[];
    }): void;
    resize(width: number, height: number): void;
    private getRequestOpts;
    getText(): string;
    get ck_el_array(): unknown[];
    getAdapter(): import("@fui/core").Searcher;
    setText(v: string): void;
    setStyle(styles: Parameters<AbstractParameterControllerWidget['setStyle']>[0]): void;
    setPopupStyle(styles: {
        itemHeight: string;
        fontSize: string;
    }): void;
    setWaterMark(v: string): void;
    focus(): void;
    blur(): void;
}
export interface ParameterControllerTagComboCheckboxProps4RenderProps extends ParameterControllerTagComboCheckboxProps4Render4Item {
    baseCls: string;
    $testId: string;
    controlAttrFetcher: typeof fetchParamControlAttr;
    extraOptsGetter: () => {
        [key: string]: any;
    };
    viewValueFetcher: typeof fetchWidgetViewValue;
}
/**
 * 下拉复选框
 */
export interface ParameterControllerTagComboCheckboxProps4Render4Item extends ParameterControllerBasicProps4Item, ParameterControllerPropsWithEditor, ParameterControllerPropsWithCombo {
    /**
     * 下拉框显示选择值之间的分隔符
     */
    delimiter: string;
    /**
     * 支持标签显示	true 表示支持, false表示不支持
     */
    supportTag: boolean;
    widgetName: ParameterControllerBasicProps4Render['widgetName'];
    /**
     * 是否返回数组
     */
    returnArray: boolean;
    /**
     * 起始符
     */
    startSymbol: string;
    /**
     * 结束符
     */
    endSymbol: string;
    /**
     * 允许显示计数
     */
    allowCount: boolean;
    /**
     * 是否校验自定义值
     */
    needCheckCustomData: boolean;
    /**
     * 下拉面板元素高度
     */
    sonHeight: number;
}
export interface ParameterControllerTagComboCheckboxProps4Render extends ParameterControllerBasicProps4Render, ParameterControllerTagComboCheckboxProps4Render4Item {
}
