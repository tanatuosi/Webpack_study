import { ParameterControllerBasicProps4Item, ParameterControllerBasicProps4Render, ParameterControllerDelayer, ParameterControllerForm, ParameterControllerPropsWithTree, ParameterControllerTreeControlAttrData } from '../../controller';
import { AbstractParameterControllerWidget } from '../../controller.abstract';
import { ParameterTreeLike, ParamMultiTreeItem, ParamMultiTreeValue } from '../tree_like';
import './tree.less';
export declare class ParameterTree extends ParameterTreeLike {
    static xtype: string;
    static BASE_CLS: string;
    protected isTreeWidget(): boolean;
    protected tree: any;
    protected nodes: ParamMultiTreeItem[];
    protected textValueMap: {
        [key: string]: string;
    };
    protected completeMultiTreeValue: ParamMultiTreeValue;
    /**
     * 转换后的初始值
     */
    private defaultTreeValue;
    props: ParameterControllerTreeProps4RenderProps & ParameterControllerForm & ParameterControllerDelayer;
    render(): {
        type: string;
        cls: string;
        items: {
            type: string;
            cls: string;
            ref: (_ref: any) => void;
            width: number;
            height: number;
            itemsCreator: (op: any, callback: (data: {
                items: ParamMultiTreeItem[];
                hasNext: boolean;
                resultType?: string;
            } | ParamMultiTreeValue) => void) => void;
            value: any;
            listeners: {
                eventName: string;
                action: () => void;
            }[];
            minHeight: number;
        }[];
    };
    setValue(v: string, data?: ParameterControllerTreeControlAttrData[]): Promise<void>;
    setControllerValue(v: string, data: ParameterControllerTreeControlAttrData[]): Promise<void>;
    protected setTreeValue(v: any): void;
    mounted(): Promise<void>;
    /**
     * 开启自动展开已选节点
     */
    enableAutoExpand(): void;
    reset(): void;
    reloadControlAttr(): void;
    /**
     * 公开接口，获取已选值，全选的值会被合并
     */
    getSelectedValue(): any;
    setStyle(styles: Parameters<AbstractParameterControllerWidget['setStyle']>[0]): void;
    getText(): string;
}
/**
 * 树列表结构
 */
export interface ParameterControllerTreeProps4Render4Item extends ParameterControllerBasicProps4Item, ParameterControllerPropsWithTree {
    $testId: string;
}
export interface ParameterControllerTreeProps4Render extends ParameterControllerBasicProps4Render, ParameterControllerTreeProps4Render4Item {
}
export interface ParameterControllerTreeProps4RenderProps extends Omit<ParameterControllerTreeProps4Render4Item, 'value'> {
    baseCls: string;
    errorMsg: string;
    allowBlank: boolean;
    value: (string | number)[] | string | undefined | null | number;
    /**
     * 是否校验自定义值
     */
    needCheckCustomData: boolean;
}
