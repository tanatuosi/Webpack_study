import { ParameterControllerControlAttr } from './controller';
import { fetchWidgetViewValue } from './controller.crud';
export declare const LimitCount = 500;
export declare const PopupMaxHeight = 500;
/**
 * 设置字体大小样式
 * @param baseCls 基础样式class
 * @param fontSize 字体大小
 * @returns 返回新的样式class
 */
export declare function setFontSize(baseCls: string, fontSize: number): string;
/**
 * 根据adaptive获取对应width属性
 * @param adaptive 是否自适应
 * @param columnsInRow 非自适应时分为几列
 */
export declare function getWidthPropByAdaptive(adaptive: boolean, columnsInRow?: number): {
    width?: string;
};
/**
 * 根据分隔符和是否返回数组返回分隔符
 * @param delimiter 分隔符
 * @param returnArray 是否返回数组
 */
export declare function getSplitorByOpts(delimiter: string, returnArray: boolean): undefined | string;
/**
 * 设置fontStyle
 * @param fontStyle fontStyle
 */
export declare function getFontStyle(fontStyle: string): {
    'font-style': string;
    'padding-right': string;
};
/**
 * 设置文本框样式
 * @param style
 */
export declare function setEditorStyle({ opacity, background, color, border, ['border-radius']: borderRadius }: {
    opacity?: number;
    background?: string;
    color?: string;
    border?: string;
    'border-radius'?: string;
}): string;
export declare function transformControlAttrData(data?: ParameterControllerControlAttr['data'] | null | undefined | {
    error: string;
}): {
    text: string;
    value: string;
}[];
/**
 * 根据已有值创建新值，在value最前面加上不可见字符\u200b
 * @param value 当前值
 * @param values 已有值
 */
export declare function transform2DistinctValueByValues(value: string, values: string[]): string;
/**
 * 将已有值转换为唯一值
 * @param items 已有值
 */
export declare function transform2DistinctValues<T extends {
    value: string;
}>(items: T[]): T[];
/**
 * 设置下拉框下拉图标字体大小样式
 * @param baseCls 基础样式class
 * @param fontSize 字体大小
 * @returns 返回新的样式class
 */
export declare function setComboFontSize(baseCls: string, dep: {
    fontSize: number;
    width: number;
    height: number;
}): string;
/**
 * 控件匹配实际值/显示值
 * @param widgetName 控件名称
 * @param customData 是否允许自定义值
 * @param op 其余参数
 */
export declare function fetchParamViewValue(widgetName: string, customData: boolean, requestor: typeof fetchWidgetViewValue, op: {
    dependence: {
        [key: string]: any;
    };
    reload: boolean;
    __text__: string | number | undefined;
}): Promise<{
    value: string;
    text: string;
} | undefined>;
export declare function setLineHeight(baseCls: string, lineHeight: number): string;
/**
 * 将默认值转为数组
 * @param value 默认朱
 * @param splitor 分隔符
 */
export declare function transformStr2ArrBySplitor(value: string | number, splitor?: string, startSymbol?: string, endSymbol?: string): string[];
