import { Searcher, SignEditor } from '@fui/core';
export declare class ParameterSingleSelectTrigger extends BI.Trigger {
    static EVENT_SEARCHING: string;
    static EVENT_STOP: string;
    static EVENT_START: string;
    static EVENT_CHANGE: string;
    static EVENT_FOCUS: string;
    static EVENT_BLUR: string;
    static xtype: string;
    static EVENT_CLICK: string;
    static EVENT_KEY_DOWN: string;
    props: {
        baseCls: string;
        height: number;
        itemsCreator: Function;
        valueGetter: () => {
            text: string;
            value: string;
        } | undefined;
        unmatchedValueGetter: () => {
            text: string;
            value: string;
        }[];
        watermark: string;
        allowEdit: boolean;
        customData: boolean;
        itemHeightGetter: () => number;
        value: string;
    };
    private searcher;
    private editor;
    private popup;
    render(): {
        type: string;
        items: ({
            el: {
                type: string;
                ref: (_ref: Searcher) => void;
                isAutoSearch: boolean;
                el: {
                    type: string;
                    ref: (_ref: SignEditor) => void;
                    value: string;
                    allowBlank: boolean;
                    watermark: string;
                    height: number;
                    listeners: {
                        eventName: string;
                        action: () => void;
                    }[];
                };
                popup: Partial<{
                    itemsCreator: Function;
                    keywordGetter: () => string | undefined;
                    valueGetter: () => {
                        text: string;
                        value: string;
                    } | undefined;
                    unmatchedValueGetter: () => {
                        text: string;
                        value: string;
                    }[];
                    minWidth: number;
                    maxHeight: number;
                    height: undefined;
                    value: {
                        text: string;
                        value: string;
                    } | undefined;
                    customData: boolean;
                    allowNoSelect: boolean;
                    repopulateGetter: () => boolean;
                    name4EmptyGetter: () => string;
                    itemHeightGetter: () => number;
                    maxCountGetter: () => number;
                    popupAdjuster: () => void;
                    tipText: string;
                }>;
                onSearch: (_op: {
                    keyword: string;
                }, callback: Function) => void;
                listeners: {
                    eventName: string;
                    action: () => void;
                }[];
                width?: undefined;
            };
            width?: undefined;
        } | {
            el: {
                type: string;
                width: number;
                ref?: undefined;
                isAutoSearch?: undefined;
                el?: undefined;
                popup?: undefined;
                onSearch?: undefined;
                listeners?: undefined;
            };
            width: number;
        })[];
    };
    mounted(): void;
    setValue(val?: {
        text: string;
        value: string;
    }): void;
    stopEditing(): void;
    getSearcher(): Searcher;
    getValue(): {
        text: any;
        value: any;
    } | undefined;
    setAdapter(adapter: any): void;
    adjustPopupHeight(adapter: any): void;
    isSearching(): boolean;
    focus(): void;
    blur(): void;
    setWaterMark(v: string): void;
    selectNextItem(): void;
    selectPreItem(): void;
}
