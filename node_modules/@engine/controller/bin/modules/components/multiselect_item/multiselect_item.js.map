{"version":3,"file":"multiselect_item.js","sourceRoot":"","sources":["../../../../src/modules/components/multiselect_item/multiselect_item.ts"],"names":[],"mappings":"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","sourcesContent":["import { shortcut } from '@engine/core';\nimport { setMultiSelectItemFontSize } from './multiselect_item.service';\nimport { Label } from '@fui/core';\n\n@shortcut()\nexport class ReportMultiSelectItem extends BI.BasicButton {\n    public static EVENT_CHANGE = 'EVENT_CHANGE';\n\n    public static xtype = 'report.main.components.multiselect_item';\n\n    public checkbox: any;\n\n    public text: Label;\n\n    public props: {\n        extraCls: string;\n        height: number | undefined;\n        logic: {\n            dynamic: boolean;\n        };\n        hgap: number;\n        rgap: number | undefined;\n        text: string;\n        keyword: string;\n        value: string;\n        py: string;\n        scale: number;\n        width: number;\n        title: () => string;\n    } = {\n        extraCls: 'bi-multi-select-item',\n        height: undefined,\n        logic: {\n            dynamic: false,\n        },\n        hgap: 2,\n        rgap: undefined,\n        text: '',\n        keyword: '',\n        value: '',\n        py: '',\n        scale: 1,\n        width: 80,\n        title: () => this.options.text,\n    }\n\n    public render() {\n        const o = this.options;\n\n        const defaultSize = 16;\n\n        const height = defaultSize * o.scale + 2;\n\n        const checkboxWidth = 12 * o.scale;\n\n        return {\n            type: BI.TableAdaptLayout.xtype,\n            cls: setMultiSelectItemFontSize('report-main-components-multiselect-item', o.scale),\n            horizontalAlign: BI.HorizontalAlign.Left,\n            verticalAlign: o.logic.dynamic ? BI.VerticalAlign.Middle : undefined,\n            columnSize: [checkboxWidth, ''],\n            items: [{\n                type: BI.CenterAdaptLayout.xtype,\n                items: [{\n                    type: BI.Checkbox.xtype,\n                    cls: 'bi-card',\n                    ref: (_ref: any) => {\n                        this.checkbox = _ref;\n                    },\n                    width: checkboxWidth,\n                    height: checkboxWidth,\n                    iconWidth: checkboxWidth,\n                    iconHeight: checkboxWidth,\n                    listeners: [{\n                        eventName: BI.Controller.EVENT_CHANGE,\n                        action: (type: string) => {\n                            if (type === BI.Events.CLICK) {\n                                this.setSelected(this.isSelected());\n                            }\n                        },\n                    }],\n                }],\n                width: checkboxWidth,\n                height,\n            }, {\n                type: BI.Label.xtype,\n                ref: (_ref: Label) => {\n                    this.text = _ref;\n                },\n                rgap: o.rgap,\n                keyword: o.keyword,\n                py: o.py,\n                cls: 'list-item-text',\n                textAlign: 'left',\n                whiteSpace: 'normal',\n                hgap: o.hgap * o.scale,\n                text: o.text,\n                value: o.value,\n            }],\n        };\n    }\n\n    public doRedMark(..._args: any[]) {\n        this.text.doRedMark(_args);\n    }\n\n    public unRedMark(..._args: any[]) {\n        this.text.unRedMark(_args);\n    }\n\n    public doClick() {\n        super.doClick.apply(this, arguments);\n        this.checkbox.setSelected(this.isSelected());\n        if (this.isValid()) {\n            this.fireEvent(BI.MultiSelectItem.EVENT_CHANGE, this.getValue(), this);\n        }\n    }\n\n    public setSelected(v: boolean) {\n        super.setSelected.apply(this, arguments);\n        this.checkbox.setSelected(v);\n    }\n}\n"]}