var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { AbstractParameterControllerWidget } from '../controller.abstract';
import { shortcut } from '@engine/core';
let ParameterEmpty = class ParameterEmpty extends AbstractParameterControllerWidget {
    preGetValidation() {
        return {
            result: true,
        };
    }
    postGetValidation() {
        return { result: true };
    }
    postValidateAndToast() {
        return true;
    }
    reset() { }
    setInteractValue() { }
    async setControllerValue() { }
    getValue() {
        return '';
    }
    setStyle() { }
};
ParameterEmpty.xtype = 'report.main.parameter_container.controller.empty';
ParameterEmpty = __decorate([
    shortcut()
], ParameterEmpty);
export { ParameterEmpty };
//# sourceMappingURL=empty.js.map