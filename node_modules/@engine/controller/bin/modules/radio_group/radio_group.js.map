{"version":3,"file":"radio_group.js","sourceRoot":"","sources":["../../../src/modules/radio_group/radio_group.ts"],"names":[],"mappings":"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","sourcesContent":["import { WIDTH, HEIGHT } from '../controller.constants';\nimport { setFontSize, getWidthPropByAdaptive, transformControlAttrData } from '../controller.service';\nimport { shortcut } from '@engine/core';\nimport { ParameterRadioGroupSingleSelectRadioItem } from './radio_group.single_select_radio_item';\nimport { ParameterControllerBasicProps4Item, ParameterControllerControlAttr, ParameterControllerBasicProps4Render, ParameterControllerForm } from '../controller';\nimport { AbstractParameterControllerWidget, ControllerValidation } from '../controller.abstract';\nimport { ButtonGroup } from '@fui/core';\nimport { fetchParamControlAttr } from '../controller.crud';\nimport { setRadioGroupStyle } from './radio_group.service';\n\nexport const ParameterRadioGroupXtype = 'report.main.parameter_container.controller.radio_group';\n\n@shortcut()\nexport class ParameterRadioGroup extends AbstractParameterControllerWidget {\n    public static xtype = 'report.main.parameter_container.controller.radio_group';\n\n    public static BASE_CLS = 'report-main-parameter-container-controller-radio-group';\n\n    private radioGroups: ButtonGroup;\n\n    // 公开接口\n    public $container: ButtonGroup['element'];\n\n    public props: ParamRadioGroupProps = {\n        baseCls: ParameterRadioGroup.BASE_CLS,\n        $testId: ParameterRadioGroup.BASE_CLS,\n        widgetName: '',\n        width: WIDTH,\n        height: HEIGHT,\n        adaptive: false,\n        columnsInRow: 1,\n        controlAttr: {\n            data: [],\n            value: '',\n        },\n        needSubmit: false,\n        disabled: false,\n        invisible: false,\n        fontSize: 12,\n        value: '',\n        allowBlank: true,\n        errorMsg: BI.i18nText('Fine-Report_Preview_Can_Not_Null'),\n        norepeat: true,\n        controlAttrFetcher: fetchParamControlAttr,\n        extraOptsGetter: () => {\n            return {};\n        },\n        getDependenceByWidget: () => [],\n        getWidgetDependenceValueByWidget: () => {\n            return {};\n        },\n        allowBg: true,\n    }\n\n    public render() {\n        const { width, height, fontSize } = this.options;\n\n        return {\n            type: BI.ButtonGroup.xtype,\n            cls: 'report-hide-scrollbar',\n            ref: (_ref: ButtonGroup) => {\n                this.radioGroups = _ref;\n\n                this.$container = _ref.element;\n            },\n            items: this.items,\n            chooseType: BI.ButtonGroup.CHOOSE_TYPE_MULTI,\n            layouts: [{\n                type: BI.FloatLeftLayout.xtype,\n                width,\n                height,\n                tgap: 3 * fontSize / 12,\n                scrolly: true,\n            }],\n        };\n    }\n\n    public async setControllerValue(v: string | number | (string | number)[]) {\n        this.options.value = v;\n\n        this.radioGroups.populate(this.items);\n    }\n\n    public setInteractValue(controlAttr: ParameterControllerControlAttr) {\n        this.options.controlAttr = controlAttr;\n\n        this.options.value = controlAttr.value;\n\n        this.radioGroups.populate(this.items);\n\n        this.setControllerValue(controlAttr.value);\n    }\n\n    public preGetValidation(): ControllerValidation {\n        const { errorMsg, allowBlank, value } = this.options;\n\n        if (allowBlank || !BI.isEmpty(value)) {\n            return { result: true };\n        }\n\n        return {\n            result: false,\n            errorMsg,\n        };\n    }\n\n    public postGetValidation(): ControllerValidation {\n        const { allowBlank, errorMsg } = this.options;\n\n        if (allowBlank) {\n            return { result: true };\n        }\n\n        return !!this.getValue() === true ? {\n            result: true,\n        } : {\n            result: false,\n            errorMsg,\n        };\n    }\n\n    public postValidateAndToast() {\n        const validation = this.getValidation();\n\n        if (validation.result) {\n            return true;\n        }\n\n        this.showBubble(validation.errorMsg);\n\n        return false;\n    }\n\n    public getValue(): string {\n        const value: string | undefined = BI.first(\n            (this.radioGroups.getAllButtons() as any[])\n                .filter(btn => btn.isSelected())\n                .map(btn => btn.getValue()),\n        );\n\n        if (!value) {\n            return '';\n        }\n\n        return value;\n    }\n\n    /**\n     * 将controlData转换成fineui的items\n     */\n    private get items() {\n        const { adaptive, columnsInRow, controlAttr, fontSize, value: v, disabled } = this.options;\n\n        const items: {\n            text: string;\n            value: string;\n            selected?: boolean;\n        }[] = transformControlAttrData(controlAttr.data);\n\n        const extraCls = setFontSize(ParameterRadioGroup.BASE_CLS, BI.isIE() ? Math.floor(fontSize) : fontSize);\n\n        const value = BI.isNull(v) || BI.isEmptyString(v)\n            ? undefined\n            : BI.isArray(v) ? `${BI.first(v)}` : `${v}`;\n\n        let isMatched = false;\n\n        // 匹配实际值\n        items.some(item => {\n            isMatched = item.value === value;\n\n            if (isMatched) {\n                item.selected = true;\n            }\n\n            return isMatched;\n        });\n\n        // 匹配显示值\n        if (!isMatched) {\n            items.some(item => {\n                isMatched = item.text === value;\n    \n                if (isMatched) {\n                    item.selected = true;\n                }\n    \n                return isMatched;\n            });\n        }\n\n        return items.map(item => {\n            const { text, value, selected = false } = item;\n\n            return {\n                type: ParameterRadioGroupSingleSelectRadioItem.xtype,\n                disabled,\n                scale: fontSize / 12,\n                cls: `${extraCls}`,\n                text,\n                title: text,\n                adaptive,\n                selected,\n                value,\n                ...getWidthPropByAdaptive(adaptive, columnsInRow),\n                listeners: [{\n                    eventName: ParameterRadioGroupSingleSelectRadioItem.EVENT_CHANGE,\n                    action: (isSelected: boolean, _value: any, btn: any) => {\n                        if (isSelected) {\n                            (this.radioGroups.getAllButtons() as any[])\n                                .forEach($btn => {\n                                    $btn !== btn && $btn.setSelected(false);\n                                });\n                        }\n\n                        this.hideBubble();\n\n                        !this.silence && this.fireEvent('statechange');\n\n                        this.fireEvent('EVENT_CHANGE');\n                    },\n                }],\n            };\n        });\n    }\n\n    public reset() {\n        this.radioGroups.setValue();\n    }\n\n    public resize(width: number, height: number) {\n        this.options.value = this.getValue();\n        \n        super.resize(width, height);\n    }\n\n    public async updateControlAttr() {\n        const { widgetName, controlAttrFetcher } = this.options;\n\n        return controlAttrFetcher(widgetName, this.getRequestOpts())\n            .then(res => {\n                this.options.controlAttr = {\n                    data: res,\n                    value: this.options.value,\n                };\n            });\n    }\n\n    public reloadControlAttr() {\n        this.reset();\n\n        this.updateControlAttr()\n            .then(() => {\n                this.radioGroups.populate(this.items);\n            });\n    }\n\n    private getRequestOpts() {\n        const { getWidgetDependenceValueByWidget, getDependenceByWidget, extraOptsGetter } = this.options;\n\n        const dependences = getWidgetDependenceValueByWidget(this);\n\n        return {\n            dependence: dependences,\n            reload: BI.isNotEmptyArray(getDependenceByWidget(this)),\n            ...extraOptsGetter(),\n        };\n    }\n\n    public setStyle(styles: Parameters<AbstractParameterControllerWidget['setStyle']>[0]) {\n        this.radioGroups.element.addClass(setRadioGroupStyle(styles));\n    }\n\n    public getText() {\n        const value: string | undefined = BI.first(\n            (this.radioGroups.getAllButtons() as any[])\n                .filter(btn => btn.isSelected())\n                .map(btn => btn.attr('text')),\n        );\n\n        if (!value) {\n            return '';\n        }\n\n        return value;\n    }\n}\n\n\nexport interface ParamRadioGroupProps extends ParameterControllerRadioGroupProps4Render4Item, ParameterControllerForm {\n    baseCls: string;\n    $testId: string;\n    widgetName: string;\n    controlAttrFetcher: typeof fetchParamControlAttr,\n    extraOptsGetter: () => {[key: string]: any};\n}\n\nexport interface ParameterControllerRadioGroupProps4Render4Item extends Omit<ParameterControllerBasicProps4Item, 'value'> {\n\n    /**\n     * 自适应, Boolean 类型, true 表示自适应\n     */\n    adaptive: boolean;\n\n    /**\n     * 非自适应情况下展示的列数\n     */\n    columnsInRow: number;\n\n    /**\n     * 数据字典\n     */\n    controlAttr: ParameterControllerControlAttr;\n\n    /**\n     * 允许为空\n     */\n    allowBlank: boolean;\n\n    /**\n     * 空验证错误信息\n     */\n    errorMsg: string;\n\n    /**\n     * 去除重复项\n     */\n    norepeat: boolean;\n    value: string | number | (string | number)[];\n}\n\nexport interface ParameterControllerRadioGroupProps4Render extends ParameterControllerBasicProps4Render, ParameterControllerRadioGroupProps4Render4Item {}\n"]}