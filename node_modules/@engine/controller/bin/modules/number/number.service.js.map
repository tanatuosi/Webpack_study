{"version":3,"file":"number.service.js","sourceRoot":"","sources":["../../../src/modules/number/number.service.ts"],"names":[],"mappings":"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","sourcesContent":["export enum NUM_ERROR {\n    NOT_ALLOW_BLANK = 'NOT_ALLOW_BLANK',\n    INVALID_NUMBER = 'INVALID_NUMBER',\n    NOT_ALLOW_NEGATIVE = 'NOT_ALLOW_NEGATIVE',\n    NOT_ALLOW_DECIMALS = 'NOT_ALLOW_DECIMALS',\n    TOO_MANY_DECIMALS = 'TOO_MANY_DECIMALS',\n    TOO_MANY_INTEGER = 'TOO_MANY_INTEGER',\n    TOO_LARGE = 'TOO_LARGE',\n    TOO_SMALL = 'TOO_SMALL',\n}\n\nexport function checkValidation(v: any, { allowNegative, allowDecimals, allowBlank, maxDecLength = 16, maxIntLength = 32, maxValue, minValue }: {\n    allowDecimals: boolean;\n    allowBlank: boolean;\n    maxDecLength: number;\n    maxIntLength: number;\n    maxValue?: number;\n    minValue?: number;\n    allowNegative: boolean;\n}): NUM_ERROR | true {\n    if (v === '') {\n        return allowBlank || NUM_ERROR.NOT_ALLOW_BLANK;\n    }\n\n    if (!BI.isNumeric(v)) {\n        return NUM_ERROR.INVALID_NUMBER;\n    }\n\n    const num = parseFloat(v);\n\n    if (!allowNegative && num < 0) {\n        return NUM_ERROR.NOT_ALLOW_NEGATIVE;\n    }\n\n    if (!allowDecimals && Math.floor(num) !== num) {\n        return NUM_ERROR.NOT_ALLOW_DECIMALS;\n    }\n\n    const decLength = BI.size(`${num}`.split('.')[1]);\n\n    if (decLength > maxDecLength) {\n        return NUM_ERROR.TOO_MANY_DECIMALS;\n    }\n\n    const intLength = BI.size(`${num}`.split('.')[0]);\n\n    if (intLength > maxIntLength) {\n        return NUM_ERROR.TOO_MANY_INTEGER;\n    }\n\n    if (BI.isNotNull(maxValue) && num > maxValue) {\n        return NUM_ERROR.TOO_LARGE;\n    }\n\n    if (BI.isNotNull(minValue) && num < minValue) {\n        return NUM_ERROR.TOO_SMALL;\n    }\n\n    return true;\n}\n\nexport function transformValidation2ErrorMsg(validation: NUM_ERROR | true, opt: {\n    errorMsg: string,\n    regErrorMsg: string,\n    maxValue?: number,\n    minValue?: number,\n}): string {\n    const { errorMsg, regErrorMsg, maxValue, minValue } = opt;\n\n    switch (validation) {\n        case NUM_ERROR.NOT_ALLOW_BLANK:\n            return errorMsg;\n        case NUM_ERROR.INVALID_NUMBER:\n            return regErrorMsg || BI.i18nText('Fine-Report_Preview_Input_Must_Be_Number');\n        case NUM_ERROR.NOT_ALLOW_NEGATIVE:\n            return regErrorMsg || BI.i18nText('Fine-Report_Preview_NOT_ALLOW_NEGATIVE');\n        case NUM_ERROR.NOT_ALLOW_DECIMALS:\n            return regErrorMsg || BI.i18nText('Fine-Report_Preview_NOT_ALLOW_DECIMALS');\n        case NUM_ERROR.TOO_MANY_DECIMALS:\n            return regErrorMsg || BI.i18nText('Fine-Report_Preview_TOO_MANY_DECIMALS');\n        case NUM_ERROR.TOO_LARGE:\n            return regErrorMsg || BI.i18nText('Fine-Report_Preview_TOO_LARGE', maxValue);\n        case NUM_ERROR.TOO_SMALL:\n            return regErrorMsg || BI.i18nText('Fine-Report_Preview_TOO_SMALL', minValue);\n        default:\n            return regErrorMsg || BI.i18nText('Fine-Report_Preview_Input_Error');\n    }\n}\n\n/**\n * 根据条件格式化输入值\n * @param v 输入值\n * @param allowNegative 允许负数\n * @param allowDecimals 允许小数\n */\nexport function formatNumber(v: string, allowNegative: boolean, allowDecimals: boolean) {\n    let value = v.replace(/[^-0-9\\\\.]/g, '');\n\n    value = allowNegative\n        ? value\n            .replace(/^-/g, 'll')\n            .replace(/-/g, '')\n            .replace(/^ll/, '-')\n        : value.replace(/-/g, '');\n\n    value = allowDecimals\n        ? value\n            .replace(/^[.]/g, '')\n            .replace(/[.]/, 'dd')\n            .replace(/[.]/g, '')\n            .replace(/dd/, '.')\n            .replace(/[.]$/g, '')\n        : value.replace(/[.]/g, '');\n\n    return value;\n}\n"]}