{"version":3,"file":"check_group.service.js","sourceRoot":"","sources":["../../../src/modules/checkbox_group/check_group.service.ts"],"names":[],"mappings":"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","sourcesContent":["import jss from 'jss';\nimport jssGlobal from 'jss-plugin-global';\nimport jssNested from 'jss-plugin-nested';\nimport { getSplitorByOpts, transformStr2ArrBySplitor } from '../controller.service';\nimport { ParameterCheckboxGroup } from './checkbox_group';\n\n/**\n * 处理items选中\n * @param items items\n * @param value 值\n * @param delimiter 分隔符\n */\nexport function transformItems2Selected(\n    items: { text: string; value: string; selected?: boolean }[],\n    value: string | number | (string | number)[],\n    delimiter: string,\n    startSymbol: string,\n    endSymbol: string,\n) {\n    const values = BI.isArray(value) ? value.slice(0) : value === '' ? [] : transformStr2ArrBySplitor(value, delimiter, startSymbol, endSymbol);\n\n    // 先匹配实际值\n    items.forEach(item => {\n        const valueIndex = values.findIndex(value => `${value}` === item.value);\n\n        if (valueIndex !== -1) {\n            values.splice(valueIndex, 1);\n            item.selected = true;\n        }\n    });\n\n    // 再匹配显示值\n    items.forEach(item => {\n        const valueIndex = values.findIndex(value => `${value}` === item.text);\n\n        if (valueIndex !== -1) {\n            values.splice(valueIndex, 1);\n            item.selected = true;\n        }\n    });\n\n    return items;\n}\n\n/**\n * 按照options format value\n * @param value 控件值\n * @param opts 可选项\n */\nexport function transformValue2CheckGroupValue($value: Array<string>, { delimiter, startSymbol, endSymbol, returnArray } : { delimiter: string, startSymbol: string, endSymbol: string, returnArray: boolean }): string | Array<string> {\n    // 过滤空值\n    const value = $value.filter(v => v);\n\n    const splitor = getSplitorByOpts(delimiter, returnArray);\n\n    if (splitor) {\n        return `${startSymbol}${value.join(splitor)}${endSymbol}`;\n    }\n\n    return value;\n}\n\n/**\n * 设置样式\n * @param style 样式\n */\nexport function setCheckboxGroupStyle({ opacity, background, color }: {\n    opacity?: number;\n    background?: string;\n    color?: string;\n}) {\n    jss.use(jssGlobal(), jssNested());\n\n    const cls = `${ParameterCheckboxGroup.BASE_CLS}-${BI.UUID()}`;\n\n    const styles4Attach: {\n        color?: string;\n        background?: string;\n        opacity?: string;\n    } = {};\n\n    if (opacity) {\n        styles4Attach.opacity = `${opacity}`;\n    }\n    \n    if (background) {\n        styles4Attach.background = `${background}`;\n    }\n\n    if (color) {\n        styles4Attach.color = `${color}`;\n    }\n\n    jss.createStyleSheet({\n        '@global': {\n            [`.${cls}`]: styles4Attach,\n        },\n    }).attach();\n\n    return cls;\n}\n"]}