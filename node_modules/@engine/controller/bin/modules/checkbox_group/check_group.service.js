import jss from 'jss';
import jssGlobal from 'jss-plugin-global';
import jssNested from 'jss-plugin-nested';
import { getSplitorByOpts, transformStr2ArrBySplitor } from '../controller.service';
import { ParameterCheckboxGroup } from './checkbox_group';
/**
 * 处理items选中
 * @param items items
 * @param value 值
 * @param delimiter 分隔符
 */
export function transformItems2Selected(items, value, delimiter, startSymbol, endSymbol) {
    const values = BI.isArray(value) ? value.slice(0) : value === '' ? [] : transformStr2ArrBySplitor(value, delimiter, startSymbol, endSymbol);
    // 先匹配实际值
    items.forEach(item => {
        const valueIndex = values.findIndex(value => `${value}` === item.value);
        if (valueIndex !== -1) {
            values.splice(valueIndex, 1);
            item.selected = true;
        }
    });
    // 再匹配显示值
    items.forEach(item => {
        const valueIndex = values.findIndex(value => `${value}` === item.text);
        if (valueIndex !== -1) {
            values.splice(valueIndex, 1);
            item.selected = true;
        }
    });
    return items;
}
/**
 * 按照options format value
 * @param value 控件值
 * @param opts 可选项
 */
export function transformValue2CheckGroupValue($value, { delimiter, startSymbol, endSymbol, returnArray }) {
    // 过滤空值
    const value = $value.filter(v => v);
    const splitor = getSplitorByOpts(delimiter, returnArray);
    if (splitor) {
        return `${startSymbol}${value.join(splitor)}${endSymbol}`;
    }
    return value;
}
/**
 * 设置样式
 * @param style 样式
 */
export function setCheckboxGroupStyle({ opacity, background, color }) {
    jss.use(jssGlobal(), jssNested());
    const cls = `${ParameterCheckboxGroup.BASE_CLS}-${BI.UUID()}`;
    const styles4Attach = {};
    if (opacity) {
        styles4Attach.opacity = `${opacity}`;
    }
    if (background) {
        styles4Attach.background = `${background}`;
    }
    if (color) {
        styles4Attach.color = `${color}`;
    }
    jss.createStyleSheet({
        '@global': {
            [`.${cls}`]: styles4Attach,
        },
    }).attach();
    return cls;
}
//# sourceMappingURL=check_group.service.js.map