{"version":3,"file":"controller.js","sourceRoot":"","sources":["../../src/modules/controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { FrListener, provider } from '@engine/core';\nimport { errorHandlerProvider } from '@engine/crud';\nimport { CancelToken } from 'axios';\nimport { ParameterButton, ParameterControllerButtonProps4Render } from './button/button';\nimport { ParameterCheckbox, ParameterControllerCheckboxProps4Render } from './checkbox/checkbox';\nimport { ParameterCheckboxGroup, ParameterControllerCheckboxGroupProps4Render } from './checkbox_group/checkbox_group';\nimport { ParameterComboNext, ParameterControllerComboProps4Render } from './combo/combo_next';\nimport { AbstractParameterControllerWidget } from './controller.abstract';\nimport './controller.less';\nimport { ParameterControllerDatetimeProps4Render, ParameterDatetime } from './datetime/datetime';\nimport { ParameterEmpty } from './empty/empty';\nimport { ControllerAttrErrorHandler, CONTROLLER_ATTR_ERROR_CODE } from './interceptor/error_handler/errorHandler.controller_attr_error';\nimport { ParameterControllerLabelProps4Render, ParameterLabel } from './label/label';\nimport { ParameterControllerMultifileProps4Render, ParameterMultifile } from './multifile/multifile';\nimport { ParameterControllerNumberProps4Render, ParameterNumber } from './number/number';\nimport { PageFixedRowCombobox } from './pagefixedrowcombobox/pagefixedrowcombobox';\nimport { ParameterControllerPasswordProps4Render, ParameterPassword } from './password/password';\nimport { ParameterControllerRadioGroupProps4Render, ParameterRadioGroup } from './radio_group/radio_group';\nimport { ParameterControllerTagComboCheckboxProps4Render, ParameterTagComboCheckboxNext } from './tag_combo_checkbox/tag_combo_checkbox_next';\nimport { ParameterControllerTextProps4Render, ParameterText } from './text/text';\nimport { ParameterControllerTextareaProps4Render, ParameterTextarea } from './textarea/textarea';\nimport { ParameterControllerTreeProps4Render, ParameterTree } from './tree_like/tree/tree';\nimport { ParameterControllerTreeComboBoxProps4Render, ParameterTreeComboBox } from './tree_like/tree_combo_box/tree_combo_box';\n\nerrorHandlerProvider.setHandler(CONTROLLER_ATTR_ERROR_CODE.HAVE_RING, ControllerAttrErrorHandler);\nerrorHandlerProvider.setHandler(CONTROLLER_ATTR_ERROR_CODE.SAME_ORIGIN_ITEM, ControllerAttrErrorHandler);\n\nclass ControllerProvider {\n    private controllerDict = new Map<string, string>([\n        ['button', ParameterButton.xtype],\n        ['freebutton', ParameterButton.xtype],\n        ['formsubmit', ParameterButton.xtype],\n        ['checkbox', ParameterCheckbox.xtype],\n        ['checkboxgroup', ParameterCheckboxGroup.xtype],\n        ['combo', ParameterComboNext.xtype],\n        ['datetime', ParameterDatetime.xtype],\n        ['label', ParameterLabel.xtype],\n        ['number', ParameterNumber.xtype],\n        ['password', ParameterPassword.xtype],\n        ['radiogroup', ParameterRadioGroup.xtype],\n        ['tagcombocheckbox', ParameterTagComboCheckboxNext.xtype],\n        ['combocheckbox', ParameterTagComboCheckboxNext.xtype],\n        ['text', ParameterText.xtype],\n        ['textarea', ParameterTextarea.xtype],\n        ['tree', ParameterTree.xtype],\n        ['treecombobox', ParameterTreeComboBox.xtype],\n        ['multifile', ParameterMultifile.xtype],\n        ['pagefixedrowcombobox', PageFixedRowCombobox.xtype],\n    ]);\n\n    public get(key: string) {\n        return this.controllerDict.get(key) || ParameterEmpty.xtype;\n    }\n\n    public set(key: string, value: string) {\n        this.controllerDict.set(key, value);\n    }\n\n    public getImpl() {\n        return ParameterEmpty;\n    }\n}\n\n@provider()\nclass ReportControllerProvider {\n    public static xtype = 'report.controller.provider';\n\n    public $get() {\n        return ControllerProvider;\n    }\n}\n\nexport const controllerProvider: ControllerProvider = BI.Providers.getProvider(ReportControllerProvider.xtype);\n\n/**\n * 后台传过来的控件属性\n */\nexport type ParameterControllerProps4Render = ParameterControllerTextProps4Render | ParameterControllerButtonProps4Render | ParameterControllerComboProps4Render | ParameterControllerTagComboCheckboxProps4Render | ParameterControllerNumberProps4Render | ParameterControllerRadioGroupProps4Render | ParameterControllerCheckboxGroupProps4Render | ParameterControllerTextareaProps4Render | ParameterControllerPasswordProps4Render | ParameterControllerCheckboxProps4Render | ParameterControllerLabelProps4Render | ParameterControllerTreeComboBoxProps4Render | ParameterControllerDatetimeProps4Render | ParameterControllerTreeProps4Render | ParameterControllerMultifileProps4Render;\n\n/**\n * 控件基础属性，用于渲染外框架的属性\n */\nexport interface ParameterControllerBasicProps4Render {\n\n    /**\n     * 控件名称\n     */\n    widgetName: string;\n    x: number;\n    y: number;\n    type: 'text' | 'label' | 'button' | 'freebutton' | 'combo' | 'tagcombocheckbox' | 'datetime' | 'textarea' | 'checkboxgroup' | 'radiogroup' | 'number' | 'treecombobox' | 'password' | 'checkbox' | 'tree' | 'formsubmit';\n\n    /**\n     * 控件事件集\t默认为空, 控件添加事件后返回事件对象组成的数组.\n     */\n    listeners: Array<FrListener>;\n}\n\n/**\n * 参数控件基本属性，用于组件内部使用的基本属性\n*/\nexport interface ParameterControllerBasicProps4Item {\n\n    /**\n     * 控件是否不可用\n     */\n    disabled: boolean;\n\n    /**\n     * 控件是否不可见\tfalse表示可见, true表示不可见\n     */\n    invisible: boolean;\n\n    /**\n     * 是否需要提交\tfalse表示不提交, true表示提交\n     */\n    needSubmit: boolean;\n\n    /**\n     * 字体大小\n     */\n    fontSize: number;\n\n    /**\n     * 控件值\t控件显示的内容\n     */\n    value: (string | number)[] | string;\n    width: number;\n    height: number;\n\n    /**\n     * 是否有背景色\n     */\n    allowBg: boolean;\n}\n\n/**\n * 控件包含文本框\n*/\nexport interface ParameterControllerPropsWithEditor {\n\n    /**\n     * 允许为空\n     */\n    allowBlank: boolean;\n\n    /**\n     * 空验证错误信息\n     */\n    errorMsg: string;\n\n    /**\n     * 水印\n     */\n    watermark: string;\n}\n\n/**\n * 控件包含下拉框\n */\nexport interface ParameterControllerPropsWithCombo {\n\n    /**\n     * 数据字典，key/value\n     */\n    controlAttr: ParameterControllerControlAttr;\n\n    /**\n     * 允许自定义值\n     */\n    customData: boolean;\n\n    /**\n     * 允许直接编辑\n     */\n    directEdit: boolean;\n\n    /**\n     * 去掉重复项\n     */\n    noRepeat: boolean;\n\n    /**\n     * 这个属性没用\n     */\n    autoMode: boolean;\n\n    /**\n     * 这个属性也没用\n     */\n    mode: 'remote';\n\n    /**\n     * 这个属性没法配=没用\n     */\n    searchTime: number;\n}\n\n/**\n * 包含复选框组\n */\nexport interface ParameterControllerPropsWithMultiSelectList {\n\n    /**\n     * 返回数组\t默认 false, true 表示返回数组, false表示返回字符串\n     */\n    returnArray: boolean;\n\n    /**\n     * 起始符\t返回字符串的起始符\n     */\n    startSymbol: string;\n\n    /**\n     * 结束符\t返回字符串的结束符\n     */\n    endSymbol: string;\n\n    /**\n     * 去掉重复项\t默认为 true\n     */\n    noRepeat: boolean;\n}\n\n/**\n * 包含树结构\n */\nexport interface ParameterControllerPropsWithTree extends Partial<Omit<ParameterControllerPropsWithMultiSelectList, 'noRepeat'>> {\n\n    /**\n     * 树结构的数据字典\n     */\n    controlAttr: ParameterControllerTreeControlAttr;\n\n    /**\n     * 异步加载\n     */\n    async: boolean;\n\n    /**\n     * 多选\n     */\n    mutiSelection: boolean;\n\n    /**\n     * 结果返回完整层次路径\n     */\n    returnFullPath: boolean;\n\n    /**\n     * 只返回叶子节点\n     */\n    selectLeafOnly: boolean;\n\n    /**\n     * 分隔符, 默认为 \";\" , 下拉框显示选择值之间的分隔符\n     */\n    delimiter: string;\n    widgetName: string;\n\n    /**\n     * 是否为极速构建，极速构建的树当成同步树处理\n     */\n    isLayerBuild: boolean;\n\n    /**\n     * 额外请求属性\n     */\n    extraOptsGetter: () => {[key: string]: any};\n\n    /**\n     * 老树请求\n     */\n    oldTreeControlAttrFetcher: (widgetName: string, op?: {\n        [key: string]: any;\n    }, cancelToken?: CancelToken) => Promise<ParameterControllerTreeControlAttrData[]>;\n\n    /**\n     * 新树请求\n     */\n    newTreeControlAttrFetcher: (widgetName: string, op?: {\n        [key: string]: any;\n    }, cancelToken?: CancelToken) => Promise<{\n        items: {\n            checked: boolean;\n            half: boolean;\n            halfCheck: boolean;\n            id: string | number;\n            isParent: boolean;\n            open: boolean;\n            pId: string | number;\n            text: string;\n            times: number;\n            title: string;\n            value: string;\n        }[],\n        resultType: string;\n        hasNext: boolean;\n    }[] | {\n        items: MultiTreeValue,\n        resultType: string;\n        hasNext: boolean;\n    }[]>;\n    newTreeStructureFetcher: (widgetName: string, op: {\n        [key: string]: any\n    }) => Promise<ParameterControllerTreeControlAttrData[]>;\n}\n\n/**\n * 树结构的数据字典\n */\nexport interface ParameterControllerTreeControlAttr {\n\n    /**\n     * data 为返回的数据数组,为第一层树\n     */\n    data: ParameterControllerTreeControlAttrData[];\n\n    /**\n     * 初始默认值,与控件 value 一致\n     */\n    value: number | string;\n}\n\n/**\n * 树结构的数据字典的data\n */\nexport interface ParameterControllerTreeControlAttrData {\n\n    /**\n     * ChildNodes 为子节点对象组成的数组,结构与 data 一致\n     */\n    ChildNodes: Array<ParameterControllerTreeControlAttrData>;\n\n    /**\n     * 是否展开\n     */\n    isexpand: boolean;\n\n    /**\n     * 是否有子节点\n     */\n    hasChildren: boolean;\n    id: number | string;\n\n    /**\n     * 显示值\n     */\n    text: string;\n\n    /**\n     * 显示复选框\n     */\n    showcheck: boolean;\n\n    /**\n     * 可能是全选的意思\n     */\n    complete: boolean;\n\n    /**\n     * 实际值\n     */\n    value: string;\n\n    /**\n     * 复选框选中状态\n     */\n    checkstate: 0 | 1;\n}\n\n/**\n * 一般控件的数据字典\n */\nexport interface ParameterControllerControlAttr {\n\n    /**\n     * 属性有值时返回数据对象 { text: 显示值, value: 实际值 }, 否则不返回\n     */\n    data: Array<{\n        text: string | number;\n        value?: string | number;\n    }>;\n\n    /**\n     * 默认值,与控件的 value 值一致\n     */\n    value: string | number | (string | number)[];\n}\n\n/**\n * 控件form属性需要的接口\n */\nexport interface ParameterControllerForm {\n    getWidgetDependenceValueByWidget(widget: AbstractParameterControllerWidget): {\n        [key: string]: any;\n    };\n\n    getDependenceByWidget(widget: AbstractParameterControllerWidget): string[];\n}\n\n/**\n * 控件延迟接口属性\n */\nexport interface ParameterControllerDelayer {\n    add2WaitingQueue: (id?: string) => string,\n    removeFromWaitingQueue: (id: string) => void,\n}\n\nexport type DataList = { text: string; value: string }[];\n\nexport interface MultiTreeValue {\n    [key: string]: MultiTreeValue;\n}\n"]}