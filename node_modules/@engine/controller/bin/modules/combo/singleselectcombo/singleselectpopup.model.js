var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Model, model } from '@engine/core';
let ParameterSingleSelectPopupModel = class ParameterSingleSelectPopupModel extends Model {
    constructor() {
        super(...arguments);
        this.computed = {};
        this.actions = {
            updateName4Empty: () => {
                this.model.name4Empty = this.options.name4EmptyGetter() || BI.i18nText('BI-Basic_No_Select');
            },
        };
    }
    state() {
        return {
            name4Empty: this.options.name4EmptyGetter() || BI.i18nText('BI-Basic_No_Select'),
        };
    }
};
ParameterSingleSelectPopupModel.xtype = 'report.model.main.parameter_container.controller.singleselectpopup';
ParameterSingleSelectPopupModel = __decorate([
    model()
], ParameterSingleSelectPopupModel);
export { ParameterSingleSelectPopupModel };
//# sourceMappingURL=singleselectpopup.model.js.map