import jss from 'jss';
import jssGlobal from 'jss-plugin-global';
import jssNested from 'jss-plugin-nested';
import { ParameterComboNext } from './combo_next';
/**
 * 转换默认值为combo控件可用值
 * @param v 默认值
 */
export function assertComboValue(v) {
    return BI.isEmptyString(Array.isArray(v) ? `${BI.first(v)}` : v) ? undefined : `${v}`;
}
/**
 * 校验是否有额外的值传入
 * @param controlAttr 数据字典
 */
export function validateCustomData(controlAttr) {
    if (controlAttr.value === '') {
        return true;
    }
    const validation = BI.isNotNull(controlAttr.data)
        && controlAttr.data.some(item => `${item.text}` === `${controlAttr.value}` || `${item.value}` === `${controlAttr.value}`);
    if (!validation) {
        BI.Msg.toast(BI.i18nText('Fine-Report_Preview_Not_In_List'), { level: 'error' });
    }
    return validation;
}
/**
 * 转换成单选框的输入值
 * @param v 值
 * @param _controlAttrData 数据字典
 */
export function transformValue2ComboNextValue(v, _controlAttrData) {
    const value = preTransformValue2ComboNextValue(v);
    if (!value) {
        return undefined;
    }
    const controlAttrData = _controlAttrData.slice(0);
    // 找到实际值相符的item
    // 截止到发稿前，5能匹配上“05”这种神操作只有单选下拉框里有
    // eslint-disable-next-line eqeqeq
    let controlAttrDataIndex = controlAttrData.findIndex(item => item.value == value);
    // REPORT-49902 可能出现v是5，controllerData里的value是'5'，因此无法完全匹配的问题，这里找到后统一转成string
    if (controlAttrDataIndex !== -1) {
        return {
            text: `${controlAttrData[controlAttrDataIndex].text}`,
            value: `${controlAttrData[controlAttrDataIndex].value}`,
        };
    }
    // 找到显示值相符的item
    // 截止到发稿前，5能匹配上“05”这种神操作只有单选下拉框里有
    // eslint-disable-next-line eqeqeq
    controlAttrDataIndex = controlAttrData.findIndex(item => item.text == value);
    if (controlAttrDataIndex !== -1) {
        return {
            text: `${controlAttrData[controlAttrDataIndex].text}`,
            value: `${controlAttrData[controlAttrDataIndex].value}`,
        };
    }
    // 此时还会有一些item没有匹配到，作为自定义项
    return { text: `${value}`, value: `${value}` };
}
/**
 * value预处理
 * @param v 控件值
 */
export function preTransformValue2ComboNextValue(v) {
    /**
     * 历史遗留，后台给过来的空值就是空字符串，不会传null
     * 我看老的版本也有这个bug，如果字典里有实际值为空，一样不会显示
     * 所以此处直接将空值置为null
     */
    if (!v) {
        return undefined;
    }
    /**
     * REPORT-24744
     */
    if (BI.isObject(v) && 'date_milliseconds' in v) {
        return BI.print(new Date(v.date_milliseconds), '%Y-%X-%d');
    }
    // REPORT-67677 单选框默认值为数组的情况，显示全部值，与旧版保持一致
    const value = BI.isArray(v) ? v.join(',') : v;
    return value;
}
export function setComboStyle({ opacity, background, color, border, ['border-radius']: borderRadius }) {
    jss.use(jssGlobal(), jssNested());
    const cls = `${ParameterComboNext.BASE_CLS}-${BI.UUID()}`;
    const selector = `.${cls}`;
    jss.createStyleSheet({
        '@global': {
            [`${selector}`]: {
                opacity,
                background,
            },
            [`${selector} .bi-combo .bi-card`]: {
                background,
                color,
            },
            [`${selector} .bi-text`]: {
                color,
            },
            [`${selector} .bi-icon-button`]: {
                color,
            },
            [`${selector} .bi-border`]: {
                border,
                'boder-radius': borderRadius,
            },
        },
    }).attach();
    return cls;
}
export function setComboPopupStyle({ fontSize, itemHeight }) {
    jss.use(jssGlobal(), jssNested());
    const cls = `${ParameterComboNext.BASE_CLS}-${BI.UUID()}`;
    const selector = `.${cls}`;
    jss.createStyleSheet({
        '@global': {
            [`${selector} .bi-list-pane .bi-label`]: {
                'font-size': `${fontSize} !important`,
            },
            [`${selector} .bi-v .bi-label`]: {
                'font-size': `${fontSize} !important`,
            },
            [`${selector} .bi-list-pane .bi-tips`]: {
                'font-size': `${fontSize} !important`,
                height: `${itemHeight} !important`,
                'line-height': `${itemHeight} !important`,
            },
        },
    }).attach();
    return cls;
}
//# sourceMappingURL=combo.service.js.map