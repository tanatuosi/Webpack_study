{"version":3,"file":"multiselectcheckbutton.js","sourceRoot":"","sources":["../../../../src/modules/tag_combo_checkbox/multiselectcombo/multiselectcheckbutton.ts"],"names":[],"mappings":";;;;;;;AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAGxC,IAAa,+BAA+B,uCAA5C,MAAa,+BAAgC,SAAQ,EAAE,CAAC,MAAM;IAA9D;;QAKW,UAAK,GAAG;YACX,OAAO,EAAE,uCAAuC;YAChD,WAAW,EAAE,GAAG,EAAE,CAAC,EAAqC;SAC3D,CAAA;IAuCL,CAAC;IAnCU,MAAM;QACT,OAAO;YACH,IAAI,EAAE,EAAE,CAAC,UAAU,CAAC,KAAK;YACzB,GAAG,EAAE,CAAC,IAAgB,EAAE,EAAE;gBACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC9B,CAAC;YACD,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,GAAG;YACT,SAAS,EAAE,QAAQ;YACnB,UAAU,EAAE,EAAE;YACd,GAAG,EAAE,oCAAoC;YACzC,SAAS,EAAE,CAAC;oBACR,SAAS,EAAE,cAAc;oBACzB,MAAM,EAAC,GAAG,EAAE;wBACR,IAAI,CAAC,SAAS,CAAC,iCAA+B,CAAC,YAAY,CAAC,CAAC;oBACjE,CAAC;iBACJ,CAAC;SACL,CAAC;IACN,CAAC;IAEM,OAAO;QACV,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE;YAClC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACjE,CAAC,EAAE,GAAG,EAAE;YACJ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEM,WAAW;QACd,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IAC/B,CAAC;CACJ,CAAA;AA9CiB,qCAAK,GAAG,kCAAkC,CAAC;AAE3C,4CAAY,GAAG,cAAc,CAAC;AAHnC,+BAA+B;IAD3C,QAAQ,EAAE;GACE,+BAA+B,CA+C3C;SA/CY,+BAA+B","sourcesContent":["import { TextButton } from '@fui/core';\nimport { shortcut } from '@engine/core';\n\n@shortcut()\nexport class ParameterMultiSelectCheckButton extends BI.Widget {\n    public static xtype = 'report-multi-select-check-button';\n\n    public static EVENT_CHANGE = 'EVENT_CHANGE';\n\n    public props = {\n        baseCls: 'bi-multi-select-check-selected-button',\n        valueGetter: () => [] as {text: string; value: string}[],\n    }\n\n    private numberCounter: TextButton;\n\n    public render() {\n        return {\n            type: BI.TextButton.xtype,\n            ref: (_ref: TextButton) => {\n                this.numberCounter = _ref;\n            },\n            hgap: 4,\n            text: '0',\n            textAlign: 'center',\n            textHeight: 16,\n            cls: 'bi-high-light-background count-tip',\n            listeners: [{\n                eventName: 'EVENT_CHANGE',\n                action:() => {\n                    this.fireEvent(ParameterMultiSelectCheckButton.EVENT_CHANGE);\n                },\n            }],\n        };\n    }\n\n    public mounted() {\n        this.numberCounter.element.hover(() => {\n            this.numberCounter.setTag(this.numberCounter.getText());\n            this.numberCounter.setText(BI.i18nText('BI-Check_Selected'));\n        }, () => {\n            this.numberCounter.setText(this.numberCounter.getTag());\n        });\n        this.updateValue();\n    }\n    \n    public updateValue() {\n        const count = this.options.valueGetter().length;\n        this.numberCounter.setText(`${count}`);\n        this.setVisible(count > 0);\n    }\n}\n"]}