{"version":3,"file":"multiselectswitcher.js","sourceRoot":"","sources":["../../../../src/modules/tag_combo_checkbox/multiselectcombo/multiselectswitcher.ts"],"names":[],"mappings":"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","sourcesContent":["import { shortcut } from '@engine/core';\nimport { ParameterMultiSelectCheckButton } from './multiselectcheckbutton';\nimport { ParameterMultiSelectCheckPane } from './multiselectcheckpane';\nimport { ParameterSingleSelectPopup } from '../../combo/singleselectcombo/singleselectpopup';\nimport { Switcher } from '@fui/core';\n\n@shortcut()\nexport class ParameterMultiSelectSwitcher extends BI.Widget {\n    public static xtype = 'report-multi-select-switcher';\n\n    public static EVENT_BEFORE_POPUPVIEW = 'EVENT_BEFORE_POPUPVIEW';\n    public static EVENT_CHANGE = 'EVENT_CHANGE';\n\n    public props = {\n        baseCls: 'bi-multi-select-check-selected-switcher',\n        valueGetter: () => [] as {text: string; value: string}[],\n        popupGetter: () => ParameterSingleSelectPopup,\n        itemHeightGetter: () => 24,\n    }\n    \n    private switcher: Switcher;\n    private checkPane: ParameterMultiSelectCheckPane;\n    private checkButton: ParameterMultiSelectCheckButton;\n\n    private afterInit = false;\n    private afterClick = false;\n    \n    public render() {\n        const { valueGetter, itemHeightGetter } = this.options;\n\n        return {\n            type: BI.Switcher.xtype,\n            ref: (_ref: Switcher) => {\n                this.switcher = _ref;\n            },\n            trigger: '',\n            toggle: false,\n            el: {\n                type: ParameterMultiSelectCheckButton.xtype,\n                ref: (_ref: ParameterMultiSelectCheckButton) => {\n                    this.checkButton = _ref;\n                },\n                valueGetter,\n                listeners: [{\n                    eventName: ParameterMultiSelectCheckButton.EVENT_CHANGE,\n                    action: () => {\n                        this.afterClick = true;\n                        if (this.afterInit) {\n                            this.showView();\n                        }\n\n                        this.fireEvent(ParameterMultiSelectSwitcher.EVENT_CHANGE);\n                    },\n                }, {\n                    eventName: BI.Events.VIEW,\n                    action: (visiblity: boolean) => {\n                        this.fireEvent(BI.Events.VIEW, visiblity);\n                    },\n                }],\n            },\n            popup: {\n                type: ParameterMultiSelectCheckPane.xtype,\n                ref: (_ref: ParameterMultiSelectCheckPane) => {\n                    this.checkPane = _ref;\n                },\n                valueGetter,\n                itemHeightGetter,\n                listeners: [{\n                    eventName: ParameterMultiSelectCheckPane.EVENT_CHANGE,\n                    action: () => {\n                        this.switcher.hideView();\n                    },\n                }],\n            },\n            listeners: [{\n                eventName: BI.Switcher.EVENT_BEFORE_POPUPVIEW,\n                action: () => {\n                    this.fireEvent(ParameterMultiSelectSwitcher.EVENT_BEFORE_POPUPVIEW);\n                },\n            }],\n        };\n    }\n\n    public setAdapter(adapter: any) {\n        this.switcher.setAdapter(adapter);\n    }\n    \n    public showView() {\n        this.switcher.showView();\n    }\n\n    public hideView() {\n        this.switcher.hideView();\n    }\n\n    public updateValue() {\n        this.checkPane && this.checkPane.updateValue();\n        this.checkButton.updateValue();\n    }\n\n    public setValue(v: {text: string;value: string;}[]) {\n        this.switcher.setValue(v);\n        this.updateValue();\n    }\n\n    public initSwitcher() {\n        if (!this.afterInit) {\n            this.setAdapter(this.options.popupGetter());\n\n            if (this.afterClick) {\n                this.showView();\n            }\n        }\n        this.afterInit = true;\n    }\n}\n"]}