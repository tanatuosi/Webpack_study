{"version":3,"file":"multiselectpopup.js","sourceRoot":"","sources":["../../../../src/modules/tag_combo_checkbox/multiselectcombo/multiselectpopup.ts"],"names":[],"mappings":"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","sourcesContent":["import { shortcut } from '@engine/core';\nimport { ListPane, Loader, MultiSelectBar, TextButton, VTapeLayout } from '@fui/core';\n\n@shortcut()\nexport class ParameterMultiSelectPopup extends BI.Widget {\n    public static xtype = 'report-multi-select-popup';\n\n    public static EVENT_CHANGE = 'EVENT_CHANGE';\n    public static EVENT_CONFIRM = 'EVENT_CONFIRM';\n    public static EVENT_CLEAR = 'EVENT_CLEAR';\n    public static EVENT_SELECT_ALL = 'EVENT_SELECT_ALL';\n    public static EVENET_ADD_ITEM = 'EVENET_ADD_ITEM';\n    public static EVENT_SWITCH_STATE = 'EVENT_SWITCH_STATE';\n    public static EVENT_RESIZE = 'EVENT_RESIZE';\n    public static EVENT_LOADED = 'EVENT_LOADED';\n    public static EVENT_LOADING = 'EVENT_LOADING';\n\n    protected pane: ListPane;\n\n    public props = {\n        itemsCreator: BI.emptyFn as Function,\n        keywordGetter: () => undefined as undefined | string,\n        valueGetter: undefined as undefined | (() => {text: string; value: string}[]),\n        unmatchedValueGetter: () => [] as {text: string; value: string}[],\n        itemHeightGetter: () => 24,\n        minWidth: 135,\n        maxHeight: 400,\n        height: 96 as number | undefined,\n        value: [] as {text: string;value: string;}[],\n        customData: true,\n        repopulateGetter: () => false,\n    }\n\n    protected allSelectButton: MultiSelectBar;\n\n    protected addTextBtn: TextButton;\n\n    private unmatchedValues: {text: string;value: string;}[] = [];\n\n    private values: {text: string;value: string;}[] = [];\n\n    private hasNext = false;\n\n    private vtapeWrapper: VTapeLayout;\n\n    private loader: Loader;\n\n    public render() {\n        const { itemsCreator, itemHeightGetter, keywordGetter, value } = this.options;\n\n        let loadTotal = false, times = 1;\n\n        this.values = value.slice(0);\n\n        const itemHeight = itemHeightGetter();\n\n        return {\n            type: BI.VTapeLayout.xtype,\n            ref: (_ref: VTapeLayout) => {\n                this.vtapeWrapper = _ref;\n            },\n            items: [{\n                el: {\n                    type: BI.VerticalLayout.xtype,\n                    scrolly: false,\n                    items: [{\n                        type: BI.MultiSelectBar.xtype,\n                        ref: (_ref: MultiSelectBar) => {\n                            this.allSelectButton = _ref;\n                        },\n                        cls: 'bi-list-item-active',\n                        invisible: true,\n                        height: itemHeight,\n                        iconWrapperWidth: Math.min(36 / 24 * this.options.itemHeightGetter(), 36),\n                        listeners: [{\n                            eventName: BI.MultiSelectBar.EVENT_CHANGE,\n                            action: (isSelected: boolean) => {\n                                isSelected ? this.setAllSelected() : this.setAllUnselected();\n\n                                if (isSelected && !loadTotal && this.hasNext) {\n                                    loadTotal = true;\n\n                                    itemsCreator({\n                                        loadTotal: true,\n                                        times: times + 1,\n                                    }, (data: {items: any[], hasNext: boolean}) => {\n                                        this.hasNext = data.hasNext;\n                \n                                        data.items = this.transformItems(data.items);\n\n                                        data.items.forEach(item => {\n                                            item.selected = true;\n                                        });\n                \n                                        this.pane.addItems(this.createItems(data.items));\n\n                                        this.fireEvent(ParameterMultiSelectPopup.EVENT_SELECT_ALL, true);\n                                    });\n                                } else {\n                                    this.fireEvent(ParameterMultiSelectPopup.EVENT_SELECT_ALL, isSelected);\n                                }\n                            },\n                        }],\n                    }, {\n                        type: BI.TextButton.xtype,\n                        ref: (_ref: TextButton) => {\n                            this.addTextBtn = _ref;\n                        },\n                        invisible: true,\n                        text: BI.i18nText('BI-Basic_Click_To_Add_Text', ''),\n                        height: itemHeight,\n                        cls: 'bi-high-light',\n                        hgap: 5,\n                        handler: () => {\n                            this.fireEvent(ParameterMultiSelectPopup.EVENET_ADD_ITEM, keywordGetter(), keywordGetter(), true);\n                        },\n                    }],\n                },\n                height: itemHeight,\n            }, {\n                type: BI.ListPane.xtype,\n                ref: (_ref: ListPane) => {\n                    this.pane = _ref;\n                },\n                itemsCreator: (op: any, callback: Function) => {\n                    times = op.times;\n\n                    const keyword = keywordGetter();\n\n                    op.keyword = keyword;\n\n                    op.loadTotal = loadTotal && this.hasNext;\n\n                    itemsCreator(op, (data: {items: any[], hasNext: boolean}) => {\n                        this.hasNext = data.hasNext;\n\n                        data.items = this.transformItems(data.items);\n\n                        callback(this.createItems(data.items));\n\n                        if (op.times === 1) {\n                            this.resize(BI.size(data.items) > 0);\n                        }\n\n                        this.checkAllSelected();\n                    });\n                },\n                el: {\n                    type: BI.Loader.xtype,\n                    ref: (_ref: Loader) => {\n                        this.loader = _ref;\n                    },\n                    el: {\n                        chooseType: BI.ButtonGroup.CHOOSE_TYPE_MULTI,\n                    },\n                    layouts: [{\n                        type: BI.VerticalLayout.xtype,\n                        height: 400,\n                        minHeight: 400,\n                        scrolly: true,\n                    }],\n                },\n                hasNext: () => this.hasNext,\n                listeners: [{\n                    eventName: BI.ListPane.EVENT_CHANGE,\n                    action: () => {\n                        this.checkAllSelected();\n                    },\n                }, {\n                    eventName: BI.Pane.EVENT_LOADED,\n                    action: () => {\n                        this.fireEvent(ParameterMultiSelectPopup.EVENT_LOADED);\n                    },\n                }, {\n                    eventName: BI.Pane.EVENT_LOADING,\n                    action: () => {\n                        this.fireEvent(ParameterMultiSelectPopup.EVENT_LOADING);\n                    },\n                }],\n            }, {\n                el: {\n                    type: BI.ButtonGroup.xtype,\n                    cls: 'list-view-toolbar bi-high-light bi-split-top',\n                    items: BI.createItems([{\n                        text: BI.i18nText('BI-Basic_Clears'),\n                        handler: () => {\n                            this.fireEvent(ParameterMultiSelectPopup.EVENT_CLEAR);\n                        },\n                    }, {\n                        text: BI.i18nText('BI-Basic_Sure'),\n                        handler: () => {\n                            this.fireEvent(ParameterMultiSelectPopup.EVENT_CONFIRM);\n                        },\n                    }], {\n                        type: BI.TextButton.xtype,\n                        once: false,\n                        shadow: true,\n                        isShadowShowingOnSelected: true,\n                    }),\n                    layouts: [{\n                        type: BI.CenterLayout.xtype,\n                        hgap: 0,\n                        vgap: 0,\n                    }],\n                },\n                height: itemHeight,\n            }],\n        };\n    }\n\n    protected transformItems(items: {text: string; value: string, [key: string]: any}[]) {\n        let i = 0;\n\n        while (i < this.unmatchedValues.length) {\n            const selectedValue = this.unmatchedValues[i];\n\n            const itemIndex = items.findIndex(item => item.text === selectedValue.text && item.value === selectedValue.value);\n\n            if (itemIndex !== -1) {\n                items.splice(itemIndex, 1, selectedValue);\n\n                this.unmatchedValues.splice(i, 1);\n            } else {\n                i += 1;\n            }\n        }\n\n        items.forEach(item => {\n            const index = this.values.findIndex(selectedValue => item.text === selectedValue.text && item.value === selectedValue.value);\n\n            if (index !== -1) {\n                item.selected = true;\n\n                this.values.splice(index, 1);\n            }\n        });\n\n        const newItems = this.values.map(value => {\n            return {\n                ...value,\n                selected: true,\n            };\n        });\n\n        this.unmatchedValues = this.unmatchedValues.concat(this.values);\n\n        this.values = [];\n\n        return items.concat(newItems);\n    }\n\n    public resize(isHeaderVisible: boolean) {\n        const { itemHeightGetter, keywordGetter } = this.options;\n\n        const itemHeight = itemHeightGetter();\n        \n        this.allSelectButton.setVisible(isHeaderVisible);\n\n        BI.nextTick(() => {\n            this.pane.setTipVisible(!isHeaderVisible);\n\n            if (!keywordGetter()) {\n                this.vtapeWrapper.element.css('height', (this.loader.element.height() || itemHeight) + 2 * itemHeight);\n                this.vtapeWrapper.attr('items')[0].height = isHeaderVisible ? itemHeight : 0;\n                this.vtapeWrapper.resize();\n                this.fireEvent(ParameterMultiSelectPopup.EVENT_RESIZE);\n            }\n        });\n    }\n\n    public getValue() {\n        /**\n         * https://work.fineres.com/browse/REPORT-79990\n         * 自依赖下拉控件的 itemsCreator 在第一次获取依赖值时返回为空\n         */\n        const buttons: MultiSelectBar[] = this.pane.getAllButtons();\n\n        return !BI.isEmptyArray(buttons) ? buttons.filter(btn => btn.isSelected())\n            .map(btn => {\n                return {\n                    text: btn.attr('text'),\n                    value: btn.getValue(),\n                };\n            }) : this.values;\n    }\n\n    public getAllLeaves() {\n        return (this.pane.getAllButtons() as any[])\n            .map(btn => {\n                return {\n                    text: btn.attr('text'),\n                    value: btn.getValue(),\n                };\n            });\n    }\n\n    public populate() {\n        this.pane.populate();\n    }\n\n    public setAllSelected() {\n        (this.pane.getAllButtons() as any[]).forEach(btn => {\n            btn.setSelected(true);\n        });\n    }\n\n    public setAllUnselected() {\n        (this.pane.getAllButtons() as any[]).forEach(btn => {\n            btn.setSelected(false);\n        });\n    }\n\n    private createItems(items: any[]) {\n        return BI.createItems(items, {\n            type: BI.MultiSelectItem.xtype,\n            cls: 'bi-list-item-active',\n            iconWrapperWidth: Math.min(36 / 24 * this.options.itemHeightGetter(), 36),\n            height: this.options.itemHeightGetter(),\n            keyword: this.options.keywordGetter(),\n            listeners: [{\n                eventName: BI.MultiSelectItem.EVENT_CHANGE,\n                action: (v: any, btn: any) => {\n                    this.fireEvent(ParameterMultiSelectPopup.EVENT_CHANGE, btn.attr('text'), v, btn.isSelected());\n                },\n            }],\n        });\n    }\n\n    public checkAllSelected() {\n        const isAllSelected = !this.hasNext && (this.pane.getAllButtons() as any[]).every(btn => btn.isSelected());\n\n        if (isAllSelected) {\n            this.allSelectButton.setSelected(true);\n\n            return;\n        }\n\n        const isAllNotSelected = (this.pane.getAllButtons() as any[]).every(btn => !btn.isSelected());\n\n        isAllNotSelected ? this.allSelectButton.setSelected(false) : this.allSelectButton.setHalfSelected(true);\n    }\n\n    public switchState(text: string, value: string, $isSelected?: boolean) {\n        const isSelected = BI.isNull($isSelected) ? true : $isSelected;\n\n        const btn = (this.pane.getAllButtons() as any[])\n            .find(btn => btn.attr('text') === text\n                && btn.getValue() === value\n                && (BI.isNotNull($isSelected)\n                    ? btn.isSelected() === !isSelected\n                    : true),\n            );\n\n        if (btn) {\n            btn.setSelected(isSelected);\n        } else {\n            this.pane.addItems(this.createItems([{\n                text,\n                value,\n                selected: isSelected,\n            }]));\n\n            this.unmatchedValues.push({ text, value });\n        }\n\n        this.resize(true);\n        this.checkAllSelected();\n        this.fireEvent(ParameterMultiSelectPopup.EVENT_SWITCH_STATE);\n    }\n\n    public switchStates(leaves: {text: string, value: string, [key: string]: any}[], isSelected: boolean) {\n        const items = leaves.slice(0);\n\n        if (!this.options.repopulateGetter()) {\n            (this.pane.getAllButtons() as any[]).forEach(btn => {\n                const index = items.findIndex(({ text, value }) => btn.attr('text') === text && btn.getValue() === value);\n    \n                if (index !== -1) {\n                    btn.setSelected(isSelected);\n                    \n                    items.splice(index, 1);\n                }\n            });\n        }\n\n        if (BI.size(items) > 0) {\n            items.forEach(item => {\n                item.selected = isSelected;\n            });\n\n            this.pane.addItems(this.createItems(items));\n\n            if (this.options.repopulateGetter()) {\n                this.values = this.values.concat(items);\n            } else {\n                this.unmatchedValues = this.unmatchedValues.concat(items);\n            }\n        }\n\n        this.checkAllSelected();\n        this.fireEvent(ParameterMultiSelectPopup.EVENT_SWITCH_STATE);\n    }\n\n    public setValue(vals: {text: string, value: string}[]) {\n        this.setAllUnselected();\n        this.switchStates(vals, true);\n    }\n\n    public getUnmatchedValues() {\n        return this.unmatchedValues;\n    }\n\n    public getAllButtons() {\n        return this.pane.getAllButtons();\n    }\n\n    public resetState() {\n        this.unmatchedValues = [];\n\n        this.values = [];\n\n        this.hasNext = false;\n    }\n}\n"]}