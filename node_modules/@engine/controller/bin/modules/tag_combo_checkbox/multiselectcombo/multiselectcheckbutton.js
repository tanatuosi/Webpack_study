var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ParameterMultiSelectCheckButton_1;
import { shortcut } from '@engine/core';
let ParameterMultiSelectCheckButton = ParameterMultiSelectCheckButton_1 = class ParameterMultiSelectCheckButton extends BI.Widget {
    constructor() {
        super(...arguments);
        this.props = {
            baseCls: 'bi-multi-select-check-selected-button',
            valueGetter: () => [],
        };
    }
    render() {
        return {
            type: BI.TextButton.xtype,
            ref: (_ref) => {
                this.numberCounter = _ref;
            },
            hgap: 4,
            text: '0',
            textAlign: 'center',
            textHeight: 16,
            cls: 'bi-high-light-background count-tip',
            listeners: [{
                    eventName: 'EVENT_CHANGE',
                    action: () => {
                        this.fireEvent(ParameterMultiSelectCheckButton_1.EVENT_CHANGE);
                    },
                }],
        };
    }
    mounted() {
        this.numberCounter.element.hover(() => {
            this.numberCounter.setTag(this.numberCounter.getText());
            this.numberCounter.setText(BI.i18nText('BI-Check_Selected'));
        }, () => {
            this.numberCounter.setText(this.numberCounter.getTag());
        });
        this.updateValue();
    }
    updateValue() {
        const count = this.options.valueGetter().length;
        this.numberCounter.setText(`${count}`);
        this.setVisible(count > 0);
    }
};
ParameterMultiSelectCheckButton.xtype = 'report-multi-select-check-button';
ParameterMultiSelectCheckButton.EVENT_CHANGE = 'EVENT_CHANGE';
ParameterMultiSelectCheckButton = ParameterMultiSelectCheckButton_1 = __decorate([
    shortcut()
], ParameterMultiSelectCheckButton);
export { ParameterMultiSelectCheckButton };
//# sourceMappingURL=multiselectcheckbutton.js.map