{"version":3,"file":"tag_combo_checkbox_next.js","sourceRoot":"","sources":["../../../src/modules/tag_combo_checkbox/tag_combo_checkbox_next.ts"],"names":[],"mappings":"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","sourcesContent":["import { fetchParamControlAttr, fetchWidgetViewValue } from '../controller.crud';\nimport { transformControlAttrs, transformValue2TagComboNextValue, preTransformValue2TagComboNextValue, setTagComboCheckboxStyle, setTagComboCheckboxPopupStyle } from './tag_combo_checkbox.service';\nimport { shortcut } from '@engine/core';\nimport { AbstractParameterControllerWidget, ControllerValidation } from '../controller.abstract';\nimport { ParameterControllerForm, ParameterControllerBasicProps4Item, ParameterControllerPropsWithEditor, ParameterControllerPropsWithCombo, ParameterControllerBasicProps4Render, ParameterControllerDelayer } from '../controller';\nimport { LimitCount, transformControlAttrData, setComboFontSize, fetchParamViewValue } from '../controller.service';\nimport { WIDTH, HEIGHT } from '../controller.constants';\nimport { ParameterMultiSelectCombo } from './multiselectcombo/multiselectcombo';\nimport '../combo/combo.less';\n\n@shortcut()\nexport class ParameterTagComboCheckboxNext extends AbstractParameterControllerWidget {\n    public static xtype = 'report.main.parameter_container.controller.tag_combo_checkbox_next';\n\n    private combo: ParameterMultiSelectCombo;\n\n    public static BASE_CLS = 'report-main-parameter-container-controller-tag-combo-checkbox';\n\n    public props: ParameterControllerTagComboCheckboxProps4RenderProps & ParameterControllerForm & ParameterControllerDelayer = {\n        baseCls: ParameterTagComboCheckboxNext.BASE_CLS,\n        $testId: 'report-main-parameter-container-controller-tag-combo-checkbox',\n        width: WIDTH,\n        height: HEIGHT,\n        watermark: '',\n        value: '',\n        fontSize: 12,\n        needSubmit: false,\n        disabled: false,\n        invisible: false,\n        allowBlank: true,\n        errorMsg: BI.i18nText('Fine-Report_Preview_Can_Not_Null'),\n        controlAttr: {\n            data: [],\n            value: '',\n        },\n        customData: true,\n        needCheckCustomData: true,\n        directEdit: true,\n        noRepeat: true,\n        autoMode: true,\n        mode: 'remote',\n        searchTime: 200,\n        widgetName: '',\n        delimiter: '',\n        supportTag: true,\n        returnArray: true,\n        startSymbol: '',\n        endSymbol: '',\n        getDependenceByWidget: () => [],\n        getWidgetDependenceValueByWidget: () => {\n            return {};\n        },\n        add2WaitingQueue: () => '',\n        removeFromWaitingQueue: () => {},\n        allowCount: false,\n        controlAttrFetcher: fetchParamControlAttr,\n        extraOptsGetter: () => {\n            return {};\n        },\n        viewValueFetcher: fetchWidgetViewValue,\n        allowBg: true,\n        sonHeight: 24,\n    }\n\n    public get editComp() {\n        return this.combo;\n    }\n\n    // 12px配24px的行高\n    private ratio = 2;\n\n    public render() {\n        const { width, height, value, watermark, fontSize, widgetName, controlAttr, customData, directEdit, delimiter, returnArray, allowCount, controlAttrFetcher, allowBg, startSymbol, endSymbol } = this.options;\n\n        return {\n            type: ParameterMultiSelectCombo.xtype,\n            cls: `${setComboFontSize(ParameterTagComboCheckboxNext.BASE_CLS, {\n                width, height, fontSize,\n            })} ${allowBg ? 'bi-card' : ''}`,\n            ref: (_ref: ParameterMultiSelectCombo) => {\n                this.combo = _ref;\n            },\n            allowEdit: directEdit,\n            allowCount,\n            itemHeightGetter: () => this.options.sonHeight,\n            // itemHeight: Math.max(this.ratio * fontSize, 24),\n            itemsCreator: (options: {\n                keyword?: string,\n                selectedValues: string[],\n                times: number,\n                type: number,\n                loadTotal?: boolean,\n            }, callback: Function) => {\n                controlAttrFetcher(widgetName, {\n                    startIndex: LimitCount * (options.times - 1),\n                    limitIndex: options.loadTotal ? undefined : LimitCount * options.times,\n                    ...options.keyword ? { filter: options.keyword } : {},\n                    ...this.getRequestOpts(),\n                })\n                    .then(items => {\n                        const dataList = transformControlAttrData(items);\n\n                        this.options.controlAttr.data = (this.options.controlAttr.data || []).concat(dataList);\n        \n                        callback({\n                            items: transformControlAttrs(dataList, [], {\n                                $testId: 'report-main-parameter-container-controller-tag-combo-checkbox-item',\n                            }),\n                            hasNext: options.loadTotal ? false : items.length >= LimitCount,\n                        });\n                    });\n            },\n            width,\n            height,\n            value: transformValue2TagComboNextValue(value, transformControlAttrData(controlAttr.data), delimiter, returnArray, true, startSymbol, endSymbol),\n            watermark,\n            customData,\n            listeners: [{\n                eventName: ParameterMultiSelectCombo.EVENT_CONFIRM,\n                action: () => {\n                    const result = !this.silence && this.fireEvent('stopedit');\n\n                    result !== false && this.fireEvent('EVENT_CHANGE');\n                },\n            }, {\n                eventName: ParameterMultiSelectCombo.EVENT_BEFORE_EDIT,\n                action: () => {\n                    this.hideBubble();\n\n                    !this.silence && this.fireEvent('beforeedit');\n                },\n            }, {\n                eventName: ParameterMultiSelectCombo.EVENT_AFTER_EDIT,\n                action: () => {\n                    !this.silence && this.fireEvent('afteredit');\n                },\n            }, {\n                eventName: ParameterMultiSelectCombo.EVENT_CLICK_ITEM,\n                action: () => {\n                    this.hideBubble();\n\n                    !this.silence && this.fireEvent('click');\n                },\n            }],\n        };\n    }\n\n    public mounted() {\n        super.mounted();\n        const { fontSize } = this.options;\n\n        this.setPopupStyle({\n            fontSize: `${fontSize}px`,\n            itemHeight: `${fontSize * this.ratio}px`,\n        });\n    }\n\n    public async updateControllAttrByValue(v: string | number | (string | number)[], controlData?: {text: string;value: string;}[]) {\n        const { delimiter, returnArray, customData, add2WaitingQueue, removeFromWaitingQueue, widgetName, viewValueFetcher, startSymbol, endSymbol } = this.options;\n\n        if (!controlData || BI.isEmptyArray(controlData)) {\n            const result: {text: string;value: string;}[] = [];\n\n            const id = add2WaitingQueue();\n\n            for (const value of preTransformValue2TagComboNextValue(v, delimiter, returnArray, startSymbol, endSymbol)) {\n                const re = await fetchParamViewValue(\n                    widgetName,\n                    customData,\n                    viewValueFetcher,\n                    {\n                        __text__: value,\n                        ...this.getRequestOpts(),\n                    });\n\n                if (BI.isNull(re)) {\n                    customData && result.push({ text: `${value}`, value: `${value}` });\n                } else {\n                    result.push(re);\n                }\n\n                this.options.controlAttr.data = (this.options.controlAttr.data || []).concat(result || []);\n            }\n\n            removeFromWaitingQueue(id);\n\n            return result;\n        }\n\n        return transformValue2TagComboNextValue(\n            v,\n            transformControlAttrData(controlData),\n            delimiter,\n            returnArray,\n            customData,\n            startSymbol,\n            endSymbol,\n        );\n    }\n\n    public async setControllerValue(v: string | number | (string | number)[], controlData?: {text: string;value: string;}[]) {\n        this.combo.setValue(await this.updateControllAttrByValue(v, controlData));\n    }\n\n    public setValue(v: string | number | (string | number)[], controlData?: {text: string;value: string;}[]) {\n        this.setControllerValue(v, controlData)\n            .then(() => {\n                this.fireEvent('EVENT_SET_VALUE');\n\n                !this.silence && controlData && this.fireEvent('afteredit');\n            });\n    }\n\n    public preGetValidation(): ControllerValidation {\n        const { allowBlank, value, errorMsg } = this.options;\n\n        return allowBlank || !BI.isEmpty(value) ? {\n            result: true,\n        } : {\n            result: false,\n            errorMsg,\n        };\n    }\n\n    private validateCustomData() {\n        const { controlAttr } = this.options;\n\n        const values = this.combo.getValue();\n\n        const dataAttr = transformControlAttrData(controlAttr.data);\n\n        if (BI.isEmptyArray(values)) {\n            return true;\n        }\n\n        const validation = values.every(item => dataAttr.some(data => item.text === data.text && item.value === data.value));\n\n        return validation;\n    }\n\n    public postGetValidation(): ControllerValidation {\n        const { allowBlank, errorMsg, customData, needCheckCustomData } = this.options;\n\n        const value = this.combo.getValue();\n\n        const validation = customData || !needCheckCustomData || this.validateCustomData();\n        \n        if (!validation) {\n            return {\n                result: false,\n                errorMsg: BI.i18nText('Fine-Report_Preview_Not_In_List'),\n            };\n        }\n\n        if (BI.isEmptyArray(value || []) && !allowBlank) {\n            return {\n                result: false,\n                errorMsg,\n            };\n        }\n\n        return { result: true };\n    }\n\n    public postValidateAndToast() {\n        const validation = this.getValidation();\n\n        if (validation.result) {\n            return true;\n        }\n\n        this.showBubble(validation.errorMsg);\n\n        return false;\n    }\n\n    public emitManualStopEditEvent() {\n        this.fireEvent('stopedit');\n    }\n\n    public getValue() {\n        const { delimiter, returnArray, startSymbol, endSymbol } = this.options;\n        \n        const value = Array.from(new Set(\n            this.combo.getValue()\n                .map(v => v.value)\n                .filter(v => BI.isNotEmptyString(v)),\n        ));\n\n        if (!returnArray) {\n            return `${startSymbol}${value.join(delimiter)}${endSymbol}`;\n        }\n\n        return value;\n    }\n\n    public reset() {\n        this.combo.reset();\n    }\n\n    public reloadControlAttr() {\n        this.reset();\n\n        this.combo.setRepopulate(true);\n    }\n\n    public setInteractValue(v: {\n        data: {\n            text: string;\n            value: string;\n        }[],\n        value: string | number | (string | number)[]\n    }) {\n        this.combo.setRepopulate(true);\n\n        this.setControllerValue(v.value, v.data);\n    }\n\n    public resize(width: number, height: number) {\n        const restoreValue = this.combo.getValue();\n\n        super.resize(width, height);\n\n        this.combo.setValue(restoreValue);\n    }\n\n    private getRequestOpts() {\n        const { getWidgetDependenceValueByWidget, getDependenceByWidget, extraOptsGetter } = this.options;\n\n        const dependences = getWidgetDependenceValueByWidget(this);\n\n        return {\n            dependence: dependences,\n            reload: BI.isNotEmptyArray(getDependenceByWidget(this)),\n            ...extraOptsGetter(),\n        };\n    }\n\n    public getText() {\n        return this.combo.getValue()\n            .map(({ text }) => text)\n            .join(this.options.delimiter);\n    }\n\n    // 自定义js接口，控件内部不允许使用\n    public get ck_el_array() {\n        return this.combo.getAllButtons();\n    }\n\n    public getAdapter() {\n        return this.combo.getAdapter();\n    }\n\n    public setText(v: string) {\n        this.combo.setText(v);\n    }\n\n    public setStyle(styles: Parameters<AbstractParameterControllerWidget['setStyle']>[0]) {\n        this.combo.element.addClass(setTagComboCheckboxStyle(styles));\n    }\n\n    public setPopupStyle(styles: {\n        itemHeight: string;\n        fontSize: string;\n    }) {\n        this.options.sonHeight = parseInt(styles.itemHeight, 10);\n\n        this.combo.element.addClass(setTagComboCheckboxPopupStyle(styles));\n    }\n\n    public setWaterMark(v: string) {\n        this.options.watermark = v;\n\n        this.combo.setWaterMark(v);\n    }\n\n    public focus() {\n        this.combo.focus();\n    }\n\n    public blur() {\n        this.combo.blur();\n    }\n}\n\n\nexport interface ParameterControllerTagComboCheckboxProps4RenderProps extends ParameterControllerTagComboCheckboxProps4Render4Item {\n    baseCls: string;\n    $testId: string;\n    controlAttrFetcher: typeof fetchParamControlAttr,\n    extraOptsGetter: () => {[key: string]: any};\n    viewValueFetcher: typeof fetchWidgetViewValue;\n}\n\n/**\n * 下拉复选框\n */\nexport interface ParameterControllerTagComboCheckboxProps4Render4Item extends ParameterControllerBasicProps4Item, ParameterControllerPropsWithEditor, ParameterControllerPropsWithCombo {\n\n    /**\n     * 下拉框显示选择值之间的分隔符\n     */\n    delimiter: string;\n\n    /**\n     * 支持标签显示\ttrue 表示支持, false表示不支持\n     */\n    supportTag: boolean;\n    widgetName: ParameterControllerBasicProps4Render['widgetName'];\n\n    /**\n     * 是否返回数组\n     */\n    returnArray: boolean;\n\n    /**\n     * 起始符\n     */\n    startSymbol: string;\n\n    /**\n     * 结束符\n     */\n    endSymbol: string;\n\n    /**\n     * 允许显示计数\n     */\n    allowCount: boolean;\n\n    /**\n     * 是否校验自定义值\n     */\n    needCheckCustomData: boolean;\n\n    /**\n     * 下拉面板元素高度\n     */\n    sonHeight: number;\n}\n\nexport interface ParameterControllerTagComboCheckboxProps4Render extends ParameterControllerBasicProps4Render, ParameterControllerTagComboCheckboxProps4Render4Item {}\n"]}