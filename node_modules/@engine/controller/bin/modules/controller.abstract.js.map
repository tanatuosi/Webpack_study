{"version":3,"file":"controller.abstract.js","sourceRoot":"","sources":["../../src/modules/controller.abstract.ts"],"names":[],"mappings":"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","sourcesContent":["import { Widget } from '@fui/core';\n\nexport abstract class AbstractParameterControllerWidget extends BI.Widget {\n    private bubbleName = BI.UUID();\n\n    protected silence: boolean = false;\n\n    public props: {\n        width: number;\n        height: number;\n        fontSize: number;\n    };\n\n    private isUnavailableState(): boolean {\n        return !this.isEnabled() || !this.isVisible();\n    }\n\n    /**\n     * 控件取值\n     */\n    abstract getValue(): any;\n\n    /**\n     * 控件校验\n     */\n    public validate(): boolean {\n        return this.getValidation().result === true;\n    }\n\n    /**\n     * 手动发出编辑结束事件\n     */\n    public emitManualStopEditEvent() {}\n\n    /**\n     * 设置事件状态\n     */\n    public setSilent(isSilent: boolean) {\n        this.silence = isSilent;\n    }\n\n    /**\n     * 控件赋值\n     */\n    abstract setControllerValue(...args: any[]): Promise<void>;\n\n    /**\n     * 赋值\n     */\n    public setValue(...args: any[]) {\n        Promise.resolve(this.setControllerValue(...args))\n            .then(() => {\n                this.hideBubble();\n                \n                this.fireEvent('EVENT_SET_VALUE');\n            });\n    }\n\n    /**\n     * 自定义js接口，控件内部不允许使用\n     */\n    public setText(...args: any[]) {\n        this.setValue(...args);\n    }\n\n    /**\n     * 控件设置联动值\n     */\n    abstract setInteractValue(..._args: any[]): void | Promise<void>;\n\n    /**\n     * 控件重置值\n     */\n    abstract reset(): void;\n\n    /**\n     * 基于原始value的一种校验，仅用于校验invisible以及disabled的控件\n     */\n    abstract preGetValidation(): ControllerValidation;\n\n    /**\n     * 正常情况下的校验\n     */\n    abstract postGetValidation(): ControllerValidation;\n\n    /**\n     * 基于原始value的一种校验，仅用于校验invisible以及disabled的控件\n     */\n    private preValidateAndToast(): boolean {\n        const validation = this.preGetValidation();\n\n        if (validation.result !== true) {\n            BI.Msg.toast(`${this.attr('widgetName')}: ${validation.errorMsg}`, { level: 'error' });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * 正常情况校验\n     */\n    abstract postValidateAndToast(): boolean;\n\n    /**\n     * 获取校验结果\n     */\n    public getValidation(): ControllerValidation {\n        if (this.isUnavailableState()) {\n            return this.preGetValidation();\n        }\n\n        return this.postGetValidation();\n    }\n\n    /**\n     * 校验以及报错\n     */\n    public validateAndToast(): boolean {\n        if (this.isUnavailableState()) {\n            return this.preValidateAndToast();\n        }\n\n        return this.postValidateAndToast();\n    }\n\n    /**\n     * 校验并Msg toast\n     */\n    public validateAndMsgToast(name: string = this.attr('widgetName') || ''): boolean {\n        const validation = this.getValidation();\n\n        if (validation.result) {\n            return true;\n        }\n\n        BI.Msg.toast(`${name}: ${validation.errorMsg}`, { level: 'error' });\n\n        return false;\n    }\n\n    public showBubble(v: string): void {\n        BI.Bubbles.show(this.bubbleName, v, this, {\n            offsetStyle: 'left',\n        });\n    }\n\n    public hideBubble(): void {\n        BI.Bubbles.hide(this.bubbleName, this, {\n            offsetStyle: 'left',\n        });\n    }\n\n    public refresh() {}\n\n    public mounted() {\n        this.fireEvent('afterinit');\n    }\n\n    public resize(width: number, height: number) {\n        const state = this.isEnabled();\n\n        this.preResize(width, height);\n\n        this.setEnable(state);\n    }\n\n    protected preResize(width: number, height: number) {\n        if (this.options.width === width && this.options.height === height) {\n            return false;\n        }\n        this.options.width = width;\n        this.options.height = height;\n\n        this.element.css('width', width);\n\n        this.element.css('height', height);\n\n        // reset 将组件干掉重新创建一遍，重走生命周期到mounted\n        super.reset();\n        \n        return true;\n    }\n\n    public setFontSize(fontSize: number) {\n        this.options.fontSize = fontSize;\n    }\n\n    public getAdapter(): Widget | undefined {\n        return undefined;\n    }\n\n    /**\n     * 清空值并重新加载数据字典，仅有数据字典的生效\n     */\n    public reloadControlAttr() {}\n\n    public focus() {}\n\n    public blur() {}\n\n    /**\n     * 公开接口，设置控件style\n     * @param style\n     */\n    public abstract setStyle(style: {\n        opacity?: number;\n        background?: string;\n        color?: string;\n        border?: string;\n        'border-radius'?: string;\n    }): void;\n\n    public getType() {\n        return this.attr('xtype');\n    }\n\n    /**\n     * 用于提交的值\n     */\n    public getSubmitValue() {\n        const widgetName = this.attr('widgetName');\n\n        return {\n            [widgetName]: this.getValue(),\n        };\n    }\n}\n\nexport type ControllerValidation = {\n    result: true;\n} | {\n    result: false;\n    errorMsg: string;\n}\n"]}