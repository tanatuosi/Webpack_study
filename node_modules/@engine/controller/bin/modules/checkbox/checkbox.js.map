{"version":3,"file":"checkbox.js","sourceRoot":"","sources":["../../../src/modules/checkbox/checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["import { WIDTH, HEIGHT } from '../controller.constants';\nimport { setFontSize } from '../controller.service';\nimport { shortcut } from '@engine/core';\nimport { setCheckboxStyle, transformValue2Boolean } from './checkbox.service';\nimport { ReportMultiSelectItem } from '../components/multiselect_item/multiselect_item';\nimport { ParameterControllerBasicProps4Item, ParameterControllerBasicProps4Render } from '../controller';\nimport { AbstractParameterControllerWidget, ControllerValidation } from '../controller.abstract';\n\n@shortcut()\nexport class ParameterCheckbox extends AbstractParameterControllerWidget {\n    public static xtype = 'report.main.parameter_container.controller.checkbox';\n\n    public static BASE_CLS = 'report-main-parameter-container-controller-checkbo';\n\n    private checkbox: any;\n\n    public props: ParamCheckboxProps = {\n        baseCls: ParameterCheckbox.BASE_CLS,\n        $testId: ParameterCheckbox.BASE_CLS,\n        width: WIDTH,\n        height: HEIGHT,\n        text: '',\n        value: false,\n        disabled: false,\n        invisible: false,\n        needSubmit: false,\n        fontSize: 12,\n        allowBg: true,\n    }\n\n    public render() {\n        const { width, text, value, fontSize } = this.options;\n\n        const checkboxCls = setFontSize(ParameterCheckbox.BASE_CLS, fontSize);\n\n        return {\n            type: BI.VerticalLayout.xtype,\n            scrolly: true,\n            items: [{\n                type: ReportMultiSelectItem.xtype,\n                cls: `${checkboxCls}`,\n                ref: (_ref: any) => {\n                    this.checkbox = _ref;\n                },\n                scale: fontSize / 12,\n                width,\n                text,\n                logic: {\n                    dynamic: true,\n                },\n                selected: transformValue2Boolean(value),\n                iconWrapperWidth: 20,\n                listeners: [{\n                    eventName: BI.MultiSelectItem.EVENT_CHANGE,\n                    action: () => {\n                        !this.silence && this.fireEvent('statechange');\n                        this.fireEvent('EVENT_CHANGE');\n                    },\n                }],\n            }],\n        };\n    }\n\n    public postValidateAndToast() {\n        return true;\n    }\n\n    public preGetValidation(): ControllerValidation {\n        return { result: true };\n    }\n\n    public postGetValidation(): ControllerValidation {\n        return { result: true };\n    }\n\n    public getValue() {\n        return this.checkbox.isSelected();\n    }\n\n    public async setControllerValue(value: any) {\n        this.checkbox.setSelected(transformValue2Boolean(value));\n    }\n\n    public setInteractValue(v: string) {\n        this.setControllerValue(v);\n    }\n\n    public reset() {\n        this.checkbox.setSelected(false);\n    }\n\n    public resize(width: number, height: number) {\n        const restoreValue = this.checkbox.isSelected();\n\n        super.resize(width, height);\n\n        this.checkbox.setSelected(restoreValue);\n    }\n\n    public setStyle(styles: Parameters<AbstractParameterControllerWidget['setStyle']>[0]) {\n        this.checkbox.element.addClass(setCheckboxStyle(styles));\n    }\n\n    public getText() {\n        return this.options.text;\n    }\n}\n\n\nexport interface ParamCheckboxProps extends ParameterControllerCheckboxProps4Render4Item {\n    baseCls: string;\n    $testId: string;\n}\n\nexport interface ParameterControllerCheckboxProps4Render4Item extends Omit<ParameterControllerBasicProps4Item, 'value'> {\n\n    /**\n     * 复选框文本\n     */\n    text: string;\n\n    /**\n     * 复选框状态\t选中为 true, 未选中为 false\n     */\n    value: boolean;\n}\n\nexport interface ParameterControllerCheckboxProps4Render extends ParameterControllerBasicProps4Render, ParameterControllerCheckboxProps4Render4Item {}\n"]}