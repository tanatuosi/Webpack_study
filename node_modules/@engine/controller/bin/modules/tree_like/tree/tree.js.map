{"version":3,"file":"tree.js","sourceRoot":"","sources":["../../../../src/modules/tree_like/tree/tree.ts"],"names":[],"mappings":"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","sourcesContent":["import { shortcut } from '@engine/core';\nimport { ParameterControllerBasicProps4Item, ParameterControllerBasicProps4Render, ParameterControllerDelayer, ParameterControllerForm, ParameterControllerPropsWithTree, ParameterControllerTreeControlAttrData } from '../../controller';\nimport { AbstractParameterControllerWidget } from '../../controller.abstract';\nimport { HEIGHT, WIDTH } from '../../controller.constants';\nimport { fetchNewParamTreeControlAttr, fetchNewParamTreeStructure, fetchOldParamTreeControlAttr } from '../../controller.crud';\nimport { ParameterTreeLike, ParamMultiTreeItem, ParamMultiTreeValue } from '../tree_like';\nimport { getParamTreeLayout, transformTreeDefaultValue } from '../tree_like.service';\nimport { PARAMETER_TREE_BASE_CLS } from './tree.constants';\nimport './tree.less';\nimport { setTreeFontSize, setTreeStyle } from './tree.service';\n\n@shortcut()\nexport class ParameterTree extends ParameterTreeLike {\n    public static xtype = 'report.main.parameter_container.controller.tree';\n\n    public static BASE_CLS = PARAMETER_TREE_BASE_CLS;\n\n    protected isTreeWidget() {\n        return true;\n    }\n\n    protected tree: any;\n\n    protected nodes: ParamMultiTreeItem[] = [];\n\n    protected textValueMap: {[key: string]: string} = {};\n    \n    // 完整的多选树值\n    protected completeMultiTreeValue: ParamMultiTreeValue;\n\n    /**\n     * 转换后的初始值\n     */\n    private defaultTreeValue: any;\n\n    public props: ParameterControllerTreeProps4RenderProps & ParameterControllerForm & ParameterControllerDelayer = {\n        baseCls: ParameterTree.BASE_CLS,\n        $testId: ParameterTree.BASE_CLS,\n        width: WIDTH,\n        height: HEIGHT,\n        value: undefined,\n        widgetName: '',\n        disabled: false,\n        invisible: false,\n        needSubmit: true,\n        fontSize: 12,\n        controlAttr: {\n            data: [{\n                ChildNodes: [],\n                isexpand: false,\n                hasChildren: false,\n                id: 1,\n                text: '',\n                showcheck: false,\n                complete: true,\n                value: '',\n                checkstate: 0,\n            }],\n            value: '',\n        },\n        async: true,\n        mutiSelection: true,\n        returnFullPath: false,\n        selectLeafOnly: false,\n        delimiter: ';',\n        allowBlank: true,\n        errorMsg: BI.i18nText('Fine-Report_Preview_Can_Not_Null'),\n        isLayerBuild: false,\n        getDependenceByWidget: () => [],\n        getWidgetDependenceValueByWidget: () => {\n            return {};\n        },\n        add2WaitingQueue: () => '',\n        removeFromWaitingQueue: () => {},\n        extraOptsGetter: () => {\n            return {};\n        },\n        oldTreeControlAttrFetcher: fetchOldParamTreeControlAttr,\n        newTreeControlAttrFetcher: fetchNewParamTreeControlAttr,\n        newTreeStructureFetcher: fetchNewParamTreeStructure,\n        allowBg: true,\n        needCheckCustomData: true,\n    }\n\n    public render() {\n        const { width, height, mutiSelection: multiSelection, selectLeafOnly, controlAttr, value, fontSize, disabled, add2WaitingQueue, removeFromWaitingQueue, allowBg } = this.options;\n\n        this.updateCacheByControlAttrData(controlAttr.data);\n\n        this.defaultTreeValue = transformTreeDefaultValue(\n            value,\n            multiSelection,\n            selectLeafOnly,\n            {\n                textValueMap: this.textValueMap,\n                nodes: this.nodes,\n            },\n        );\n\n        this.value = this.defaultTreeValue;\n\n        !multiSelection && this.defaultTreeValue && this.transformSingleTreeValue2Node(this.defaultTreeValue as string);\n\n        return {\n            type: BI.VerticalLayout.xtype,\n            cls: allowBg ? 'bi-card' : '',\n            items: [{\n                type: getParamTreeLayout(multiSelection, selectLeafOnly, this.isAsyncTree()),\n                cls: `${setTreeFontSize(ParameterTree.BASE_CLS, fontSize)}`,\n                ref: (_ref: any) => {\n                    this.tree = _ref;\n                },\n                width,\n                height,\n                itemsCreator: (\n                    op: any,\n                    callback: (data: {items: ParamMultiTreeItem[], hasNext: boolean, resultType?: string} | ParamMultiTreeValue) => void,\n                ) => {\n                    !this.silence && this.fireEvent('nodeadd');\n    \n                    const cb = async () => {\n                        const data = !this.isAsyncTree()\n                            ? await this.syncTreeItemCreator()\n                            : multiSelection ? await this.multiAsyncTreeItemCreator(op) : await this.singleAsyncTreeItemCreator(op);\n    \n                        if ('items' in data) {\n                            this.transformSyncSingleTreeItem((data as {\n                                items: ParamMultiTreeItem[];\n                                hasNext: boolean;\n                            }).items);\n                        }\n    \n                        callback(data);\n    \n                        disabled && this.setEnable(!disabled);\n                    };\n    \n                    cb();\n                },\n                value: this.defaultTreeValue,\n                listeners: [{\n                    eventName: 'EVENT_CHANGE',\n                    action: () => {\n                        this.hideBubble();\n    \n                        const id = add2WaitingQueue();\n    \n                        this.rebuildMultiTree(undefined, true)\n                            .then(() => {\n                                removeFromWaitingQueue(id);\n    \n                                !this.silence && this.fireEvent('click');\n                            });\n                    },\n                }],\n                minHeight: height,\n            }],\n        };\n    }\n\n    public async setValue(v: string, data?: ParameterControllerTreeControlAttrData[]) {\n        this.updateCacheByControlAttrData(data);\n\n        this.setControllerValue(v, data || []);\n\n        this.fireEvent('EVENT_SET_VALUE');\n    }\n\n    public async setControllerValue(v: string, data: ParameterControllerTreeControlAttrData[]) {\n        await super.setControllerValue(v, data);\n\n        this.tree.populate();\n    }\n\n    protected setTreeValue(v: any) {\n        this.tree.setSelectedValue ? this.tree.setSelectedValue(v) : this.tree.setValue(v);\n    }\n\n    public async mounted() {\n        super.mounted();\n        // 单选的custom_tree会自己创建节点\n        if (this.options.mutiSelection) {\n            this.tree.populate();\n        }\n        await this.rebuildMultiTree(this.defaultTreeValue, false);\n    }\n\n    /**\n     * 开启自动展开已选节点\n     */\n    public enableAutoExpand() {\n        this.tree.enableAutoExpand?.(true);\n    }\n\n    public reset() {\n        super.reset();\n        this.tree.populate();\n    }\n\n    public reloadControlAttr() {\n        this.reset();\n    }\n\n    /**\n     * 公开接口，获取已选值，全选的值会被合并\n     */\n    public getSelectedValue() {\n        return this.tree.getSelectedValue ? this.tree.getSelectedValue() : this.tree.getValue();\n    }\n\n    public setStyle(styles: Parameters<AbstractParameterControllerWidget['setStyle']>[0]) {\n        this.tree.element.addClass(setTreeStyle(styles));\n    }\n\n    public getText() {\n        return '';\n    }\n}\n\n\n/**\n * 树列表结构\n */\nexport interface ParameterControllerTreeProps4Render4Item extends ParameterControllerBasicProps4Item, ParameterControllerPropsWithTree {\n    $testId: string;\n}\n\nexport interface ParameterControllerTreeProps4Render extends ParameterControllerBasicProps4Render, ParameterControllerTreeProps4Render4Item {}\n\nexport interface ParameterControllerTreeProps4RenderProps extends Omit<ParameterControllerTreeProps4Render4Item, 'value'> {\n    baseCls: string;\n    errorMsg: string;\n    allowBlank: boolean;\n    value: (string | number)[] | string | undefined | null | number;\n\n    /**\n     * 是否校验自定义值\n     */\n    needCheckCustomData: boolean;\n}\n"]}