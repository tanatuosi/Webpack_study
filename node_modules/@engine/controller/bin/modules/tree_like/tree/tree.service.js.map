{"version":3,"file":"tree.service.js","sourceRoot":"","sources":["../../../../src/modules/tree_like/tree/tree.service.ts"],"names":[],"mappings":"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","sourcesContent":["import jss from 'jss';\nimport jssGlobal from 'jss-plugin-global';\nimport jssNested from 'jss-plugin-nested';\nimport { setFontSize } from '../../controller.service';\nimport { PARAMETER_TREE_BASE_CLS } from './tree.constants';\n\nconst fontSizeSplitValue = 20;\n\n/**\n * 获取多选树样式\n * @param selector 选择器\n * @param $fontSize 字体大小\n * @returns 样式\n */\nfunction getMultiTreeStyleByFontSize(selector: string, $fontSize: number) {\n    const { height, fontSize } = $fontSize <= fontSizeSplitValue\n        ? { height: 24, fontSize: Math.max($fontSize, fontSizeSplitValue) }\n        : { height: calcItemHeightByFontSize($fontSize), fontSize: Math.max($fontSize, fontSizeSplitValue) };\n\n    const checkboxDefaultSize = 14;\n\n    const left = (24 - height) / 2;\n\n    const checkboxSize = height / 24 * checkboxDefaultSize;\n\n    return {\n        [`${selector} .ztree li span.button.switch`]: {\n            width: `${height}px !important`,\n            height: `${height}px !important`,\n            left: `${left}px`,\n        },\n        [`${selector} .ztree li span.button.chk`]: {\n            width: `${checkboxSize}px !important`,\n            height: `${checkboxSize}px !important`,\n            left: `${checkboxSize - checkboxDefaultSize + left}px`,\n        },\n        [`${selector} .ztree li span.button.chk:after`]: {\n            width: `${height / 24 * 6}px !important`,\n            height: `${height / 24 * 9}px !important`,\n        },\n        [`${selector} .ztree li span.button.chk.bi-half-button:after`]: {\n            width: `${height / 24 * 8}px !important`,\n            height: `${height / 24 * 8}px !important`,\n            left: `${height / 24 * 2}px !important`,\n            top: `${height / 24 * 2}px !important`,\n        },\n        [`${selector} .ztree li a`]: {\n            height: `${height}px !important`,\n        },\n        [`${selector} .ztree li a span`]: {\n            'line-height': `${height}px !important`,\n        },\n        [`${selector} .ztree li ul.line:before`]: {\n            left: `${height <= 24 ? 11 : fontSize / 1.5 + 1}px`,\n            'border-left-width': `${height <= 24 ? 1 : fontSize / 12}px`,\n        },\n        [`${selector} .ztree li ul`]: {\n            'padding-left': `${height <= 24 ? 18 : height + left}px`,\n        },\n    };\n}\n\n/**\n * 获取单选树样式\n * @param selector 选择器\n * @param fontSize 字体大小\n * @returns 样式\n */\nfunction getSingleTreeStyleByFontSize(selector: string, fontSize: number) {\n    const height = calcItemHeightByFontSize(fontSize);\n    const left = Math.max((24 - height) / 2, 0);\n\n    return {\n        [`${selector} .bi-icon-button i`]: {\n            width: `${height}px !important`,\n            height: `${height}px !important`,\n            left: `${left}px`,\n        },\n        [`${selector} .mid-line-conn-background`]: {\n            width: `${height}px !important`,\n            height: `${height}px !important`,\n            'background-size': 'contain',\n        },\n        [`${selector} .last-line-conn-background`]: {\n            width: `${height}px !important`,\n            height: `${height}px !important`,\n            'background-size': 'contain',\n        },\n        [`${selector} .first-line-conn-background`]: {\n            width: `${height}px !important`,\n            height: `${height}px !important`,\n            'background-size': 'contain',\n        },\n        [`${selector} .mid-line-conn-background + div`]: {\n            height: `${height}px !important`,\n            'line-height': `${height}px !important`,\n        },\n        [`${selector} .last-line-conn-background + div`]: {\n            height: `${height}px !important`,\n            'line-height': `${height}px !important`,\n        },\n        [`${selector} .first-line-conn-background + div`]: {\n            height: `${height}px !important`,\n            'line-height': `${height}px !important`,\n        },\n        [`${selector} .bi-multilayer-single-tree-mid-tree-leaf-item`]: {\n            height: `${height}px !important`,\n        },\n        [`${selector} .bi-multilayer-single-tree-mid-tree-leaf-item .bi-mid-tree-leaf-item`]: {\n            height: `${height}px !important`,\n        },\n        [`${selector} .bi-node`]: {\n            height: `${height}px !important`,\n        },\n        [`${selector} .bi-mid-plus-group-node`]: {\n            height: `${height}px !important`,\n        },\n        [`${selector} .bi-mid-plus-group-node .bi-label`]: {\n            height: `${height}px !important`,\n            'line-height': `${height}px !important`,\n        },\n        [`${selector} .bi-multilayer-single-tree-last-tree-leaf-item`]: {\n            height: `${height}px !important`,\n        },\n        [`${selector} .bi-multilayer-single-tree-last-tree-leaf-item .bi-last-tree-leaf-item`]: {\n            height: `${height}px !important`,\n        },\n    };\n}\n\nexport function setTreeFontSize(baseCls: string, fontSize: number) {\n    const cls = setFontSize(baseCls, fontSize);\n\n    const selector = `.${cls}`;\n\n    jss.use(jssGlobal(), jssNested());\n\n    jss.createStyleSheet({\n        '@global': {\n            ...getSingleTreeStyleByFontSize(selector, fontSize),\n            ...getMultiTreeStyleByFontSize(selector, fontSize),\n        },\n    }).attach();\n\n    return cls;\n}\n\n/**\n * 根据字体大小计算行高\n * @param fontSize 字体大小\n */\nfunction calcItemHeightByFontSize(fontSize: number) {\n    return fontSize > fontSizeSplitValue ? fontSize * 1.5 : 24;\n}\n\n/**\n * 合并树的值，全选中则置为{}\n * @param value 输的值\n * @param fullValue 完成树json\n */\nexport function mergeTreeValue(value: TreeValue, fullValue: TreeValue): TreeValue {\n    for (const key in value) {\n        // 如果和tree完全相同，则置为全选\n        if (BI.isEqual(fullValue[key], value[key])) {\n            value[key] = {};\n\n            continue;\n        }\n\n        // 若完整树里没有这个节点，则此节点为新增，默认全选\n        if (BI.isNull(fullValue[key])) {\n            value[key] = {};\n\n            continue;\n        }\n\n        // 不完全相同则去下一层比较值\n        value[key] = mergeTreeValue(value[key], fullValue[key]);\n    }\n\n    return value;\n}\n\n/**\n * 转换树节点数据为JSON\n * @param nodes 节点\n * @param valueReference value依赖\n */\nexport function transformTreeNodesToJson(nodes: TreeJsonNode[] = [], valueReference: TreeValue = {}) {\n    nodes.forEach(node => {\n        valueReference[node.value] = {};\n\n        transformTreeNodesToJson(node.children, valueReference[node.value]);\n    });\n\n    return valueReference;\n}\n\nexport function setTreeStyle({ opacity, background, color, border, ['border-radius']: borderRadius }: {\n    opacity?: number;\n    background?: string;\n    color?: string;\n    border?: string;\n    'border-radius'?: string;\n}) {\n    jss.use(jssGlobal(), jssNested());\n\n    const cls = `${PARAMETER_TREE_BASE_CLS}-${BI.UUID()}`;\n\n    const selector = `.${cls}`;\n\n    jss.createStyleSheet({\n        '@global': {\n            [`${selector}`]: {\n                opacity,\n                background,\n                color,\n            },\n            [`${selector} .bi-border`]: {\n                border,\n                'boder-radius': borderRadius,\n            },\n        },\n    }).attach();\n\n    return cls;\n}\n\ninterface TreeValue {\n    [key: string]: TreeValue;\n}\n\ninterface TreeJsonNode {\n    value: string;\n    children?: TreeJsonNode[];\n}\n"]}