{"version":3,"file":"textarea.js","sourceRoot":"","sources":["../../../src/modules/textarea/textarea.ts"],"names":[],"mappings":"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","sourcesContent":["import { WIDTH } from '../controller.constants';\nimport { validateByCustomRule } from '../text/text.service';\nimport { setTextAreaFontSize } from './textarea.service';\nimport { shortcut } from '@engine/core';\nimport { ParameterControllerBasicProps4Item, ParameterControllerPropsWithEditor, ParameterControllerBasicProps4Render } from '../controller';\nimport { AbstractParameterControllerWidget, ControllerValidation } from '../controller.abstract';\nimport { TextAreaEditor } from '@fui/core';\nimport { setEditorStyle } from '../controller.service';\n\n@shortcut()\nexport class ParameterTextarea extends AbstractParameterControllerWidget {\n    public static xtype = 'report.main.parameter_container.controller.textarea';\n\n    private editor: TextAreaEditor;\n\n    private value?: string;\n\n    public props: ParamTextareaProps = {\n        baseCls: 'report-main-parameter-container-controller-textarea',\n        $testId: 'report-main-parameter-container-controller-textarea',\n        width: WIDTH,\n        height: WIDTH,\n        value: '',\n        multiline: true,\n        regex: '',\n        regErrorMsg: BI.i18nText('Fine-Report_Preview_Input_Error'),\n        disabled: false,\n        invisible: false,\n        needSubmit: false,\n        fontSize: 12,\n        allowBlank: true,\n        errorMsg: BI.i18nText('Fine-Report_Preview_Can_Not_Null'),\n        watermark: '',\n        allowBg: true,\n    }\n\n    public mounted() {\n        this.element.on('keydown', (e: KeyboardEvent) => {\n            e.stopPropagation();\n        });\n\n        !this.silence && this.fireEvent('afterinit');\n    }\n\n    public render() {\n        const { width, height, value: _value, watermark, fontSize, allowBg } = this.options;\n\n        this.value = `${_value}`;\n\n        return {\n            type: BI.VerticalLayout.xtype,\n            cls: allowBg ? 'bi-card' : '',\n            items: [{\n                type: BI.TextAreaEditor.xtype,\n                cls: `${setTextAreaFontSize('report-main-parameter-container-controller-textarea', fontSize)} bi-border bi-border-radius bi-focus-shadow`,\n                ref: (_ref: TextAreaEditor) => {\n                    this.editor = _ref;\n                },\n                width: width - 2,\n                height: height - 2,\n                value: this.value,\n                watermark,\n                listeners: [{\n                    eventName: BI.TextAreaEditor.EVENT_KEY_DOWN,\n                    action: BI.debounce(() => {\n                        const result = !this.silence && this.fireEvent('afteredit');\n                        \n                        result !== false && this.fireEvent('EVENT_CHANGE');\n                    }, 400),\n                }, {\n                    eventName: BI.TextAreaEditor.EVENT_BLUR,\n                    action: () => {\n                        !this.silence && this.fireEvent('stopedit');\n                    },\n                }, {\n                    eventName: BI.TextAreaEditor.EVENT_FOCUS,\n                    action: () => {\n                        this.hideBubble();\n\n                        !this.silence && this.fireEvent('beforeedit');\n                    },\n                }],\n            }],\n        };\n    }\n\n    public async setControllerValue(v: any) {\n        this.editor.setValue(v);\n    }\n\n\n    public getValue() {\n        return this.editor.getValue();\n    }\n\n    private getBasicValidation(value = this.editor.getValue()): ControllerValidation {\n        const { allowBlank, regex, errorMsg, regErrorMsg } = this.options;\n\n        if (BI.isEmptyString(value) && !allowBlank) {\n            return {\n                result: false,\n                errorMsg,\n            };\n        }\n\n        return validateByCustomRule(value, regex) ? {\n            result: true,\n        } : {\n            result: false,\n            errorMsg: regErrorMsg,\n        };\n    }\n\n    public preGetValidation(): ControllerValidation {\n        return this.getBasicValidation(this.value);\n    }\n\n    public postGetValidation(): ControllerValidation {\n        return this.getBasicValidation();\n    }\n\n    public postValidateAndToast() {\n        const validation = this.getValidation();\n\n        if (validation.result) {\n            return true;\n        }\n\n        this.showBubble(validation.errorMsg);\n\n        return false;\n    }\n\n    public setInteractValue(v: any) {\n        this.setControllerValue(v);\n    }\n\n    public emitManualStopEditEvent() {\n        this.fireEvent('stopedit');\n    }\n\n    public reset() {\n        this.editor.setValue();\n    }\n\n    public resize(width: number, height: number) {\n        const restoreValue = this.editor.getValue();\n\n        super.resize(width, height);\n\n        this.editor.setValue(restoreValue);\n    }\n\n    public getAdapter() {\n        return this.editor;\n    }\n\n    public focus() {\n        this.editor.focus();\n    }\n\n    public blur(): void {\n        this.editor.blur();\n    }\n\n    public setStyle(styles: Parameters<AbstractParameterControllerWidget['setStyle']>[0]) {\n        this.editor.element.addClass(setEditorStyle(styles));\n    }\n\n    public setWaterMark(v: string) {\n        this.editor.setWatermark(v);\n    }\n\n    public getText() {\n        return this.editor.getValue();\n    }\n}\n\n\nexport interface ParamTextareaProps extends ParameterControllerTextareaProps4Render4Item {\n    baseCls: string;\n    $testId: string;\n    value: string | string[];\n}\n\nexport interface ParameterControllerTextareaProps4Render4Item extends ParameterControllerBasicProps4Item, ParameterControllerPropsWithEditor {\n\n    /**\n     * 多行显示\t默认为 true, 并且不可配\n     */\n    multiline: boolean;\n\n    /**\n     * 填写规则(正则验证)\t默认为空, 设置填写规则后生成对应正则表达式\n     */\n    regex: string;\n\n    /**\n     * 正则验证错误信息\t默认为空\n     */\n    regErrorMsg: string;\n}\n\nexport interface ParameterControllerTextareaProps4Render extends ParameterControllerBasicProps4Render, ParameterControllerTextareaProps4Render4Item {}\n"]}