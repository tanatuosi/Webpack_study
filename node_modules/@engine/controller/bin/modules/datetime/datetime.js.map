{"version":3,"file":"datetime.js","sourceRoot":"","sources":["../../../src/modules/datetime/datetime.ts"],"names":[],"mappings":"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","sourcesContent":["import { shortcut, store } from '@engine/core';\nimport { ParameterControllerBasicProps4Item, ParameterControllerBasicProps4Render, ParameterControllerForm, ParameterControllerPropsWithEditor } from '../controller';\nimport { AbstractParameterControllerWidget, ControllerValidation } from '../controller.abstract';\nimport { HEIGHT, WIDTH } from '../controller.constants';\nimport { fetchParamDatetimeControlAttr } from '../controller.crud';\nimport { MAX_DATE, MIN_DATE } from './datetime.constants';\nimport { ParameterDatetimeModel } from './datetime.model';\nimport { getControlTypeByFormat, getDateRangeByFormat, setDatetimeComboFontSize, setDatetimeComboPopupStyle, setDatetimeComboStyle, transform2DateComboValue, transformDateMs2String, transformDateValue2DateMs, transformTimeValue2DateMs } from './datetime.service';\nimport { ReportDate, transformFormat } from './report_date/report_date';\n\n@shortcut()\n@store(ParameterDatetimeModel, {\n    props(this: ParameterDatetime) {\n        return {\n            value: this.options.value,\n        };\n    },\n})\nexport class ParameterDatetime extends AbstractParameterControllerWidget {\n    public static xtype = 'report.main.parameter_container.controller.datetime';\n\n    public static BASE_CLS = 'report-main-parameter-container-controller-datetime';\n\n    private combo: any;\n\n    // 公开接口\n    public btn: any;\n\n    // 时分秒类需要知道默认的年月日\n    private reportDate: ReportDate;\n\n    public store: ParameterDatetimeModel['store'];\n\n    public props: ParameterControllerDatetimeProps4Render4Item & {\n        baseCls: string;\n        $testId: string;\n        widgetName: string;\n    } & ParameterControllerForm = {\n        baseCls: ParameterDatetime.BASE_CLS,\n        $testId: ParameterDatetime.BASE_CLS,\n        widgetName: '',\n        width: WIDTH,\n        height: HEIGHT,\n        format: 'yyyy-MM-dd',\n        startDate: MIN_DATE,\n        endDate: MAX_DATE,\n        returnDate: false,\n        value: {\n            date_milliseconds: 0,\n        },\n        directEdit: true,\n        disabled: false,\n        invisible: false,\n        needSubmit: true,\n        fontSize: 12,\n        allowBlank: true,\n        errorMsg: BI.i18nText('Fine-Report_Preview_Can_Not_Null'),\n        // REPORT-57309 不显示无限制\n        watermark: ' ',\n        getDependenceByWidget: () => [],\n        getWidgetDependenceValueByWidget: () => {\n            return {};\n        },\n        controlAttrFetcher: fetchParamDatetimeControlAttr,\n        extraOptsGetter: () => {\n            return {};\n        },\n        allowBg: true,\n        container: undefined,\n        isNeedAdjustWidth: true,\n    }\n\n    private model: ParameterDatetimeModel['model'];\n\n\n    public render() {\n        const { width, height, value: defaultValue, startDate, endDate, fontSize, format, directEdit, watermark, disabled, allowBg, container } = this.options;\n\n        const reportDate = new ReportDate(defaultValue, format);\n\n        const value = transform2DateComboValue(reportDate, format, startDate, endDate);\n\n        /**\n         * 进一步降低defaultValue在控件中的地位，以经过格式化、时间范围检验后的值为准,保证和combo中的值始终一致\n         * 修改 https://work.fineres.com/browse/REPORT-74907 引入\n         */\n        this.store.setValue(value);\n\n        this.reportDate = reportDate;\n\n        return {\n            type: BI.VerticalLayout.xtype,\n            cls: allowBg ? 'bi-card' : '',\n            items: [{\n                width,\n                height,\n                watermark,\n                disabled,\n                type: getControlTypeByFormat(format),\n                supportDynamic: false,\n                cls: `${setDatetimeComboFontSize(ParameterDatetime.BASE_CLS, {\n                    fontSize, width, height,\n                })}`,\n                ...getDateRangeByFormat(startDate, endDate, format),\n                format: transformFormat(format),\n                isNeedAdjustWidth: false,\n                value,\n                ref: (_ref: any) => {\n                    this.combo = _ref;\n    \n                    this.btn = _ref.element[0];\n                },\n                behaviors: {\n                    highlight: () => false,\n                },\n                allowEdit: directEdit,\n                container,\n                listeners: [{\n                    eventName: 'EVENT_CONFIRM',\n                    action: () => {\n                        this.hideBubble();\n                        \n                        this.store.setValue(this.combo.getValue());\n    \n                        this.store.setValid(true);\n    \n                        const result = !this.silence && this.fireEvent('stopedit');\n    \n                        result !== false && this.fireEvent('EVENT_CHANGE');\n                    },\n                }, {\n                    eventName: 'EVENT_VALID',\n                    action: () => {\n                        this.store.setValue(this.combo.getValue());\n    \n                        this.store.setValid(true);\n\n                        !this.silence && this.model.validOperationCount && this.fireEvent('afteredit');\n\n                        this.store.operationCountUp();\n                    },\n                }, {\n                    eventName: 'EVENT_ERROR',\n                    action: () => {\n                        this.store.setValid(false);\n\n                        !this.silence && this.model.validOperationCount && this.fireEvent('afteredit');\n\n                        this.store.operationCountUp();\n                    },\n                }, {\n                    eventName: 'EVENT_FOCUS',\n                    action: () => {\n                        this.hideBubble();\n                    },\n                }, {\n                    eventName: 'EVENT_KEY_DOWN',\n                    action: () => {\n                        !this.silence && this.fireEvent('afteredit');\n                    },\n                }, {\n                    eventName: 'EVENT_BLUR',\n                    action: () => {\n                        this.store.setValue(this.combo.getValue());\n                    },\n                }],\n            }],\n        };\n    }\n\n    public getValue() {\n        const { format, returnDate } = this.options;\n\n        // 此处结果会有多种结构，分为空string/number/控件object/{date_milliseconds}\n        const widgetValue = this.model.value;\n\n        // 空白字符串\n        if (this.model.value === '' || BI.isNull(this.model.value)) {\n            return '';\n        }\n\n        // 纯字符串/纯数字\n        if (BI.isString(this.model.value) || BI.isNumber(this.model.value)) {\n            return returnDate ? {\n                __time__: BI.getDate(this.model.value).getTime(),\n            } : this.model.value;\n        }\n\n        // {date_milliseconds}\n        if (BI.has(this.model.value, 'date_milliseconds')) {\n            return returnDate ? {\n                __time__: this.model.value.date_milliseconds,\n            } : transformDateMs2String(this.model.value.date_milliseconds, format);\n        }\n\n        const isOnlyTime = !this.reportDate.isDateFormat && this.reportDate.isTimeFormat && !this.reportDate.isYearFormat;\n\n        const ms = isOnlyTime ? transformTimeValue2DateMs(widgetValue, this.reportDate) : transformDateValue2DateMs(widgetValue);\n\n        const timeStr = transformDateMs2String(ms, format);\n\n        if (returnDate) {\n            return {\n                __time__: new ReportDate(timeStr, format).getTime(),\n            };\n        }\n\n        return timeStr;\n    }\n\n    public preGetValidation(): ControllerValidation {\n        const { allowBlank, value, errorMsg } = this.options;\n\n        if (allowBlank || !BI.isEmpty(value)) {\n            return { result: true };\n        }\n\n        return {\n            result: false,\n            errorMsg,\n        };\n    }\n\n    public postGetValidation(): ControllerValidation {\n        const { allowBlank, errorMsg } = this.options;\n\n        const value = this.model.value;\n\n        if (BI.isNull(value) || BI.isEmptyString(value)) {\n            return !!allowBlank === true ? {\n                result: true,\n            } : {\n                result: false,\n                errorMsg,\n            };\n        }\n\n        return this.model.valid ? {\n            result: true,\n        } : {\n            result: false,\n            errorMsg: BI.i18nText('Fine-Report_Preview_Input_Error'),\n        };\n    }\n\n    public postValidateAndToast() {\n        const validation = this.getValidation();\n\n        if (validation.result) {\n            return true;\n        }\n\n        this.showBubble(validation.errorMsg);\n\n        return false;\n    }\n\n    public emitManualStopEditEvent() {\n        this.fireEvent('stopedit');\n    }\n\n    public async setControllerValue(v: string | number | { date_milliseconds: number; } | { __time__: number; } | Date) {\n        const { startDate, endDate, format } = this.options;\n        const value = BI.isDate(v) ? { date_milliseconds: v.getTime() } : v;\n        const reportDate = new ReportDate(value, format);\n        const comboValue = transform2DateComboValue(reportDate, format, startDate, endDate);\n        this.store.setValue(comboValue);\n        this.combo.setValue(comboValue);\n    }\n\n    // 类似日期这种需要异步更新数据的控件都返回Promise\n    public async setInteractValue(v: string | string[]) {\n        this.reset();\n\n        const { widgetName, getWidgetDependenceValueByWidget, getDependenceByWidget, extraOptsGetter, controlAttrFetcher } = this.options;\n\n        const dependences = getWidgetDependenceValueByWidget(this);\n\n        if (BI.size(Object.keys(dependences))) {\n            const dateRanges = await controlAttrFetcher(widgetName, {\n                dependence: dependences,\n                reload: BI.isNotEmptyArray(getDependenceByWidget(this)),\n                ...extraOptsGetter(),\n            });\n\n            const { startDate, endDate } = BI.first(dateRanges);\n\n            this.setMaxAndMinDate({ min: startDate, max: endDate });\n\n            return this.setControllerValue(`${v}`);\n        }\n    }\n\n    public reset() {\n        this.combo.setValue();\n    }\n\n    public resize(width: number, height: number) {\n        const restoreValue = this.combo.getValue();\n\n        super.resize(width, height);\n        this.store.setValue(restoreValue);\n        this.combo.setValue(restoreValue);\n    }\n\n    public getAdapter() {\n        return this.combo;\n    }\n\n    public setStyle(styles: Parameters<AbstractParameterControllerWidget['setStyle']>[0]) {\n        this.combo.element.addClass(setDatetimeComboStyle(styles));\n    }\n\n    public setPopupStyle(styles: {\n        itemHeight: string;\n        fontSize: string;\n    }) {\n        this.combo.element.addClass(setDatetimeComboPopupStyle(styles));\n    }\n\n    public setWaterMark(v: string) {\n        this.options.watermark = v;\n\n        this.combo.setWaterMark(v);\n    }\n\n    public setMaxAndMinDate({ max: endDate, min: startDate }: {\n        // yyyy-mm-dd HH:mm:ss\n        max: string | Date;\n        min: string | Date;\n    }) {\n        const { format } = this.options;\n        \n        /**\n         * 修正 https://work.fineres.com/browse/REPORT-79714 引入\n         * 应对纯时间型控件不支持setMinDate、setMaxDate方法，简化一下写法\n         */\n        const { minDate, maxDate } = getDateRangeByFormat(startDate, endDate, format);\n\n        this.combo.setMinDate && this.combo.setMinDate(this.options.startDate = minDate || MIN_DATE);\n        this.combo.setMaxDate && this.combo.setMaxDate(this.options.endDate = maxDate || MAX_DATE);\n    }\n\n    public getText() {\n        const value = this.getValue();\n\n        if (BI.isNull(value)) {\n            return '';\n        }\n\n        if (BI.isNumber(value)) {\n            return `${value}`;\n        }\n\n        if (BI.isString(value)) {\n            return value;\n        }\n\n        return new Date(value.__time__).toString();\n    }\n\n    public focus () {\n        this.combo.focus();\n    }\n\n    public blur () {\n        this.combo.blur();\n    }\n}\n\n/**\n * 时间控件\n */\nexport interface ParameterControllerDatetimeProps4Render4Item extends Omit<ParameterControllerBasicProps4Item, 'value'>, ParameterControllerPropsWithEditor {\n\n    /**\n     * 时间显示的格式\n     */\n    format: string;\n\n    /**\n     * 起始日期\n     */\n    startDate?: string;\n\n    /**\n     * 中止日期\n     */\n    endDate?: string;\n\n    /**\n     * 是否返回日期\n     */\n    returnDate: boolean;\n\n    /**\n     * 时间戳\n     */\n    value: {\n        date_milliseconds: number;\n    } | string | number;\n\n    /**\n     * 允许直接编辑\n     */\n    directEdit: boolean;\n    controlAttrFetcher: typeof fetchParamDatetimeControlAttr,\n    extraOptsGetter: () => {[key: string]: any};\n    container?: string,\n    isNeedAdjustWidth: boolean;\n}\n\nexport interface ParameterControllerDatetimeProps4Render extends ParameterControllerBasicProps4Render, ParameterControllerDatetimeProps4Render4Item {}\n"]}