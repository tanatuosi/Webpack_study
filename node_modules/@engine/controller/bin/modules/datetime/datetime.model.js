var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Model, model } from '@engine/core';
let ParameterDatetimeModel = class ParameterDatetimeModel extends Model {
    constructor() {
        super(...arguments);
        this.computed = {
            validOperationCount: () => this.model.operationCount > 0,
        };
        this.actions = {
            setValue: (v) => {
                this.model.value = v;
            },
            setValid: (v) => {
                this.model.valid = !!v;
            },
            operationCountUp: () => {
                this.model.operationCount++;
            },
        };
    }
    state() {
        return {
            value: this.options.value,
            valid: true,
            operationCount: 0,
        };
    }
};
ParameterDatetimeModel.xtype = 'report.model.main.parameter_container.controller.datetime';
ParameterDatetimeModel = __decorate([
    model()
], ParameterDatetimeModel);
export { ParameterDatetimeModel };
//# sourceMappingURL=datetime.model.js.map