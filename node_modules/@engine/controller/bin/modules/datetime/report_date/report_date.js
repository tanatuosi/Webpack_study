import { getFormatType, parseDateTime, transformFormat } from './report_date.service';
export class ReportDate {
    constructor(date, format) {
        this.isLegal = false;
        this.isDateFormat = true;
        this.isTimeFormat = true;
        this.isYearFormat = true;
        this.format = transformFormat(format || '');
        if (this.format) {
            const { isDateFormat, isTimeFormat, isYearFormat } = getFormatType(this.format);
            this.isDateFormat = isDateFormat;
            this.isTimeFormat = isTimeFormat;
            this.isYearFormat = isYearFormat;
        }
        const { date: reportDate, isLegal } = this.formatDate(date);
        this.date = reportDate;
        this.isLegal = isLegal;
    }
    getTime() {
        return this.date.getTime();
    }
    toString(format = '') {
        return BI.print(this.date, transformFormat(format));
    }
    getValue() {
        return this.date;
    }
    toJSON() {
        return {
            year: this.date.getFullYear(),
            month: this.date.getMonth() + 1,
            day: this.date.getDate(),
            hour: this.date.getHours(),
            minute: this.date.getMinutes(),
            second: this.date.getSeconds(),
        };
    }
    setFullYear(year) {
        this.date.setFullYear(year);
        return this;
    }
    setMonth(month) {
        this.date.setMonth(month - 1);
        return this;
    }
    setDay(date) {
        this.date.setDate(date);
        return this;
    }
    setHours(hours) {
        this.date.setHours(hours);
        return this;
    }
    setMinutes(minutes) {
        this.date.setMinutes(minutes);
        return this;
    }
    setSeconds(sec) {
        this.date.setSeconds(sec);
        return this;
    }
    formatDate(date) {
        return parseDateTime(date, this.format);
    }
}
export { transformFormat, getFormatType, };
//# sourceMappingURL=report_date.js.map