{"version":3,"file":"controller.crud.js","sourceRoot":"","sources":["../../src/modules/controller.crud.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,oBAAoB,EAAE,MAAM,cAAc,CAAC;AACjE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAIvD;;;;GAIG;AACH,SAAS,0BAA0B,CAC/B,UAAkB,EAClB,KAA2B,EAAE,EAC7B,WAAyB;IAEzB,OAAO,WAAW,CAAC,aAAa,EAAE;QAC9B,IAAI,kCACG,EAAE,KACL,UAAU,EAAE,UAAU,GACzB;QACD,OAAO,EAAE,oBAAoB,CAAC,SAAS;QACvC,WAAW;KACd,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;AACvB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,qBAAqB,CACjC,UAAkB,EAClB,KAA2B,EAAE;IAK7B,OAAO,0BAA0B,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AACtD,CAAC;AAED;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,oBAAoB,CAAC,IAA0B;IACjE,OAAO,WAAW,CAAC,mBAAmB,EAAE;QACpC,IAAI;QACJ,OAAO,EAAE,oBAAoB,CAAC,SAAS;KAC1C,CAAC,CAAC;AACP,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,6BAA6B,CACzC,UAAkB,EAClB,KAA2B,EAAE;IAK7B,OAAO,0BAA0B,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AACtD,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,4BAA4B,CACxC,UAAkB,EAClB,KAA2B,EAAE,EAC7B,WAAyB;IAEzB,OAAO,0BAA0B,CAAC,UAAU,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AACtF,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,0BAA0B,CACtC,UAAkB,EAClB,KAA2B,EAAE;IAE7B,OAAO,0BAA0B,CAAC,UAAU,kCACrC,EAAE,KACL,kBAAkB,EAAE,IAAI,EACxB,UAAU,EAAE,IAAI,IAClB,CAAC;AACP,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,4BAA4B,CACxC,UAAkB,EAClB,KAA2B,EAAE,EAC7B,WAAyB;IAEzB,OAAO,0BAA0B,CAAC,UAAU,kCACrC,EAAE,KACL,kBAAkB,EAAE,IAAI,KACzB,WAAW,CAAC,CAAC;AACpB,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,kBAAkB,CAAC,MAAc;IAC7C,OAAO,GAAG,oBAAoB,CAAC,SAAS,uBAAuB,MAAM,cAAc,WAAW,CAAC,SAAS,EAAE,CAAC;AAC/G,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,YAAY,CAAC,MAAc;IACvC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5C,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,UAAU,CAAC,MAAc;IACrC,OAAO,UAAU,CAAC,gBAAgB,EAAE;QAChC,MAAM,EAAE;YACJ,EAAE,EAAE,MAAM;SACb;QACD,OAAO,EAAE,oBAAoB,CAAC,SAAS;KAC1C,CAAC,CAAC;AACP,CAAC","sourcesContent":["import { envProvider, universalEnvProvider } from '@engine/core';\nimport { requestGet, requestPost } from '@engine/crud';\nimport { CancelToken } from 'axios';\nimport { ParameterControllerPropsWithTree } from './controller';\n\n/**\n * 获取数据字典的基础方法\n * @param widgetName 控件名称\n * @param op 其余参数\n */\nfunction fetchParamBasicControlAttr(\n    widgetName: string,\n    op: {[key: string]: any} = {},\n    cancelToken?: CancelToken,\n): Promise<any> {\n    return requestPost('widget/data', {\n        data: {\n            ...op,\n            widgetname: widgetName,\n        },\n        baseURL: universalEnvProvider.ReqPrefix,\n        cancelToken,\n    }).catch(() => {});\n}\n\n/**\n * 下拉框控件获取数据字典\n * @param widgetName 控件名称\n * @param op 其余参数\n */\nexport function fetchParamControlAttr(\n    widgetName: string,\n    op: {[key: string]: any} = {},\n): Promise<{\n        text: string;\n        value: any;\n    }[]> {\n    return fetchParamBasicControlAttr(widgetName, op);\n}\n\n/**\n * 请求view value的最基础请求\n * @param data data\n */\nexport async function fetchWidgetViewValue(data: {[key:string]: any }): Promise<{ value: { val: string | number, text: string | number } } | string | {}> {\n    return requestPost('widget/view/value', {\n        data,\n        baseURL: universalEnvProvider.ReqPrefix,\n    });\n}\n\n/**\n * 日期控件获取数据字典\n * @param widgetName 控件名称\n * @param op 其余参数\n */\nexport function fetchParamDatetimeControlAttr(\n    widgetName: string,\n    op: {[key: string]: any} = {},\n): Promise<{\n        startDate: string;\n        endDate: string;\n    }[]> {\n    return fetchParamBasicControlAttr(widgetName, op);\n}\n\n/**\n * 老树控件获取数据字典\n * @param widgetName 控件名称\n * @param op 其余参数\n */\nexport function fetchOldParamTreeControlAttr(\n    widgetName: string,\n    op: {[key: string]: any} = {},\n    cancelToken?: CancelToken,\n): ReturnType<ParameterControllerPropsWithTree['oldTreeControlAttrFetcher']> {\n    return fetchParamBasicControlAttr(widgetName, op, cancelToken).then(v => v || []);\n}\n\n/**\n * 新树控件获取单个节点下的树形结构\n * @param widgetName 控件名称\n * @param op 其余参数\n */\nexport function fetchNewParamTreeStructure(\n    widgetName: string,\n    op: {[key: string]: any} = {},\n): ReturnType<ParameterControllerPropsWithTree['newTreeStructureFetcher']> {\n    return fetchParamBasicControlAttr(widgetName, {\n        ...op,\n        fine_outlet_widget: 'nx',\n        completion: true,\n    });\n}\n\n/**\n * 获取新树控件返回值\n * @param widgetName 控件名称\n * @param op 其余参数\n */\nexport function fetchNewParamTreeControlAttr(\n    widgetName: string,\n    op: {[key: string]: any} = {},\n    cancelToken?: CancelToken,\n): ReturnType<ParameterControllerPropsWithTree['newTreeControlAttrFetcher']> {\n    return fetchParamBasicControlAttr(widgetName, {\n        ...op,\n        fine_outlet_widget: 'nx',\n    }, cancelToken);\n}\n\n/**\n * 获取下载文件地址\n * @param fileId\n */\nexport function getDownloadFileUrl(fileId: string) {\n    return `${universalEnvProvider.ReqPrefix}/attach/download?id=${fileId}&sessionID=${envProvider.SessionID}`;\n}\n\n/**\n * 下载文件\n * @param fileId\n */\nexport function downloadFile(fileId: string) {\n    window.open(getDownloadFileUrl(fileId));\n}\n\n/**\n * 删除上传的文件\n * @param fileId\n */\nexport function deleteFile(fileId: string) {\n    return requestGet('attach/release', {\n        params: {\n            id: fileId,\n        },\n        baseURL: universalEnvProvider.ReqPrefix,\n    });\n}\n"]}