{"version":3,"file":"text.service.js","sourceRoot":"","sources":["../../../src/modules/text/text.service.ts"],"names":[],"mappings":"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","sourcesContent":["export function validateByCustomRule(v: string = '', rule: string = '') {\n    if (!rule) {\n        return true;\n    }\n\n    if (rule === 'idcardRegex') {\n        return validateIDCard(v);\n    }\n    \n    try {\n        return new RegExp(rule).test(v);\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * 身份证校验\n * @param _idCard 身份证校验数据\n */\nfunction validateIDCard(_idCard: any): boolean {\n    const idCard = `${_idCard}`;\n    if (idCard.length === 15) {\n        // 进行15位身份证的验证\n        return isValidityBrithBy15IdCard(idCard);\n    } else if (idCard.length === 18) {\n        // 得到身份证数组\n        const idArray = idCard.split('');\n        // 进行18位身份证的基本验证和第18位的验证\n\n        return isValidityBrithBy18IdCard(idCard) && isTrueValidateCodeBy18IdCard(idArray);\n    }\n\n    return false;\n}\n\n/**\n * 判断身份证号码为18位时最后的验证位是否正确\n * @param idArray 身份证号码数组\n */\nfunction isTrueValidateCodeBy18IdCard(idArray: string[]): boolean {\n    // 加权因子\n    const Wi = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1];\n    // 身份证验证位值.10代表X\n    const ValideCode = [1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2];\n\n    let sum = 0;// 声明加权求和变量\n    if (idArray[17].toLowerCase() === 'x') {\n        idArray[17] = '10';// 将最后位为x的验证码替换为10方便后续操作\n    }\n    for (let i = 0; i < 17; i++) {\n        sum += Wi[i] * parseInt(idArray[i], 10);// 加权求和\n    }\n    const valCodePosition = sum % 11;// 得到验证码所位置\n\n    return idArray[17] === `${ValideCode[valCodePosition]}`;\n}\n\n/**\n * 验证18位数身份证号码中的生日是否是有效生日\n * @param idCard 18位书身份证字符串\n */\nfunction isValidityBrithBy18IdCard(idCard18: string): boolean {\n    const year = parseFloat(idCard18.substring(6, 10));\n    const month = parseFloat(idCard18.substring(10, 12));\n    const day = parseFloat(idCard18.substring(12, 14));\n    const temp_date = new Date(year, month - 1, day);\n    // 这里用getFullYear()获取年份，避免千年虫问题\n    if (temp_date.getFullYear() !== year\n        || temp_date.getMonth() !== month - 1\n        || temp_date.getDate() !== day) {\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * 验证15位数身份证号码中的生日是否是有效生日\n * @param idCard15 15位书身份证字符串\n */\nfunction isValidityBrithBy15IdCard(idCard15: string): boolean {\n    const year = parseFloat(idCard15.substring(6, 8));\n    const month = parseFloat(idCard15.substring(8, 10));\n    const day = parseFloat(idCard15.substring(10, 12));\n    const temp_date = new Date(year, month - 1, day);\n    // 对于老身份证中的你年龄则不需考虑千年虫问题而使用getYear()方法\n    if (temp_date.getFullYear() % 100 !== year\n        || temp_date.getMonth() !== month - 1\n        || temp_date.getDate() !== day) {\n        return false;\n    }\n\n    return true;\n}\n"]}