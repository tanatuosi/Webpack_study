import jss from 'jss';
import jssGlobal from 'jss-plugin-global';
import jssNested from 'jss-plugin-nested';
import { getFontStyle } from '../controller.service';
import { ParameterLabel } from './label';
export function setParamLabelStyles(baseCls, { fontSize, fontFamily, decoration, color, fontWeight, fontStyle }) {
    const cls = `${baseCls}-${BI.UUID()}`;
    const selector = `.${cls}`;
    jss.use(jssGlobal(), jssNested());
    const fontStyle4Attach = fontStyle ? getFontStyle(fontStyle) : {};
    const fontWeight4Attach = fontWeight ? { 'font-weight': fontWeight } : {};
    jss.createStyleSheet({
        '@global': {
            [`${selector}`]: Object.assign(Object.assign(Object.assign({ 'font-size': `${fontSize}px`, 'font-family': `${fontFamily}` }, fontStyle4Attach), fontWeight4Attach), { color, 'text-decoration': decoration }),
        },
    }).attach();
    return cls;
}
export function setLabelStyle({ opacity, background, color }) {
    jss.use(jssGlobal(), jssNested());
    const cls = `${ParameterLabel.BASE_CLS}-${BI.UUID()}`;
    const selector = `.${cls}`;
    jss.createStyleSheet({
        '@global': {
            [`${selector}`]: {
                opacity,
                background,
                color,
            },
        },
    }).attach();
    return cls;
}
//# sourceMappingURL=label.service.js.map