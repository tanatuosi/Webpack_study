{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../src/modules/button/button.ts"],"names":[],"mappings":"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","sourcesContent":["import { WIDTH, HEIGHT } from '../controller.constants';\nimport { setStyles, transform2KeyCode } from './button.service';\nimport { shortcut, getIconCls } from '@engine/core';\nimport { ParameterControllerBasicProps4Item, ParameterControllerBasicProps4Render } from '../controller';\nimport { AbstractParameterControllerWidget, ControllerValidation } from '../controller.abstract';\nimport { Button } from '@fui/core';\n\n@shortcut()\nexport class ParameterButton extends AbstractParameterControllerWidget {\n    public static xtype = 'report.main.parameter_container.controller.button';\n\n    private button: Button;\n\n    private keydownListener: { remove: () => void; };\n\n    private btnCls = `report-main-parameter-container-controller-button-${BI.UUID()}`;\n\n    public props: ParamButtonProps = {\n        baseCls: 'report-main-parameter-container-controller-button',\n        width: WIDTH,\n        height: HEIGHT,\n        text: '',\n        value: '',\n        xtype: 'button',\n        hotkeys: '',\n        isToggle: false,\n        isCustomStyle: false,\n        icon: '',\n        initial: undefined,\n        over: undefined,\n        click: undefined,\n        disabled: false,\n        invisible: false,\n        needSubmit: false,\n        fontSize: 12,\n        color: '',\n        fontweight: '',\n        fontfamily: '',\n        decoration: '',\n        fontstyle: undefined,\n        $testId: 'report-main-parameter-container-controller-button',\n        widgetName: '',\n        allowBg: true,\n    }\n\n    public mounted() {\n        const { hotkeys: $hotkeys } = this.options;\n        !this.silence && this.fireEvent('afterinit');\n\n        this.button.text.setStyle({\n            'text-overflow': 'clip',\n        });\n\n        const hotkeys = $hotkeys.trim().split('+');\n\n        this.keydownListener?.remove();\n\n        this.keydownListener = BI.EventListener.listen(document, 'keydown', BI.debounce((evt: KeyboardEvent) => {\n            // 非组合键\n            \n            // 屏蔽操作放在其它控件中，本地监控全局\n            /* if (evt.target !== document.body) {\n                return;\n            } */\n            if (BI.isEmptyString($hotkeys)) {\n                return;\n            }\n\n            if (BI.size(hotkeys) === 1) {\n                const code = transform2KeyCode(BI.first(hotkeys));\n                (BI.isArray(code) && code.indexOf(evt.keyCode) !== -1\n                    || evt.keyCode === code) && this.doClick();\n\n                return;\n            }\n\n            // 组合键\n            const keys: [string | number] = [evt.keyCode];\n\n            evt.ctrlKey || evt.metaKey\n                ? keys.unshift('ctrl')\n                : evt.altKey\n                    ? keys.unshift('alt')\n                    : evt.shiftKey\n                        ? keys.unshift('shift')\n                        : null;\n\n            if (keys.length === 1) {\n                return;\n            }\n\n            // 暂时不支持组合键里面带数字的情况，后续拓展的话这里也要适配\n            BI.isEqual([hotkeys[0], transform2KeyCode(hotkeys[1])], keys) && this.doClick();\n        }, 300));\n    }\n\n    public render() {\n        const { iconInfo, fontSize, fontweight, fontfamily, width, height, text, color, decoration, initial, click, over, fontstyle, xtype, widgetName } = this.options;\n\n        const btnCls = this.btnCls;\n\n        if (xtype === 'freebutton') {\n            setStyles({\n                fontSize,\n                color,\n                fontWeight: fontweight,\n                fontFamily: fontfamily,\n                decoration,\n                initial,\n                click,\n                hover: over,\n                fontStyle: fontstyle,\n            }, btnCls);\n        } else {\n            setStyles({\n                fontSize,\n                initial: {\n                    background: 'inhreit',\n                },\n            }, btnCls);\n        }\n\n        const iconAttrs = !iconInfo\n            ? {}\n            : {\n                iconCls: getIconCls(iconInfo),\n                iconWidth: 16,\n            };\n        \n        return {\n            type: BI.Button.xtype,\n            ref: (_ref: Button) => {\n                this.button = _ref;\n            },\n            cls: `button ${btnCls}`,\n            attributes: {\n                id: `fr-btn-${widgetName}`,\n            },\n            ...iconAttrs,\n            level: 'common',\n            width,\n            textWidth: width,\n            height,\n            text,\n            minWidth: 0,\n            block: xtype === 'freebutton',\n            listeners: [{\n                eventName: BI.Button.EVENT_CHANGE,\n                action: () => {\n                    !this.silence && this.fireEvent('click');\n                },\n            }],\n        };\n    }\n\n    public preGetValidation(): ControllerValidation {\n        return {\n            result: true,\n        };\n    }\n\n    public postGetValidation(): ControllerValidation {\n        return {\n            result: true,\n        };\n    }\n\n    public postValidateAndToast() {\n        return true;\n    }\n\n    public getValue() {\n        return this.button.getText();\n    }\n\n    public getText() {\n        return this.button.getText();\n    }\n\n    public reset() {\n        this.button.setText(this.options.text);\n    }\n\n    /**\n     * 公开对外接口，使可触发button的click\n     */\n    public doClick() {\n        BI.delay(() => {\n            this.button.doClick();\n        }, BI.EVENT_RESPONSE_TIME * 2);\n    }\n\n    public async setControllerValue(v: string) {\n        if (BI.isNull(v) || BI.isEmptyString(v)) {\n            return;\n        }\n\n        this.button.setText(v);\n    }\n\n    public setInteractValue(v: string) {\n        this.setControllerValue(v);\n    }\n\n    public setFontSize(fontSize: number) {\n        this.options.fontSize = fontSize;\n    }\n\n    public setStyle(styles: Parameters<AbstractParameterControllerWidget['setStyle']>[0]) {\n        setStyles(styles, this.btnCls);\n    }\n}\n\nexport interface ParamButtonProps extends ParameterControllerButtonProps4Render4Item {\n    baseCls: string;\n\n    /**\n     * REPORT-18327 主jar修改赶不上这次发布，作兼容处理\n     */\n    fontSize: number;\n\n    /**\n     * 查询按钮特有标志符\n     */\n    key?: string;\n    $testId: string;\n    widgetName: string;\n    iconInfo?: {\n        iconName: string;\n        iconPosition: string;\n        toolbarImage: string;\n    }\n}\n\n/**\n * 按钮\n */\nexport interface ParameterControllerButtonProps4Render4Item extends ParameterControllerBasicProps4Item {\n\n    /**\n     * 快捷键\n     */\n    xtype: 'button' | 'freebutton' | 'formsubmit';\n\n    /**\n     * 快捷键\n     */\n    hotkeys: string;\n\n    /**\n     * 按钮上文字\n     */\n    text: string;\n\n    /**\n     * 是否切换按钮\n     */\n    isToggle: boolean;\n\n    /**\n     * 是否自定义样式\n     */\n    isCustomStyle: boolean;\n\n    /**\n     * button: 字符串, freebutton: 对象, background 属性为图片 url\n     */\n    icon: string | ParameterControllerButtonProps4RenderBackground;\n\n    /**\n     * freebutton: 对象, background 属性为图片 url\n     */\n    initial?: ParameterControllerButtonProps4RenderBackground;\n\n    /**\n     * freebutton: 对象, background 属性为图片 url\n     */\n    over?: ParameterControllerButtonProps4RenderBackground;\n\n    /**\n     * freebutton: 对象, background 属性为图片 url\n     */\n    click?: ParameterControllerButtonProps4RenderBackground;\n\n    /**\n     * 字体颜色\n     */\n    color?: string;\n\n    /**\n     * 字体粗细\n     */\n    fontweight?: string;\n\n    /**\n     * 字体家族\n     */\n    fontfamily?: string;\n\n    /**\n     * 字体样式\n     */\n    decoration?: string;\n\n    /**\n     * 字体style\n     */\n    fontstyle?: string;\n}\n\n/**\n * 按钮背景\n */\nexport interface ParameterControllerButtonProps4RenderBackground {\n\n    /**\n     * 属性为图片 url\n     */\n    background: string;\n}\n\nexport interface ParameterControllerButtonProps4Render extends ParameterControllerBasicProps4Render, ParameterControllerButtonProps4Render4Item {}\n\n"]}