import jss from 'jss';
import jssGlobal from 'jss-plugin-global';
import jssNested from 'jss-plugin-nested';
import { getFontStyle } from '../controller.service';
/**
 * 创建0-9，a-z对应keycode
 * @returns code
 */
function createCommonCode() {
    const commonCode = {};
    for (let i = 0; i < 26; i++) {
        if (i >= 0 && i <= 9) {
            // 小键盘0-9对应96-105
            commonCode[i] = [48 + i, 96 + i];
        }
        commonCode[String.fromCharCode(97 + i)] = i + 65;
    }
    return commonCode;
}
const keyAlias2Code = Object.assign({ backspace: 8, tab: 9, enter: 13, shift: 16, ctrl: 17, alt: 18, pause: 19, capslock: 20, esc: 27, space: 32, pageup: 33, pagedown: 34, end: 35, home: 36, left: 37, up: 38, right: 39, down: 40, insert: 45, del: 46, numlock: 144, scroll: 145, f1: 112, f2: 113, f12: 123, 'return': 13 }, createCommonCode());
export function setStyles({ fontSize, color, fontWeight, fontFamily, decoration, initial, click, hover, fontStyle, opacity, background, border, ['border-radius']: borderRadius, }, btnCls) {
    jss.use(jssGlobal(), jssNested());
    const styles4Attach = {};
    if (fontSize) {
        styles4Attach['font-size'] = BI.isNumeric(fontSize) ? `${fontSize}px` : `${fontSize}`;
    }
    styles4Attach.color = color;
    styles4Attach['font-weight'] = fontWeight;
    styles4Attach['font-family'] = fontFamily;
    styles4Attach['text-decoration'] = decoration;
    styles4Attach.background = (initial === null || initial === void 0 ? void 0 : initial.background) || 'transparent';
    if (initial === null || initial === void 0 ? void 0 : initial['background-size']) {
        styles4Attach['background-size'] = initial === null || initial === void 0 ? void 0 : initial['background-size'];
    }
    if (initial === null || initial === void 0 ? void 0 : initial['background-position']) {
        styles4Attach['background-position'] = initial === null || initial === void 0 ? void 0 : initial['background-position'];
    }
    if (initial === null || initial === void 0 ? void 0 : initial['image-rendering']) {
        styles4Attach['image-rendering'] = initial === null || initial === void 0 ? void 0 : initial['image-rendering'];
    }
    styles4Attach['border-radius'] = '2px';
    styles4Attach['border-width'] = '1px solid transparent';
    if (opacity) {
        styles4Attach.opacity = `${opacity}`;
    }
    if (background) {
        styles4Attach.background = `${background}`;
    }
    if (border) {
        styles4Attach.border = `${border}`;
    }
    if (borderRadius) {
        styles4Attach['border-radius'] = `${borderRadius}`;
    }
    if (hover) {
        styles4Attach['&:hover'] = {
            background: hover.background,
        };
    }
    if (click) {
        styles4Attach['&:active'] = {
            background: click.background,
        };
    }
    jss.createStyleSheet({
        '@global': ['body', '#body']
            .reduce((styles, prefix) => {
            const baseSelector = `${prefix} .bi-button.button-common.${btnCls}`;
            styles[baseSelector] = styles4Attach;
            styles[`${baseSelector} .bi-text`] = fontStyle ? getFontStyle(fontStyle) : {};
            styles[`${baseSelector} .bi-icon-label`] = {
                margin: '0 4px',
            };
            return styles;
        }, {}),
    }).attach();
}
export function transform2KeyCode(char) {
    if (char in keyAlias2Code) {
        return keyAlias2Code[char];
    }
    return keyAlias2Code.enter;
}
//# sourceMappingURL=button.service.js.map