{"version":3,"file":"password.service.js","sourceRoot":"","sources":["../../../src/modules/password/password.service.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,MAAM,UAAU,qBAAqB,CAAC,CAAS,EAAE,EAAE,UAAU,EAAE,KAAK,EAA2C;IAC3G,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE;QACzB,OAAO,KAAK,CAAC;KAChB;IAED,IAAI,CAAC,KAAK,EAAE,IAAI,UAAU,EAAE;QACxB,OAAO,IAAI,CAAC;KACf;IAED,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,UAAU,wBAAwB,CAAC,CAAS,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAmE;IACtJ,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE;QACzB,OAAO,QAAQ,CAAC;KACnB;IAED,OAAO,WAAW,CAAC;AACvB,CAAC","sourcesContent":["/**\n * 校验值\n * @param v 控件值\n * @param opts 校验条件\n * @param opts.allowBlank 是否允许为空\n * @param opts.regex 正则校验字符串\n */\nexport function validateParamPassword(v: string, { allowBlank, regex } : { allowBlank: boolean, regex: string }): boolean {\n    if (v === '' && !allowBlank) {\n        return false;\n    }\n\n    if (v === '' && allowBlank) {\n        return true;\n    }\n\n    return new RegExp(regex).test(v);\n}\n\n/**\n * 根据配置信息\n * @param v 控件值\n * @param opts 配置参数\n * @param opts.allowBlank 是否允许为空\n * @param opts.errorMsg 空白报错信息\n * @param opts.regErrorMsg 校验报错信息\n */\nexport function getParamPasswordErrorMsg(v: string, { allowBlank, errorMsg, regErrorMsg } : { allowBlank: boolean, errorMsg: string, regErrorMsg: string }): string {\n    if (v === '' && !allowBlank) {\n        return errorMsg;\n    }\n\n    return regErrorMsg;\n}\n"]}