{"version":3,"file":"password.js","sourceRoot":"","sources":["../../../src/modules/password/password.ts"],"names":[],"mappings":"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","sourcesContent":["import { WIDTH, HEIGHT } from '../controller.constants';\nimport { setEditorStyle, setFontSize } from '../controller.service';\nimport { validateParamPassword, getParamPasswordErrorMsg } from './password.service';\nimport { shortcut } from '@engine/core';\nimport { ParameterControllerBasicProps4Item, ParameterControllerPropsWithEditor, ParameterControllerBasicProps4Render } from '../controller';\nimport { AbstractParameterControllerWidget, ControllerValidation } from '../controller.abstract';\nimport { Editor } from '@fui/core';\n\n@shortcut()\nexport class ParameterPassword extends AbstractParameterControllerWidget {\n    public static xtype = 'report.main.parameter_container.controller.password';\n\n    public editor: Editor;\n\n    public props: ParamPasswordProps = {\n        baseCls: 'report-main-parameter-container-controller-password',\n        $testId: 'report-main-parameter-container-controller-password',\n        width: WIDTH,\n        height: HEIGHT,\n        value: '',\n        passwordText: true,\n        disabled: false,\n        invisible: false,\n        needSubmit: false,\n        fontSize: 12,\n        allowBlank: true,\n        errorMsg: BI.i18nText('Fine-Report_Preview_Can_Not_Null'),\n        watermark: '',\n        regex: '',\n        regErrorMsg: BI.i18nText('Fine-Report_Preview_Input_Error'),\n        allowBg: true,\n    }\n\n\n    public render() {\n        const { width, height, value, fontSize, watermark, disabled, allowBg } = this.options;\n\n        const editorCls = setFontSize('report-main-parameter-container-controller-password', fontSize);\n\n        return {\n            type: BI.VerticalLayout.xtype,\n            cls: allowBg ? 'bi-card' : '',\n            items: [{\n                type: BI.Editor.xtype,\n                cls: `${editorCls} bi-border bi-border-radius bi-focus-shadow`,\n                ref: (_ref: Editor) => {\n                    this.editor = _ref;\n                },\n                width: width - 2,\n                height: height - 2,\n                disabled,\n                allowBlank: true,\n                watermark,\n                value,\n                inputType: 'password',\n                listeners: [{\n                    eventName: BI.TextEditor.EVENT_FOCUS,\n                    action: () => {\n                        this.hideBubble();\n    \n                        !this.silence && this.fireEvent('beforeedit');\n                    },\n                }, {\n                    eventName: BI.TextEditor.EVENT_KEY_DOWN,\n                    action: () => {\n                        const result = !this.silence && this.fireEvent('afteredit');\n                        result !== false && this.fireEvent('EVENT_CHANGE', this.editor.getValue());\n                    },\n                }, {\n                    eventName: BI.TextEditor.EVENT_BLUR,\n                    action: () => {\n                        !this.silence && this.fireEvent('stopedit');\n                    },\n                }],\n            }],\n        };\n    }\n\n    // 公开接口\n    public setWaterMark(v: string) {\n        this.editor.setWaterMark(v);\n    }\n\n    public async setControllerValue(v: any) {\n        this.editor.setValue(v);\n    }\n\n    public setInteractValue(v: any) {\n        this.setControllerValue(v);\n    }\n\n    private getBasicValidation(value: string | any[] = this.editor.getValue()): ControllerValidation {\n        const v = BI.isArray(value) ? value.map(v => `${v}`).join('') : value;\n\n        const { allowBlank, regex, errorMsg, regErrorMsg } = this.options;\n\n        return validateParamPassword(v, { allowBlank, regex }) ? {\n            result: true,\n        } : {\n            result: false,\n            errorMsg: getParamPasswordErrorMsg(v, { allowBlank, errorMsg, regErrorMsg }),\n        };\n    }\n\n    public preGetValidation(): ControllerValidation {\n        const { value } = this.options;\n\n        return this.getBasicValidation(value);\n    }\n\n    public postGetValidation(): ControllerValidation {\n        return this.getBasicValidation();\n    }\n\n    public postValidateAndToast() {\n        const validation = this.getValidation();\n\n        if (validation.result) {\n            return true;\n        }\n\n        this.showBubble(validation.errorMsg);\n\n        return false;\n    }\n\n    public emitManualStopEditEvent() {\n        this.fireEvent('stopedit');\n    }\n    \n    public getValue() {\n        return this.editor.getValue();\n    }\n\n    public reset() {\n        this.editor.setValue();\n    }\n\n    public resize(width: number, height: number) {\n        const restoreValue = this.editor.getValue();\n\n        super.resize(width, height);\n\n        this.editor.setValue(restoreValue);\n    }\n\n    public getAdapter() {\n        return this.editor;\n    }\n\n    public focus() {\n        this.editor.focus();\n    }\n\n    public blur(): void {\n        this.editor.blur();\n    }\n\n    public setStyle(styles: Parameters<AbstractParameterControllerWidget['setStyle']>[0]) {\n        this.editor.element.addClass(setEditorStyle(styles));\n    }\n\n    public getText() {\n        return this.editor.getValue();\n    }\n}\n\n\nexport interface ParamPasswordProps extends ParameterControllerPasswordProps4Render4Item {\n    baseCls: string;\n    $testId: string;\n}\n\nexport interface ParameterControllerPasswordProps4Render4Item extends ParameterControllerBasicProps4Item, ParameterControllerPropsWithEditor {\n\n    /**\n     * 密码文本\tBoolean 类型, 默认为 true\n     */\n    passwordText: boolean,\n\n    /**\n     * 填写规则(正则验证)\t默认为空, 设置填写规则后生成对应正则表达式\n     */\n    regex: string;\n\n    /**\n     * 验证错误信息\n     */\n    regErrorMsg: string;\n}\n\nexport interface ParameterControllerPasswordProps4Render extends ParameterControllerBasicProps4Render, ParameterControllerPasswordProps4Render4Item {}\n\n"]}