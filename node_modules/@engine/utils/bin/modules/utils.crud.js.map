{"version":3,"file":"utils.crud.js","sourceRoot":"","sources":["../../src/modules/utils.crud.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAC5C,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAE7D;;GAEG;AACH,MAAM,UAAU,gBAAgB,CAAC,GAMhC;IACG,MAAM,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,SAAS,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC;IAE3D,OAAO,WAAW,CAAC,aAAa,EAAE;QAC9B,IAAI,kBACA,OAAO,EAAE,OAAO,EAChB,OAAO,IACJ,SAAS,CACf;KACJ,CAAC,CAAC;AACP,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,iBAAiB;IAC7B,WAAW,CAAC,gCAAgC,EAAE;QAC1C,OAAO,EAAE,EAAE;KACd,CAAC,CAAC,IAAI,CAAC,CAAC,GAER,EAAE,EAAE;QACD,MAAM,2BAA2B,GAAG,GAAG,CAAC,yBAAyB,CAAC;QAClE,oBAAoB;QACpB,IAAI,2BAA2B,IAAI,YAAY,EAAE,EAAE;YAC/C,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,iCAAiC,CAAC,EAAE;gBACzD,KAAK,EAAE,OAAO;aACjB,CAAC,CAAC;SACN;IACL,CAAC,CAAC,CAAC;AACP,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,mBAAmB,CAAC,IAA6B,EAAE,WAAyF;IACxJ,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;IACrB,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE;QACnB,IAAI,EAAE,aAAa,CAAC,KAAK;QACzB,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;QACX,MAAM,EAAE,EAAE,CAAC,QAAQ,CAAC,yBAAyB,CAAC;QAC9C,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE,EAAE;QACZ,QAAQ,EAAE,EAAE;QACZ,IAAI,EAAE;YACF,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK;YACpB,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,iCAAiC,CAAC;SACvD;KACJ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACZ,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;QACxB,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,EAAE,CAAC,MAAM,KAAK,OAAO,EAAE;YACvB,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,qCAAqC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,oCAAoC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SAClI;aAAM;YACH,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,yBAAyB,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,sCAAsC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SACxH;IACL,CAAC,CAAC,CAAC;AACP,CAAC","sourcesContent":["import { isFullScreen } from '@engine/core';\nimport { requestPost } from '@engine/crud';\nimport { ReportPopover } from './components/popover/popover';\n\n/**\n *  发送邮件\n */\nexport function sentMailByParams(opt: {\n    mail: {\n        xmlconf?: string,\n        paraMap?: { [key: string]: string },\n    },\n    extraData?: { [key: string]: any }\n}) {\n    const { mail: { xmlconf, paraMap }, extraData = {} } = opt;\n\n    return requestPost(`/email/send`, {\n        data: {\n            mailXML: xmlconf,\n            paraMap,\n            ...extraData,\n        },\n    });\n}\n\n/**\n * 浏览器非100%时异常提示\n */\nexport function checkIfFullScreen(): void {\n    requestPost('report/check/frontEndException', {\n        baseURL: '',\n    }).then((res: {\n        frFrontEndExceptionPrompt: boolean;\n    }) => {\n        const isFRFrontEndExceptionPrompt = res.frFrontEndExceptionPrompt;\n        // 只有后台检测开关开启后才会进行检测\n        if (isFRFrontEndExceptionPrompt && isFullScreen()) {\n            BI.Msg.toast(BI.i18nText('Fine-Report_Error_NonFullscreen'), {\n                level: 'error',\n            });\n        }\n    });\n}\n\n/**\n * 通过popover发送邮件\n * @param data 数据\n * @param emailSender 发送请求的函数\n */\nexport function sendMailWithPopover(data: { [key: string]: any; }, emailSender: (data: { [key: string]: any; }) => Promise<{ status: 'error' | 'success'; }>) {\n    const id = BI.UUID();\n    BI.Popovers.create(id, {\n        type: ReportPopover.xtype,\n        width: 200,\n        height: 100,\n        header: BI.i18nText('Fine-Engine_Basic_Email'),\n        closable: false,\n        bodyHgap: 20,\n        bodyTgap: 10,\n        body: {\n            type: BI.Label.xtype,\n            text: BI.i18nText('Fine-Engine_Basic_Email_Sending'),\n        },\n    }).open(id);\n    emailSender(data).then(re => {\n        BI.Popovers.remove(id);\n        if (re.status === 'error') {\n            BI.Msg.alert(BI.i18nText('Fine-Engine_Basic_Email_Send_Failed'), BI.i18nText('Fine-Engine_Basic_Email_Send_Error'), () => { });\n        } else {\n            BI.Msg.alert(BI.i18nText('Fine-Engine_Basic_Email'), BI.i18nText('Fine-Engine_Basic_Email_Send_Success'), () => { });\n        }\n    });\n}\n"]}