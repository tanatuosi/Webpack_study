import { isFullScreen } from '@engine/core';
import { requestPost } from '@engine/crud';
import { ReportPopover } from './components/popover/popover';
/**
 *  发送邮件
 */
export function sentMailByParams(opt) {
    const { mail: { xmlconf, paraMap }, extraData = {} } = opt;
    return requestPost(`/email/send`, {
        data: Object.assign({ mailXML: xmlconf, paraMap }, extraData),
    });
}
/**
 * 浏览器非100%时异常提示
 */
export function checkIfFullScreen() {
    requestPost('report/check/frontEndException', {
        baseURL: '',
    }).then((res) => {
        const isFRFrontEndExceptionPrompt = res.frFrontEndExceptionPrompt;
        // 只有后台检测开关开启后才会进行检测
        if (isFRFrontEndExceptionPrompt && isFullScreen()) {
            BI.Msg.toast(BI.i18nText('Fine-Report_Error_NonFullscreen'), {
                level: 'error',
            });
        }
    });
}
/**
 * 通过popover发送邮件
 * @param data 数据
 * @param emailSender 发送请求的函数
 */
export function sendMailWithPopover(data, emailSender) {
    const id = BI.UUID();
    BI.Popovers.create(id, {
        type: ReportPopover.xtype,
        width: 200,
        height: 100,
        header: BI.i18nText('Fine-Engine_Basic_Email'),
        closable: false,
        bodyHgap: 20,
        bodyTgap: 10,
        body: {
            type: BI.Label.xtype,
            text: BI.i18nText('Fine-Engine_Basic_Email_Sending'),
        },
    }).open(id);
    emailSender(data).then(re => {
        BI.Popovers.remove(id);
        if (re.status === 'error') {
            BI.Msg.alert(BI.i18nText('Fine-Engine_Basic_Email_Send_Failed'), BI.i18nText('Fine-Engine_Basic_Email_Send_Error'), () => { });
        }
        else {
            BI.Msg.alert(BI.i18nText('Fine-Engine_Basic_Email'), BI.i18nText('Fine-Engine_Basic_Email_Send_Success'), () => { });
        }
    });
}
//# sourceMappingURL=utils.crud.js.map