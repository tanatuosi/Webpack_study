var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { shortcut, store } from '@engine/core';
import { ReportWateramrkModel } from './watermark.model';
let ReportWateramrk = class ReportWateramrk extends BI.Widget {
    constructor() {
        super(...arguments);
        this.props = {
            watermark: {},
        };
        this.watch = {
            transformedWatermark: () => {
                var _a;
                (_a = this.watermarkPane) === null || _a === void 0 ? void 0 : _a.setValue(this.model.transformedWatermark);
            },
        };
    }
    render() {
        return {
            type: BI.AbsoluteLayout.xtype,
            items: [{
                    el: {
                        type: BI.WaterMark.xtype,
                        ref: (_ref) => {
                            this.watermarkPane = _ref;
                        },
                        watermark: this.model.transformedWatermark,
                    },
                    top: 0,
                    left: 0,
                    right: 0,
                    bottom: 0,
                }],
        };
    }
    setValue(watermark) {
        this.store.setWatermark(watermark);
    }
};
ReportWateramrk.xtype = 'report.watermark';
ReportWateramrk = __decorate([
    shortcut(),
    store(ReportWateramrkModel, {
        props() {
            return {
                watermark: this.options.watermark,
            };
        },
    })
], ReportWateramrk);
export { ReportWateramrk };
//# sourceMappingURL=watermark.js.map