{"version":3,"file":"watermark.js","sourceRoot":"","sources":["../../../../src/modules/components/watermark/watermark.ts"],"names":[],"mappings":";;;;;;AACA,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAC/C,OAAO,EAAE,oBAAoB,EAAE,MAAM,mBAAmB,CAAC;AAUzD,IAAa,eAAe,GAA5B,MAAa,eAAgB,SAAQ,EAAE,CAAC,MAAM;IAA9C;;QAGW,UAAK,GAAG;YACX,SAAS,EAAE,EAAyB;SACvC,CAAC;QAQK,UAAK,GAAG;YACX,oBAAoB,EAAE,GAAG,EAAE;;gBACvB,MAAA,IAAI,CAAC,aAAa,0CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YAClE,CAAC;SACJ,CAAA;IAwBL,CAAC;IAtBU,MAAM;QACT,OAAO;YACH,IAAI,EAAE,EAAE,CAAC,cAAc,CAAC,KAAK;YAC7B,KAAK,EAAE,CAAC;oBACJ,EAAE,EAAE;wBACA,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,KAAK;wBACxB,GAAG,EAAE,CAAC,IAAe,EAAE,EAAE;4BACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC9B,CAAC;wBACD,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB;qBAC7C;oBACD,GAAG,EAAE,CAAC;oBACN,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC;oBACR,MAAM,EAAE,CAAC;iBACZ,CAAC;SACL,CAAC;IACN,CAAC;IAEM,QAAQ,CAAC,SAA8B;QAC1C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;CACJ,CAAA;AAxCiB,qBAAK,GAAG,kBAAkB,CAAC;AADhC,eAAe;IAR3B,QAAQ,EAAE;IACV,KAAK,CAAC,oBAAoB,EAAE;QACzB,KAAK;YACD,OAAO;gBACH,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;aACpC,CAAC;QACN,CAAC;KACJ,CAAC;GACW,eAAe,CAyC3B;SAzCY,eAAe","sourcesContent":["import { WaterMark } from '@fui/materials';\nimport { shortcut, store } from '@engine/core';\nimport { ReportWateramrkModel } from './watermark.model';\n\n@shortcut()\n@store(ReportWateramrkModel, {\n    props(this: ReportWateramrk) {\n        return {\n            watermark: this.options.watermark,\n        };\n    },\n})\nexport class ReportWateramrk extends BI.Widget {\n    public static xtype = 'report.watermark';\n\n    public props = {\n        watermark: {} as Partial<XWaterMark>,\n    };\n\n    private store: ReportWateramrkModel['store'];\n\n    private model: ReportWateramrkModel['model'];\n\n    private watermarkPane?: WaterMark;\n\n    public watch = {\n        transformedWatermark: () => {\n            this.watermarkPane?.setValue(this.model.transformedWatermark);\n        },\n    }\n\n    public render() {\n        return {\n            type: BI.AbsoluteLayout.xtype,\n            items: [{\n                el: {\n                    type: BI.WaterMark.xtype,\n                    ref: (_ref: WaterMark) => {\n                        this.watermarkPane = _ref;\n                    },\n                    watermark: this.model.transformedWatermark,\n                },\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n            }],\n        };\n    }\n\n    public setValue(watermark: Partial<XWaterMark>) {\n        this.store.setWatermark(watermark);\n    }\n}\n\n/**\n * 水印\n */\nexport interface XWaterMark {\n    text: string;\n    fontSize: number;\n    horizontalGap: number;\n    verticalGap: number;\n    color: string;\n}\n"]}