var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { shortcut } from '@engine/core';
import { Resizable } from 'js-resizable';
let ReportPopover = class ReportPopover extends BI.Popover {
    constructor() {
        super(...arguments);
        this.props = {
            baseCls: 'bi-popover bi-card bi-border-radius',
            size: 'normal',
            logic: {
                dynamic: false,
            },
            header: null,
            headerHeight: 40,
            body: null,
            footer: null,
            footerHeight: 44,
            closable: true,
            bodyHgap: 0,
            bodyTgap: 0,
            btns: [BI.i18nText('BI-Basic_Sure'), BI.i18nText('BI-Basic_Cancel')],
            warningTitle: '',
        };
    }
    mounted() {
        var _a;
        (_a = super.mounted) === null || _a === void 0 ? void 0 : _a.call(this);
        // 拖动改变弹窗大小
        this.resizable = new Resizable(this.element.context);
    }
    // 自定义弹窗位置
    setPosition(position) {
        const { center, left, top } = position;
        if (center) {
            return;
        }
        this.resizable.setPosition(top || 0, left || 0);
    }
};
ReportPopover.xtype = 'report.main.popover';
ReportPopover = __decorate([
    shortcut()
], ReportPopover);
export { ReportPopover };
let ReportBarPopover = class ReportBarPopover extends ReportPopover {
    beforeCreate() {
        const o = this.options;
        o.footer || (o.footer = {
            type: BI.RightVerticalAdaptLayout.xtype,
            lgap: 10,
            items: [{
                    type: BI.Button.xtype,
                    text: this.options.btns[1],
                    value: 1,
                    level: 'ignore',
                    handler: (v) => {
                        this.fireEvent(BI.Popover.EVENT_CANCEL, v);
                        this.close();
                    },
                }, {
                    type: BI.Button.xtype,
                    text: this.options.btns[0],
                    warningTitle: o.warningTitle,
                    value: 0,
                    handler: (v) => {
                        this.fireEvent(BI.Popover.EVENT_CONFIRM, v);
                        this.close();
                    },
                }],
        });
    }
};
ReportBarPopover.xtype = 'report.main.bar_popover';
ReportBarPopover = __decorate([
    shortcut()
], ReportBarPopover);
export { ReportBarPopover };
//# sourceMappingURL=popover.js.map