var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { shortcut } from '@engine/core';
import jss from 'jss';
import './copyright_mark.less';
let CopyrightMark = class CopyrightMark extends BI.Widget {
    render() {
        const { text, color, backgroundColor, alpha, fontSize, url } = this.options.copyright;
        const copyrightMarkStyle = jss
            .createStyleSheet({
            copyright: {
                background: backgroundColor,
                opacity: alpha,
                'font-size': `${fontSize}px`,
            },
            font: {
                color,
            },
        })
            .attach();
        return !url
            ? {
                type: BI.AbsoluteLayout.xtype,
                cls: 'report-core-copyrightmark',
                items: [{
                        el: {
                            type: BI.Label.xtype,
                            cls: `copyright-lable copyright-unreachable ${copyrightMarkStyle.classes.copyright} ${copyrightMarkStyle.classes.font}`,
                            text,
                            fontSize,
                            hgap: 10,
                            vgap: 10,
                        },
                        bottom: 10,
                        right: 10,
                    }, {
                        el: this.options.renderItem(),
                        top: 0,
                        bottom: 0,
                        left: 0,
                        right: 0,
                    }],
            }
            : {
                type: BI.AbsoluteLayout.xtype,
                cls: 'report-core-copyrightmark',
                items: [{
                        el: this.options.renderItem(),
                        top: 0,
                        bottom: 0,
                        left: 0,
                        right: 0,
                    }, {
                        el: {
                            type: BI.VerticalAdaptLayout.xtype,
                            cls: `copyright-lable ${copyrightMarkStyle.classes.copyright}`,
                            items: [{
                                    type: BI.A.xtype,
                                    href: url,
                                    cls: `${copyrightMarkStyle.classes.font}`,
                                    text,
                                    fontSize,
                                }, {
                                    type: BI.A.xtype,
                                    cls: 'copyright-link',
                                    href: 'https://help.fanruan.com/finereport/doc-view-281.html',
                                    text: BI.i18nText('Fine-Report_Trial_Mode'),
                                    fontSize,
                                }],
                            hgap: 10,
                            vgap: 10,
                        },
                        bottom: 10,
                        right: 10,
                    }],
            };
    }
};
CopyrightMark.xtype = 'report.core.copyrightmark';
CopyrightMark = __decorate([
    shortcut()
], CopyrightMark);
export { CopyrightMark };
export function copyright() {
    return function (_target, _propertyKey, descriptor) {
        const render = descriptor.value;
        descriptor.value = function (...args) {
            const { WidgetCopyrightMark: copyright } = this.options;
            return copyright ? {
                type: CopyrightMark.xtype,
                copyright: Object.assign({ color: '#7a7e85', backgroundColor: 'rgb(238, 240, 243)', alpha: 0.7, fontSize: 12 }, copyright),
                renderItem: () => render.apply(this, args),
            } : render.apply(this, args);
        };
        return descriptor;
    };
}
//# sourceMappingURL=copyright_mark.js.map