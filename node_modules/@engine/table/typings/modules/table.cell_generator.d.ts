import { XCellHyperLink } from '@engine/link';
import { WidgetManager } from '@engine/utils';
import { AbstractTableCell } from './cell/cell.abstract';
import { AbstractCellControllerHoc } from './cell/cell_controllers/cell_controller_hoc/cell_controller_hoc.abstract';
import { CellHandler } from './handler/handler';
import { CellStyle, PageResult, TableEventCellSelectTextArgs, XCell, XCelladvancedattr, XCellSortHeader, XCellValue } from './table.types';
export declare class TableCellGenerator {
    private listeners;
    externalInterface: TableExternalContext;
    constructor(externalInterface: TableExternalContext);
    addHandler(Handler: CellHandler, ...external: any[]): void;
    generate(opts: {
        cell: XCell;
        style: CellStyle;
        cellhyperlink?: XCellHyperLink;
        celladvancedattr?: XCelladvancedattr;
        sortHeader?: XCellSortHeader;
        widget?: {
            [key: string]: any;
        };
    }): AbstractTableCell;
    private getHyperLinks;
    getListenerByName(name: string): {
        eventName: string;
        name: string;
        action: (args: {
            [key: string]: any;
            e?: Event | undefined;
            x: number;
            y: number;
            cell: import("@fui/sheet/types").Cell;
        }) => void | Promise<any>;
    } | undefined;
}
/**
 * FRTable提供的接口方法
 */
export interface TableExternalContext {
    attach(widget: {
        [key: string]: any;
    }): any;
    /**
     * 获取现在table的数据
     */
    getTableData(): PageResult[][];
    populate(pageResults?: PageResult[][]): void;
    getWidgetName(): string | undefined;
    getStickerManagers(): Map<string, WidgetManager<any>>;
    getCellValueById(id: string): XCellValue['cv'];
    getCellValueByWidgetName(widgetName: string): any;
    getWidgetByCell(row: number, col: number): AbstractCellControllerHoc | undefined;
    setSelectCell(info: TableEventCellSelectTextArgs): void;
    partialPopulate(cells: PageResult[]): void;
    getDependenceValueById(address: string): any;
    getFontResizable(): boolean;
}
