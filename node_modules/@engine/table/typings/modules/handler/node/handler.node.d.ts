import { PageResult } from '../../table.types';
import { HandlerExternalContext } from '../handler';
import { AbstractCellHandler } from '../handler.abstract';
interface Entry {
    targetId: number | string;
    effectRows: number;
}
interface EffectEntry {
    key: number;
    value: Entry[];
}
export declare class NodeCellClickHandler extends AbstractCellHandler {
    eventNames: string[];
    name: string;
    merger: string;
    private cache;
    private loading;
    private effectEntryMap;
    private nodeDataFetcher;
    constructor(externalInterface: HandlerExternalContext, opt?: {
        nodeDataFetcher: NodeCellClickHandler['nodeDataFetcher'];
    });
    /**
     * 设置effectEntryMap，测试用
     * @param v 值
     */
    setEffectEntryMap(v: EffectEntry[] | EffectEntry): void;
    /**
     * 设置effectEntryMap，测试用
     * @param v 值
     */
    setCache(v: {
        key: number;
        value: PageResult[][];
    }[] | {
        key: number;
        value: PageResult[][];
    }): void;
    /**
     * 挂载不透明的loading
     */
    private attach;
    action({ open, id, eventName, layer }: Parameters<AbstractCellHandler['action']>[0] & {
        open: boolean;
        id: number;
        eventName: string;
        layer: number;
    }): Promise<void>;
    getPageResults(pageResults: PageResult[][], cellData: PageResult, open: boolean): Promise<PageResult[][]>;
    /**
     * 获取展开值
     * @param table table对象
     * @param id 点击节点的id
     */
    private getNodeData;
    /**
     * 展开行
     * @param raw 原始数据
     * @param id 父节点id
     */
    private expandRow;
    /**
     * 收起行
     * @param raw 原始数据
     * @param pId 父节点id
     */
    private collapseRow;
    /**
     * 计算data内要收起的相关id
     * @param data 数据
     * @param id 默认id
     */
    private getEffectEntries;
}
/**
 * 修正拓展行数据的y
 * @param raw 原始数据
 * @param expanded 推展数据
 * @param id 拓展节点id
 */
export declare function processRowExpandedData(raw: PageResult[][], expanded: PageResult[][], id: number | string): PageResult[][];
/**
 * 分离出和pId下的所有子节点
 * @param raw 原始数据
 * @param pId 父id
 * @param stay 父id所在行是否留下
 */
export declare function splitPageResultsByRow(raw: PageResult[][], pId: number | string, stay?: boolean): {
    unexpanded: PageResult[][];
    expanded: PageResult[][];
};
export {};
