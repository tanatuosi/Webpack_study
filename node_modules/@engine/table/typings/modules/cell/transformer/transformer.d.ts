import { Type } from '@engine/core';
import { PageResult, XCellValue } from '../../table.types';
import { XCellHyperLink } from '@engine/link';
import { TableExternalContext } from '../../table.cell_generator';
import { NormalCellValueTransformer } from './transformer.normal';
export declare class TableCellValueTransformerProvider {
    private cellDict;
    setValue(cellData: PageResult, value: {
        cv: NonNullable<XCellValue['cv']>;
        pv?: string;
        cellhyperlink?: XCellHyperLink;
    }, externalContext: TableCellValueTransformerContext, opt?: {
        /**
         * 是否忽略控件赋值
         */
        soft?: boolean;
    }): Promise<boolean>;
    set(key: string, transformer: Type<NormalCellValueTransformer>): void;
}
export declare const tableCellValueTransformerProvider: TableCellValueTransformerProvider;
declare type TableCellValueTransformerContext = Pick<TableExternalContext, 'getTableData' | 'getWidgetByCell' | 'getStickerManagers'>;
export {};
