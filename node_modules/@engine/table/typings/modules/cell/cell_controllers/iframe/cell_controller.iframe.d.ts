import { ControllerValidation } from '@engine/controller';
import { Iframe } from '@fui/core';
import { AbstractParameterCellControllerWidget } from '../cell_controller.abstract';
export declare class CellIframe extends AbstractParameterCellControllerWidget {
    static xtype: string;
    props: {
        src: string;
        width: number;
        height: number;
        fontSize: number;
        value: string;
        showOverFlowX: boolean;
        showOverFlowY: boolean;
        widgetName: string;
        cellWidgetName: string;
        reportIndex: number;
        position: {
            row: number;
            column: number;
        };
    };
    private iframe;
    render(): {
        type: string;
        items: {
            el: {
                type: string;
                ref: (_ref: Iframe) => void;
                src: string;
                width: number;
                height: number;
                name: string;
                attributes: {
                    scrolling: string;
                };
            };
            top: number;
            left: number;
            right: number;
            bottom: number;
        }[];
    };
    beforeInit(): Promise<void>;
    private getIframeControlAttr;
    private getRequestOpts;
    getValue(): string;
    setControllerValue(v: string): Promise<void>;
    setInteractValue(v: string): void;
    reset(): void;
    preGetValidation(): ControllerValidation;
    postGetValidation(): ControllerValidation;
    postValidateAndToast(): boolean;
    setStyle(): void;
}
