import { ControllerValidation } from '@engine/controller';
import { ListPane } from '@fui/core';
import { AbstractParameterCellControllerWidget } from '../cell_controller.abstract';
export declare class CellList extends AbstractParameterCellControllerWidget {
    static xtype: string;
    props: {
        width: number;
        height: number;
        fontSize: number;
        value: string;
        needSubmit: boolean;
        disabled: boolean;
        invisible: boolean;
        allowBlank: boolean;
        errorMsg: string;
        controlAttr: {
            data: {
                text: string;
                value: string;
            }[];
            value: string;
        };
        needHead: boolean;
        widgetName: string;
        reportIndex: number;
        position: {
            row: number;
            column: number;
        };
    };
    private pane;
    render(): {
        type: string;
        items: {
            el: {
                type: string;
                items: ({
                    type: string;
                    cls: string;
                    items: {
                        type: string;
                        layouts: {
                            type: string;
                            hgap: number;
                        }[];
                        items: {
                            type: string;
                            cls: string;
                            handler: () => void;
                        }[];
                        invisible: boolean;
                        height: number;
                    }[];
                    ref?: undefined;
                    el?: undefined;
                } | {
                    type: string;
                    ref: (_ref: ListPane) => void;
                    items: any[];
                    el: {
                        type: string;
                        chooseType: number;
                        layouts: {
                            type: string;
                        }[];
                    };
                    cls?: undefined;
                })[];
            };
            top: number;
            left: number;
            right: number;
            bottom: number;
        }[];
        invisible: boolean;
    };
    private removeSelectedItem;
    private getSelectedIndex;
    private addItemByValue;
    beforeInit(cb: Function): void;
    private getGroupItems;
    private getGroupControlAttr;
    private getRequestOpts;
    getValue(): any;
    setControllerValue($v?: string | number | undefined): Promise<void>;
    setInteractValue(): void;
    reset(): void;
    reloadControlAttr(): void;
    preGetValidation(): ControllerValidation;
    postGetValidation(): ControllerValidation;
    postValidateAndToast(): boolean;
    createItems(items: any[]): any[];
    setStyle(): void;
}
