{"version":3,"file":"resizer.service.js","sourceRoot":"","sources":["../../../src/modules/resizer/resizer.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { CellType, TableStickerOpt } from '../table.types';\n\nexport const fontScaleAttributeName = 'data-font-scale';\n\n/**\n * 对sticker进行自适应\n * @param rate 字体缩放比例\n * @param stickers stickers\n */\nexport function resizeStickerExtension(rate: number, extension: NonNullable<TableStickerOpt['extension']>): NonNullable<TableStickerOpt['extension']> {\n    const { el, ...args } = extension;\n\n    return {\n        el: extension.initialEl\n            .replaceAll(/font-size:\\s*[0-9.]+/, str => str.replaceAll(/[0-9.]+/, fontSize => parseFloat(fontSize) * rate))\n            .replaceAll(new RegExp(`${fontScaleAttributeName}=\\\\s*\"[0-9.]+`), str => str.replaceAll(/[0-9.]+/, () => rate)),\n        ...args,\n    };\n}\n\n/**\n * 移除横向作为边距的宽度\n */\nexport function removeColsAdjust(cols: number[]) {\n    cols[cols.length - 1] = 0;\n    cols[cols.length - 2] = 0;\n    cols[0] = 0;\n    \n    return cols;\n}\n\n/**\n * 移除纵向作为边距的宽度\n */\nexport function removeRowsAdjust(rows: number[]) {\n    rows[0] = 0;\n    rows[rows.length - 3] = 0;\n    rows[rows.length - 2] = 0;\n    rows[rows.length - 1] = 0;\n    \n    return rows;\n}\n\n/**\n * 根据缩放比例调整宽高，抹平浮点数\n * @param sizeList\n * @param rate\n * @returns\n */\n export function adjustSizeByRate(sizeList: number[], rate: number) {\n    /** 用于保留取整的余数 */\n    let remainderSize = 0;\n\n    return sizeList.map(size => {\n        /** 对于 remainderSize 在当下节点就直接处理完毕，remainderSize 不再累积 */\n        const result = size * rate + remainderSize;\n\n        /** 跟大多数浏览器行为保持一致，采用四舍五入的方法 */\n        const result2Int = Math.round(result);\n\n        /**\n         * 使得 remainderSize 的区间为 [-0.5, 0.5)\n         * 下一个节点单独依靠 remainderSize 四舍五入恒为0\n        */\n        remainderSize = result - result2Int;\n\n        return result2Int;\n    });\n}\n\nexport function resize(max: number, sizes:number[] = [], scale = 1) {\n    return adjustSize(max, adjustSizeByRate(sizes, scale));\n}\n\nexport function resizeFont(rate: number, minFontSize: number = 0, cells?: CellType[][]) {\n    cells && BI.each(cells, (_index: number, item) => {\n        BI.each(item, (_dataIndex: number, data) => {\n            if (data?.style?.defaultFontSize) {\n                data.style.fontSize = getResizedFontSize(data.style.defaultFontSize, rate, minFontSize);\n            }\n            BI.each(BI.get(data, 'items'), (_labelIndex: number, label: any) => {\n                if (label?.el?.style) {\n                    const oldLineHeight = label.el.style.lineHeight;\n                    label.el.style.lineHeight = getResizedLineHeight(label.el.style.defaultLineHeight, rate);\n                    label.el.style.fontSize = getResizedFontSize(label.el.style.defaultFontSize, rate, minFontSize);\n                    label.left *= label.el.style.lineHeight / oldLineHeight;\n                    label.right *= label.el.style.lineHeight / oldLineHeight;\n                }\n            });\n        });\n    });\n}\n\nfunction getResizedFontSize(oldFontSize: string, rate: number, minFontSize: number) {\n    const defaultFontSize = parseInt(oldFontSize, 10);\n    const newFontSize = defaultFontSize * rate;\n\n    return `${Math.max(newFontSize, minFontSize)}px`;\n}\n\nfunction getResizedLineHeight(defaultLineHeight: string, rate: number) {\n    return `${rate * parseInt(defaultLineHeight, 10)}`;\n}\n\n/**\n * 处理单元格尺寸\n * 如果格子尺寸相加仅仅比报表块大一点点(不大于2px)\n * 则调整一下尺寸以至于不要出现滚动条\n */\nexport function adjustSize(max: number, sizes:number[] = []) {\n    const totalSize = Math.round(sizes.reduce((total, item) => total + item));\n    const index = sizes.findIndex(item => !!item);\n    if (totalSize >= max) {\n        const MAX_SIZE_DIFFERENCE = 4;\n        if (totalSize - max > MAX_SIZE_DIFFERENCE) {\n            sizes[sizes.length - 1] = 2;\n            sizes[0] = 1;\n        } else {\n            sizes[index] = Math.floor(sizes[index] - (totalSize - max || 1));\n        }\n    }\n    \n    return sizes;\n}\n"]}