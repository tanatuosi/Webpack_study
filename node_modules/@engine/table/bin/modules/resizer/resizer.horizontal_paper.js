import { AbstractResizer } from './resizer.abstract';
import { removeColsAdjust, removeRowsAdjust, resize, resizeFont } from './resizer.service';
/**
 * 横向充满纸张
 * 字体缩放比例由外部注入，默认为最小横纵比
 */
export class HorizontalPaperResizer extends AbstractResizer {
    resize(data, opt) {
        var _a;
        const { tableWidth, tableHeight, paperWidth, fitAttr: { fitFont, minFontSize, fontScaleGetter } } = opt;
        this.widthResizeScale = tableWidth / paperWidth;
        this.heightResizeScale = this.widthResizeScale;
        data.sheet.cols = resize(tableWidth, removeColsAdjust(data.sheet.initialCols || []), this.widthResizeScale);
        data.sheet.rows = resize(tableHeight, removeRowsAdjust(data.sheet.initialRows || []), this.heightResizeScale);
        if (fitFont) {
            const fontScale = (_a = fontScaleGetter === null || fontScaleGetter === void 0 ? void 0 : fontScaleGetter()) !== null && _a !== void 0 ? _a : Math.min(this.widthResizeScale, this.heightResizeScale);
            resizeFont(fontScale, minFontSize, data.sheet.data);
            this.resizeSticker(fontScale, data.sheet);
        }
        return data;
    }
}
//# sourceMappingURL=resizer.horizontal_paper.js.map