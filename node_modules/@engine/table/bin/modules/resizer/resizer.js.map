{"version":3,"file":"resizer.js","sourceRoot":"","sources":["../../../src/modules/resizer/resizer.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAGxC,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACnE,OAAO,EAAE,sBAAsB,EAAE,MAAM,4BAA4B,CAAC;AACpE,OAAO,EAAE,sBAAsB,EAAE,MAAM,4BAA4B,CAAC;AACpE,OAAO,EAAE,2BAA2B,EAAE,MAAM,kCAAkC,CAAC;AAC/E,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAExD;;GAEG;AAEH,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAAhC;QAGY,gBAAW,GAAG,IAAI,GAAG,CACzB;YACI,CAAC,CAAC,EAAE,sBAAsB,CAAC;YAC3B,CAAC,CAAC,EAAE,sBAAsB,CAAC;YAC3B,CAAC,CAAC,EAAE,gBAAgB,CAAC;YACrB,CAAC,CAAC,EAAE,gBAAgB,CAAC;YACrB,CAAC,CAAC,EAAE,sBAAsB,CAAC;YAC3B,CAAC,CAAC,EAAE,gBAAgB,CAAC;YACrB,CAAC,CAAC,CAAC,EAAE,2BAA2B,CAAC;YACjC,CAAC,CAAC,CAAC,EAAE,qBAAqB,CAAC;YAC3B,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC;SACpB,CACJ,CAAA;IAyBL,CAAC;IAvBU,IAAI;QACP,MAAM,QAAQ,GAAG,IAAI,CAAC;QAEtB,OAAO;YACI,UAAU,CAAC,IAAY,EAAE,aAAiC;gBAC7D,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;YAClD,CAAC;YAED;;;eAGG;YACI,UAAU,CAAC,IAAY,EAAE,IAAsC;gBAClE,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC;YACrE,CAAC;SACJ,CAAC;IACN,CAAC;IAEM,UAAU,CAAC,IAAY,EAAE,KAA2B;QACvD,MAAM,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAE/C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;CACJ,CAAA;AAvCiB,gCAAK,GAAG,+BAA+B,CAAC;AADpD,0BAA0B;IAD/B,QAAQ,EAAE;GACL,0BAA0B,CAwC/B;AAED,MAAM,CAAC,MAAM,eAAe,GAAiE,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC","sourcesContent":["import { provider } from '@engine/core';\nimport { ReportFitAttr } from '../table.types';\nimport { IAbstractResizerConstructorArgs } from './resizer.abstract';\nimport { FullPaperResizer } from './resizer.full_paper';\nimport { FullTableResizer } from './resizer.full_table';\nimport { FullTableLimitResizer } from './resizer.full_table_limit';\nimport { HorizontalPaperResizer } from './resizer.horizontal_paper';\nimport { HorizontalTableResizer } from './resizer.horizontal_table';\nimport { HorizontalTableLimitResizer } from './resizer.horizontal_table_limit';\nimport { NoneResizer } from './resizer.none';\nimport { NoneTableResizer } from './resizer.none_table';\n\n/**\n * 对外使用的provider\n */\n@provider()\nclass ReportTableResizerProvider {\n    public static xtype = 'report.table_resizer.provider';\n\n    private resizeModes = new Map<number, typeof NoneResizer>(\n        [\n            [0, HorizontalPaperResizer],\n            [1, HorizontalPaperResizer],\n            [2, FullPaperResizer],\n            [3, NoneTableResizer],\n            [4, HorizontalTableResizer],\n            [5, FullTableResizer],\n            [-1, HorizontalTableLimitResizer],\n            [-2, FullTableLimitResizer],\n            [-3, NoneResizer],\n        ],\n    )\n\n    public $get() {\n        const provider = this;\n        \n        return class {\n            public setResizer(type: number, newResizeMode: typeof NoneResizer) {\n                provider.resizeModes.set(type, newResizeMode);\n            }\n        \n            /**\n             *\n             * @param type 1：宽度自适应，2：双向自适应，3：不自适应\n             */\n            public getResizer(type: number, opts?: IAbstractResizerConstructorArgs) {\n                return new (provider.resizeModes.get(type) || NoneResizer)(opts);\n            }\n        };\n    }\n\n    public addResizer(type: number, value: {[key: string]: any}) {\n        const Resizer = BI.inherit(NoneResizer, value);\n\n        this.resizeModes.set(type, Resizer);\n    }\n}\n\nexport const resizerProvider: InstanceType<ReturnType<ReportTableResizerProvider['$get']>> = BI.Providers.getProvider(ReportTableResizerProvider.xtype);\n\nexport interface ResizeOption {\n    tableWidth: number;\n    tableHeight: number;\n    paperWidth: number;\n    paperHeight: number;\n    fitAttr: ReportFitAttr;\n    hasFrozen?: boolean;\n}\n"]}