import { CellControllerManager } from '../table.cell_controller_manager';
import { AbstractCellHandler } from './handler.abstract';
export class CellInitializeWidgetHoverHandler extends AbstractCellHandler {
    constructor() {
        super(...arguments);
        this.eventNames = ['CELL_HOVER'];
        this.merger = 'uniqe';
        this.name = 'EVENT_INITIALIZE_WIDGET';
    }
    action({ id }) {
        const cellControllerManager = (this.externalContext.getStickerManagers().get(CellControllerManager.NAME));
        cellControllerManager === null || cellControllerManager === void 0 ? void 0 : cellControllerManager.initializeWidget(id);
        cellControllerManager === null || cellControllerManager === void 0 ? void 0 : cellControllerManager.mountWidget(id);
    }
}
//# sourceMappingURL=handler.initialize_widget.js.map