import { tableCellValueTransformerProvider } from '../cell/transformer/transformer';
import { AbstractCellHandler } from './handler.abstract';
export class CellSetValueHandler extends AbstractCellHandler {
    constructor() {
        super(...arguments);
        this.eventNames = ['CELL_SET_VALUE'];
        this.name = 'CELL_SET_VALUE';
        this.merger = 'uniqe';
    }
    async action({ value, x, y }) {
        const pageResults = this.externalContext.getTableData();
        const pageCellData = pageResults[y][x];
        if (!pageCellData) {
            return false;
        }
        const isUpdated = await tableCellValueTransformerProvider.setValue(pageCellData, {
            cv: value !== null && value !== void 0 ? value : '',
        }, this.externalContext);
        isUpdated && this.externalContext.populate(this.tableData);
        return true;
    }
}
//# sourceMappingURL=handler.set_cell_value.js.map