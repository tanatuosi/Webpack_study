import { CellControllerManager } from '../table.cell_controller_manager';
import { AbstractCellHandler } from './handler.abstract';
export class WidgetActiveHandler extends AbstractCellHandler {
    constructor() {
        super(...arguments);
        this.eventNames = ['CELL_DOUBLE_CLICK'];
        this.name = 'CELL_ACTIVE_WIDGET';
        this.merger = 'covered';
    }
    async action({ id }) {
        const cellControllerManager = (this.externalContext.getStickerManagers().get(CellControllerManager.NAME));
        if (!cellControllerManager) {
            return;
        }
        cellControllerManager.getWidgetsMap()
            .forEach((controller, name) => {
            name === id && controller.active();
        });
    }
}
//# sourceMappingURL=handler.active_controller.js.map