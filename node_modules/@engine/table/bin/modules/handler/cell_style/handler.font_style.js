import { AbstractCellStyleHandler } from './handler.abstract.cell_style';
export class FontStyleHandler extends AbstractCellStyleHandler {
    constructor(externalInterface, opt) {
        super(externalInterface, opt);
        this.name = 'CHANGE_CELL_FONT_STYLE';
        const { style } = opt;
        this.cellStyle = {
            fontStyle: Object.assign({
                fontFamily: '',
                underLine: {
                    width: 0,
                    color: -16777216,
                    style: 'SOLID',
                },
            }, style),
        };
    }
    transform2DeaultStyle(cellStyle) {
        return BI.deepClone({
            fontStyle: cellStyle === null || cellStyle === void 0 ? void 0 : cellStyle.fontStyle,
        });
    }
}
//# sourceMappingURL=handler.font_style.js.map