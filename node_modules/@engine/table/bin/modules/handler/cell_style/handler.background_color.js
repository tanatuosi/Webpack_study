import { AbstractCellStyleHandler } from './handler.abstract.cell_style';
export class BackgroundColorHandler extends AbstractCellStyleHandler {
    constructor(externalInterface, opt) {
        super(externalInterface, opt);
        this.name = 'CHANGE_CELL_BACKGROUND';
        const { style } = opt;
        this.cellStyle = {
            cellBackground: {
                background: {
                    backgroundType: 'ColorBackground',
                    color: `${style}`,
                },
            },
        };
    }
    transform2DeaultStyle(cellStyle) {
        var _a;
        return BI.deepClone({
            cellBackground: {
                background: ((_a = cellStyle === null || cellStyle === void 0 ? void 0 : cellStyle.cellBackground) === null || _a === void 0 ? void 0 : _a.background) || {},
            },
        });
    }
}
//# sourceMappingURL=handler.background_color.js.map