{"version":3,"file":"handler.abstract.cell_style.js","sourceRoot":"","sources":["../../../../src/modules/handler/cell_style/handler.abstract.cell_style.ts"],"names":[],"mappings":"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","sourcesContent":["import { PageResult, XCellPosition, XCellStyle } from '../../table.types';\nimport { HandlerExternalContext } from '../handler';\nimport { AbstractCellHandler } from '../handler.abstract';\nimport { alterRawTable, decodeCacheKey, encodeCacheKey, findValidCellData } from '../handler.service';\n\n/**\n * 针对处理单元格的样式的handler基类\n */\nexport abstract class AbstractCellStyleHandler extends AbstractCellHandler {\n    public eventNames = ['CELL_CLICK', 'CELL_HOVER'];\n\n    public merger = 'uniqe';\n\n    protected filter: (cell: PageResult, position: XCellPosition) => boolean;\n    protected canCellReset: (position: XCellPosition, eventPosition: XCellPosition) => boolean;\n    protected clickCache = new Map<string, Partial<XCellStyle> | undefined>();\n    protected hoverCache = new Map<string, Partial<XCellStyle> | undefined>();\n    protected cellStyle?: Partial<XCellStyle>;\n    protected trigger: TriggerType;\n    protected eventTrigger: 'mousedown' | 'mouseover';\n    protected eventPosition: { x: number, y: number};\n\n    private filterOperationMap = {\n        line: (cell: PageResult, position: XCellPosition) => cell.position.y === position.y,\n        column: (cell: PageResult, position: XCellPosition) => cell.position.x === position.x,\n        cross: (cell: PageResult, position: XCellPosition) => cell.position.x === position.x || cell.position.y === position.y,\n        cell: (cell: PageResult, position: XCellPosition) => cell.position.x === position.x && cell.position.y === position.y,\n    };\n\n    private canCellResetMap = {\n        row: (position: XCellPosition, eventPosition: XCellPosition) => position.y === eventPosition.y,\n        column: (position: XCellPosition, eventPosition: XCellPosition) => position.x === eventPosition.x,\n        all: (position: XCellPosition, eventPosition: XCellPosition) => position.y === eventPosition.y && position.x === eventPosition.x,\n        cross: (position: XCellPosition, eventPosition: XCellPosition) => position.y === eventPosition.y || position.x === eventPosition.x,\n        'default': () => true,\n    }\n\n    public constructor(externalInterface: HandlerExternalContext, opt: HandlerConfig) {\n        super(externalInterface);\n        const { type, hold = 'default', trigger } = opt;\n        this.filter = BI.isFunction(type) ? type : this.filterOperationMap[type];\n        this.canCellReset = BI.isFunction(hold) ? hold : this.canCellResetMap[hold];\n        this.trigger = trigger;\n    }\n\n    /**\n     * 改变表格的值\n     */\n    protected alterTableCellStyle(cells: { x: number; y: number; style?: Partial<XCellStyle> | undefined }[]) {\n        alterRawTable(this.tableData, cells.map(({ x, y, style: alterer }) => {\n            return { x, y, alterer };\n        }), (raw, style) => {\n            raw.cellstyle = <XCellStyle>BI.extend(raw.cellstyle || {}, style);\n        });\n    }\n\n    public action({ e, cell }: Parameters<AbstractCellHandler['action']>[0]) {\n        const trigger = e?.type === 'mouseup' ? 'mousedown' : 'mouseover';\n\n        this.eventTrigger = trigger;\n        if (!cell) {\n            if (this.eventTrigger === this.trigger) {\n                this.resetTableCell();\n                this.updateTable();\n            }\n            \n            return;\n        }\n        const { x, y } = cell.position;\n        const cellIsClicked = trigger === 'mousedown' && this.clickCache.has(encodeCacheKey(x, y));\n        const cellIsHovered = trigger === 'mouseover' && this.hoverCache.has(encodeCacheKey(x, y));\n        this.eventPosition = { x, y };\n\n        this.resetTableCell();\n\n        if (trigger === this.trigger || this.trigger === undefined) {\n            // 如果点击的单元格已经改变，则恢复初始状态\n            cellIsClicked || cellIsHovered ? this.updateTable() : this.doAction(x, y);\n        }\n    }\n\n    protected doAction(x: number, y: number) {\n        findValidCellData(this.tableData, { x, y }, this.filter)\n            .forEach(cell => {\n                this.alterCell(cell.position.x, cell.position.y);\n            });\n        \n        this.updateTable();\n    }\n\n    private updateTable() {\n        this.externalContext.populate(this.tableData);\n    }\n\n    /**\n     * 根据样式计算需要保存的属性\n     * @param cellStyle 样式\n     */\n    protected abstract transform2DeaultStyle(cellStyle?: XCellStyle): Partial<XCellStyle>;\n\n    /**\n     * 改变单个单元格的样式\n     * @param x x坐标\n     * @param y y坐标\n     */\n    protected alterCell(x: number, y: number) {\n        alterRawTable(this.tableData, [{ x, y, alterer: this.cellStyle }], (raw, style) => {\n            raw.value = raw.value || `{\"type\":\"text\",\"value\":\"\",\"autoWrapInfo\":\"[]\"}`;\n\n            if (this.eventTrigger === 'mousedown') {\n                const key = encodeCacheKey(x, y);\n                this.clickCache.set(key,\n                    this.hoverCache.has(key)\n                        ? this.hoverCache.get(key)\n                        : this.transform2DeaultStyle(raw.cellstyle),\n                );\n            } else if (this.eventTrigger === 'mouseover') {\n                this.hoverCache.set(encodeCacheKey(x, y), this.transform2DeaultStyle(raw.cellstyle));\n            }\n\n            BI.deepExtend(raw, {\n                cellstyle: style,\n            });\n        });\n    }\n\n\n    private resetTableCell() {\n        const cells: { x: number; y: number; style?: Partial<XCellStyle> }[] = [];\n\n        this.resetHoverCell(cells);\n        this.resetClickCell(cells);\n        \n        this.alterTableCellStyle(cells);\n    }\n\n    private resetHoverCell(cells: { x: number; y: number; style?: Partial<XCellStyle> }[]) {\n        if (this.eventTrigger === 'mousedown') {\n            return;\n        }\n        this.hoverCache.forEach((value, key) => {\n            const { x, y } = decodeCacheKey(key);\n            if (this.canCellReset({ x, y }, this.eventPosition)) {\n                // 还原所有未被点击到的cell样式\n                !this.clickCache.has(key) && cells.push({\n                    x,\n                    y,\n                    style: value,\n                });\n\n                this.hoverCache.delete(key);\n            }\n        });\n    }\n\n    private resetClickCell(cells: { x: number; y: number; style?: Partial<XCellStyle> }[]) {\n        if (this.eventTrigger === 'mouseover') {\n            return;\n        }\n        this.clickCache.forEach((value, key) => {\n            const { x, y } = decodeCacheKey(key);\n            // 判断当前cell是否可以还原到初始样式\n            if (this.canCellReset({ x, y }, this.eventPosition)) {\n                this.hoverCache.has(key) && this.hoverCache.delete(key);\n                cells.push({\n                    x,\n                    y,\n                    style: value,\n                });\n                this.clickCache.delete(key);\n            }\n        });\n    }\n}\n\nexport type TriggerType = 'mousedown'| 'mouseover' | undefined;\n\nexport interface HandlerConfig {\n    style: XCellStyle['fontStyle'] | string;\n    type: 'cell' | 'line' | 'column' | 'cross' | ((cell: PageResult, position: XCellPosition) => boolean);\n    hold?: 'row' | 'column' | 'all' | 'default' | 'cross' | ((position: XCellPosition, eventPosition: XCellPosition) => boolean);\n    trigger: TriggerType;\n}\n"]}