{"version":3,"file":"handler.js","sourceRoot":"","sources":["../../../src/modules/handler/handler.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,yBAAyB,EAAE,MAAM,sBAAsB,CAAC;AACjE,OAAO,EAAE,mBAAmB,EAAE,MAAM,6BAA6B,CAAC;AAClE,OAAO,EAAE,qBAAqB,EAAE,MAAM,+BAA+B,CAAC;AACtE,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAChE,OAAO,EAAE,gCAAgC,EAAE,MAAM,6BAA6B,CAAC;AAC/E,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AACjE,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EAAE,0BAA0B,EAAE,MAAM,4BAA4B,CAAC;AAMxE,MAAM,yBAAyB;IAA/B;QACY,cAAS,GAAkB;YAC/B,yBAAyB;YACzB,qBAAqB;YACrB,mBAAmB;YACnB,mBAAmB;YACnB,iBAAiB;YACjB,gCAAgC;YAChC,mBAAmB;YACnB,oBAAoB;YACpB,kBAAkB;YAClB,0BAA0B;SAC7B,CAAC;IASN,CAAC;IAPU,GAAG,CAAC,QAAqB;QAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEM,GAAG;QACN,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;CACJ;AAED,MAAM,CAAC,MAAM,yBAAyB,GAAG,IAAI,yBAAyB,EAAE,CAAC","sourcesContent":["import { AbstractCellHandler } from './handler.abstract';\nimport { HyperLinkCellClickHandler } from './handler.hyper_link';\nimport { WidgetActiveHandler } from './handler.active_controller';\nimport { WidgetInactiveHandler } from './handler.inactive_controller';\nimport { CellSetValueHandler } from './handler.set_cell_value';\nimport { TableExternalContext } from '../table.cell_generator';\nimport { CellSelectHandler } from './handler.select_controller';\nimport { CellInitializeWidgetHoverHandler } from './handler.initialize_widget';\nimport { CellSetStyleHandler } from './handler.set_cell_style';\nimport { CellSetRadiusHandler } from './handler.set_cell_radius';\nimport { CellSetSizeHandler } from './handler.set_cell_size';\nimport { TableChartCellFetchHandler } from './handler.fetch_chart_data';\n\nexport interface CellHandler extends Function {\n    new (externalInterface: HandlerExternalContext, ...external: any[]): AbstractCellHandler\n}\n\nclass TableClickHandlerProvider {\n    private listeners: CellHandler[] = [\n        HyperLinkCellClickHandler,\n        WidgetInactiveHandler,\n        WidgetActiveHandler,\n        CellSetValueHandler,\n        CellSelectHandler,\n        CellInitializeWidgetHoverHandler,\n        CellSetStyleHandler,\n        CellSetRadiusHandler,\n        CellSetSizeHandler,\n        TableChartCellFetchHandler,\n    ];\n\n    public add(listener: CellHandler) {\n        this.listeners.push(listener);\n    }\n\n    public get() {\n        return this.listeners;\n    }\n}\n\nexport const tableClickHandlerProvider = new TableClickHandlerProvider();\n\n/**\n * FRTable提供的接口方法\n */\nexport type HandlerExternalContext = Pick<TableExternalContext, 'attach' | 'getTableData' | 'populate' | 'getStickerManagers' | 'getWidgetByCell' | 'setSelectCell' | 'partialPopulate'>;\n"]}