{"version":3,"file":"table.model.js","sourceRoot":"","sources":["../../src/modules/table.model.ts"],"names":[],"mappings":"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","sourcesContent":["import { model, Model } from '@engine/core';\nimport { recordConsumption } from '@engine/crud';\nimport { Range, SheetOptions } from '@fui/sheet/types';\nimport { AbstractTableCell } from './cell/cell.abstract';\nimport { CellHandler } from './handler/handler';\nimport { resizerProvider } from './resizer/resizer';\nimport { TableCellGenerator } from './table.cell_generator';\nimport { adjustCols, adjustRows, createEmptyCell, fixFreezeMerge, fixRealCellPositionInMergeCell, getCell, getCellSize, getFreeze, getMerge, getSticker } from './table.service';\nimport { CellType, Frozen, PageResult, processTableDataArgs, ReportFitAttr, ReportSettingDetail, TableStickerOpt, XCellDimension, XCellPosition } from './table.types';\nconst ROW_CHUNKED_CELLS_COUNT = 20 * 78;\n\n@model()\nexport class TableModel extends Model {\n    public static xtype = 'report.model.components.tool_bar.table';\n    private data: SheetOptions & { sx: number; sy: number };\n    private rowChunkLoadData: this['actions']['rowChunkLoadData'];\n    private setTableLoading: (loading: boolean) => void;\n\n\n    private options: {\n        reportSettingDetail: ReportSettingDetail;\n        reportFitAttr: ReportFitAttr;\n        tableCellGenerator: TableCellGenerator;\n        tableData?: PageResult[][];\n        loadData: (data: SheetOptions) => void;\n        frozen?: Frozen;\n        viewAtCenter: boolean;\n        activeBox: boolean;\n        tableWidth: number;\n        tableHeight: number;\n        screenWidth: number;\n        webBackground: {[key: string]: any}\n    };\n\n    public state() {\n        return {\n            cellstyle: {},\n            loading: false,\n            reportSettingDetail: this.options.reportSettingDetail,\n            reportFitAttr: this.options.reportFitAttr,\n            activeBox: this.options.activeBox,\n            frozen: this.options.frozen,\n            viewAtCenter: this.options.viewAtCenter,\n            selectedCell: <{row: number; col: number} | undefined>undefined,\n            tableWidth: this.options.tableWidth,\n            tableHeight: this.options.tableHeight,\n            screenWidth: this.options.screenWidth,\n            webBackground: this.options.webBackground,\n        };\n    }\n\n    public computed = {\n        paperSetting:() => this.model.reportSettingDetail.paperSetting || {\n            orientation: 0,\n            paperWidth: 0,\n            paperHeight: 0,\n            marginLeft: 0,\n            marginRight: 0,\n            marginTop: 0,\n            marginBottom: 0,\n        },\n        paperBackground:() => this.model.reportSettingDetail.background || {},\n        footerHeight:() => this.model.reportSettingDetail.footerHeight || 0,\n        headerHeight:() => this.model.reportSettingDetail.headerHeight || 0,\n        // 页眉页脚背景待定\n        headerBackground:() => '',\n        footerBackground:() => '',\n        paperWidth:() => this.model.paperSetting.orientation === 0\n            ? this.model.paperSetting.paperWidth\n            : this.model.paperSetting.paperHeight,\n        paperHeight:() => this.model.paperSetting.orientation === 0\n            ? this.model.paperSetting.paperHeight\n            : this.model.paperSetting.paperWidth,\n        resizeModel: () => resizerProvider.getResizer(this.model.reportFitAttr.fitStateInPC, { minFontSize: this.model.reportFitAttr.minFontSize }),\n        isAdaptiveTable: () => this.model.reportFitAttr && this.model.resizeModel.isAdaptive,\n        hasFrozen: () => this.model.frozen && (this.model.frozen.colTo > -1 || this.model.frozen.rowTo) > -1,\n    };\n\n    public actions = {\n        setTableLoading: (v: boolean) => {\n            this.model.loading = v;\n\n            v === false && recordConsumption();\n        },\n        setReportSetting: (v: ReportSettingDetail) => {\n            this.model.reportSettingDetail = v;\n        },\n        setReportFitAttr: (v: ReportFitAttr) => {\n            this.model.reportFitAttr = v;\n        },\n        setViewAtCenter: (v: boolean) => {\n            this.model.viewAtCenter = v;\n        },\n        setTableWidth: (width: number) => {\n            this.model.tableWidth = width;\n        },\n        setTableHeight: (height: number) => {\n            this.model.tableHeight = height;\n        },\n        setScreenWidth: (width: number) => {\n            this.model.screenWidth = width;\n        },\n        setWebBackground: (webBackground: {[key: string]: any}) => {\n            this.model.webBackground = webBackground;\n        },\n        prePopulate: (size: {\n            screenWidth: number;\n            tableWidth: number;\n            tableHeight: number;\n        }, $data?: PageResult[][]): false | processTableDataArgs => {\n            // finesheet会清空数组\n            this.options.tableData = this.transformTableData($data || []);\n            const data = $data ? $data.slice() : $data;\n\n            // 初始化时不需要去掉loading，所以加这个判断\n            if (!data) {\n                return false;\n            }\n\n            if (!data.length) {\n                this.setTableLoading(false);\n\n                return false;\n            }\n            if (this.model.hasFrozen) {\n                fixFreezeMerge(data, this.model.frozen);\n            }\n            const start = BI.get(data, '[0][0].position') || {};\n            let sy: number = start.y || 0,\n                sx: number = start.x || 0;\n\n            let rowCount = data.length;\n            let columnCount = data.reduce(\n                (max, row): number =>\n                    Math.max(\n                        max,\n                        row[row.length - 1] ? row[row.length - 1].position.x + 1 : 0,\n                    ),\n                0,\n            ) - sx;\n        \n            // fixData 之后会增加5行3列\n            this.fixData(data, sx, sy, columnCount, rowCount);\n            rowCount += 5;\n            columnCount += 3;\n            sy -= 2;\n            sx -= 1;\n\n            const sheetData: CellType[][] = [],\n                rows: number[] = BI.makeArray(rowCount, 0),\n                cols: number[] = [],\n                stickers: TableStickerOpt[] = [],\n                merges: Range[] = [];\n\n            return {\n                sheetData,\n                rows,\n                cols,\n                stickers,\n                merges,\n                rowCount,\n                columnCount,\n                sx,\n                sy,\n                tableData: data,\n                ...size,\n            };\n        },\n        getTableData:() => this.options.tableData || [],\n\n        /**\n         * 完整加载表格数据\n         * @param opts 传入参数\n         */\n        completeLoadData: (opts: processTableDataArgs) => {\n            const { sheetData, cols, rows, tableData, stickers, merges, sx, sy, rowCount, columnCount, screenWidth, tableWidth, tableHeight } = opts;\n\n            tableData.forEach(rowData => {\n                this.transformTableRowData2SheetRowData({\n                    data: rowData,\n                    rows,\n                    cols,\n                    stickers,\n                    merges,\n                    sx,\n                    sy,\n                    sheetData,\n                });\n            });\n\n            this.adjustAndLoadData({\n                sheetData,\n                cols,\n                columnCount,\n                rows,\n                rowCount,\n                stickers,\n                merges,\n                screenWidth,\n                tableWidth,\n                tableHeight,\n                sx,\n                sy,\n            });\n        },\n\n        /**\n         * 行分块加载数据\n         * @param opts 传入参数\n         */\n        rowChunkLoadData: (opts: processTableDataArgs) => {\n            const { sheetData, cols, rows, tableData, stickers, merges, sx, sy, rowCount, columnCount, screenWidth, tableWidth, tableHeight } = opts;\n\n            const chunkedRowCount = Math.floor(ROW_CHUNKED_CELLS_COUNT / columnCount);\n\n            const chunkedData = tableData.splice(0, chunkedRowCount);\n\n            chunkedData.forEach(rowData => {\n                this.transformTableRowData2SheetRowData({\n                    data: rowData,\n                    rows,\n                    cols,\n                    stickers,\n                    merges,\n                    sx,\n                    sy,\n                    sheetData,\n                });\n            });\n\n            const hasNext = BI.size(tableData) > 0;\n\n            this.adjustAndLoadData({\n                sheetData,\n                cols,\n                columnCount,\n                rows,\n                rowCount,\n                stickers: hasNext ? [] : stickers,\n                merges,\n                screenWidth,\n                tableWidth,\n                tableHeight,\n                sx,\n                sy,\n            });\n\n            if (hasNext) {\n                setTimeout(() => {\n                    this.rowChunkLoadData({ sheetData, cols, rows, tableData, stickers, merges, sx, sy, rowCount, columnCount, screenWidth, tableWidth, tableHeight });\n                }, 0);\n            }\n        },\n        resize:(width: number, height: number, element: any, screenWidth: number) => {\n            if (BI.isNull(this.data)) return;\n\n            let refresh = this.adaptTable(width, height);\n\n            if (this.model.viewAtCenter && this.data.sheet.cols && !refresh) {\n                // 这里的margin被adjustRowsAndCols居中改掉了，totalWidth就会跟resize之前的屏幕宽度一样大，所以算totalWidth时要算居中前的margin\n                const totalWidth = this.data.sheet.cols.reduce((sum, col) => sum + col, this.model.paperSetting.marginLeft + this.model.paperSetting.marginRight - this.data.sheet.cols[0] - this.data.sheet.cols[this.data.sheet.cols.length - 1]);\n                const restWidth = screenWidth - totalWidth + this.model.paperSetting.marginLeft + this.model.paperSetting.marginRight;\n                \n                if (screenWidth < totalWidth || restWidth / 2 < this.model.paperSetting.marginLeft || restWidth / 2 < this.model.paperSetting.marginRight) {\n                    this.data.sheet.cols[0] = this.model.paperSetting.marginLeft;\n                    this.data.sheet.cols[this.data.sheet.cols.length - 1] = this.model.paperSetting.marginRight;\n                } else {\n                    this.data.sheet.cols[0] = restWidth / 2;\n                    this.data.sheet.cols[this.data.sheet.cols.length - 1] = restWidth / 2;\n                }\n\n                refresh = true;\n            }\n\n            if (refresh) {\n                this.options.loadData(this.data);\n\n                this.model.resizeModel.resizeFontByFontScaleAttr(element);\n            }\n        },\n        addHandler:(handler: CellHandler, config?: any) => {\n            this.options.tableCellGenerator.addHandler(handler, config);\n        },\n        setFrozen: (frozen?: Frozen) => {\n            this.model.frozen = frozen;\n        },\n        setActiveBox: (activeBox: boolean) => {\n            this.model.activeBox = activeBox;\n        },\n        setSelectedCell: (v: {row: number; col: number} | undefined) => {\n            this.model.selectedCell = v;\n        },\n        refreshCellValues: (cells: PageResult[]) => {\n            cells.forEach(cell => {\n                const result = this.transformTableCellData2SheetCellArgs({\n                    cellData: cell,\n                    sheetData: this.data.sheet.data || [],\n                    sx: this.data.sx,\n                    sy: this.data.sy,\n                });\n\n                if (!result) return;\n\n                if (!result.cell) return;\n\n                result.cell.getCellStickers()\n                    .forEach(cellSticker => {\n                        if (!cellSticker) return;\n\n                        const sticker = getSticker(result.x, result.y, cellSticker, cell);\n\n                        if (!this.data.sheet.stickers) return;\n\n                        const index = this.data.sheet.stickers.findIndex(sheetSticker => sheetSticker.id === sticker.id);\n\n                        if (index === -1) return;\n\n                        this.data.sheet.stickers.splice(index, 1, sticker);\n                    });\n            });\n\n            this.options.loadData(this.data);\n        },\n    };\n\n    private setData (data: TableModel['data']) {\n        this.data = data;\n    }\n\n    private adaptTable (width: number, height: number) {\n        if (this.model.reportFitAttr && width && height) {\n            this.model.resizeModel.resize(this.data, {\n                tableWidth: Math.round(width),\n                tableHeight: Math.round(height),\n                fitAttr: this.model.reportFitAttr,\n                hasFrozen: this.model.hasFrozen,\n                paperWidth: this.model.paperSetting.paperWidth,\n                paperHeight: this.model.paperSetting.paperHeight,\n            });\n            \n            return this.model.resizeModel.isAdaptive;\n        }\n        \n        return false;\n    }\n\n    private adjustAndLoadData(opts: {\n        sheetData: CellType[][];\n        rows: number[];\n        cols: number[];\n        stickers: TableStickerOpt[];\n        merges: Range[];\n        rowCount: number;\n        columnCount: number;\n        screenWidth: number;\n        tableWidth: number;\n        tableHeight: number;\n        sx: number;\n        sy: number;\n    }) {\n        const { sheetData, rows, rowCount, cols, columnCount, merges, stickers, tableHeight, tableWidth, screenWidth, sx, sy } = opts;\n\n        const { tableRows, tableCols } = this.adjustRowsAndCols(rows, cols, screenWidth);\n\n        const data = {\n            sheet: {\n                rowc: rowCount,\n                colc: columnCount,\n                data: sheetData,\n                rows: tableRows,\n                cols: tableCols,\n                initialRows: [...tableRows],\n                initialCols: [...tableCols],\n                merges,\n                freeze: getFreeze(this.model.frozen),\n                stickers,\n            },\n            topSequnce: {\n                enable: false,\n                size: 0,\n            },\n            leftSequnce: {\n                enable: false,\n                size: 0,\n            },\n            activeBox: this.model.activeBox,\n            sx,\n            sy,\n        };\n        this.setData(data);\n        this.adaptTable(tableWidth, tableHeight);\n        this.options.loadData(data);\n        this.setTableLoading(false);\n    }\n\n    /**\n     * 单元格填补空白\n     */\n    private adjustRowsAndCols (rows: number[], cols: number[], screenWidth: number) {\n        // 单元格填补空白\n        const tableRows = adjustRows(rows, this.model.paperHeight, this.model.hasFrozen);\n        const tableCols = adjustCols(cols, this.model.paperWidth, this.model.hasFrozen);\n        const totalWidth = tableCols.reduce((sum, col) => sum + col, 0);\n        const restWidth = screenWidth - totalWidth + tableCols[0] + tableCols[tableCols.length - 1];\n\n        // 居中时两边margin部分的处理\n        if (this.model.viewAtCenter) {\n            if (screenWidth < totalWidth || restWidth / 2 < this.model.paperSetting.marginLeft || restWidth / 2 < this.model.paperSetting.marginRight) {\n                tableCols[0] = this.model.paperSetting.marginLeft;\n                tableCols[tableCols.length - 1] = this.model.paperSetting.marginRight;\n            } else {\n                tableCols[0] = restWidth / 2;\n                tableCols[tableCols.length - 1] = restWidth / 2;\n            }\n        }\n\n        return { tableRows, tableCols };\n    }\n\n    /**\n     * 转换行为表格所需的行数据，直接修改引用\n     */\n    private transformTableRowData2SheetRowData (opts: {\n        data: PageResult[],\n        rows: number[],\n        cols: number[],\n        stickers: TableStickerOpt[],\n        merges: Range[];\n        sx: number;\n        sy: number;\n        sheetData: CellType[][];\n    }) {\n        const { data, ...args } = opts;\n    \n        for (let j = 0; j < data.length; j++) {\n            if (data[j]) {\n                this.transformTableCellData2SheetCellData({\n                    ...args,\n                    cellData: data[j],\n                });\n            }\n        }\n    }\n\n    /**\n     * 转换行为表格所需的单元格数据，直接修改引用\n     */\n    private transformTableCellData2SheetCellData (opts: {\n        cellData: PageResult,\n        rows: number[],\n        cols: number[],\n        stickers: TableStickerOpt[],\n        merges: Range[];\n        sx: number;\n        sy: number;\n        sheetData: CellType[][];\n\n        /**\n         * 仅更新数据，不创建sticker以及merger\n         */\n        simple?: boolean;\n    }) {\n        const { rows, cols, stickers, merges, sx, sy, sheetData, cellData, simple } = opts;\n\n        const cellArgs = this.transformTableCellData2SheetCellArgs({\n            cellData,\n            sx,\n            sy,\n            sheetData,\n        });\n\n        if (!cellArgs) return;\n\n        const { x, y, celldimension, cell, position } = cellArgs;\n\n        const { col, row } = getCellSize(celldimension, cols[x], rows[y]);\n        cols[x] = col;\n        rows[y] = row;\n\n        if (!cell || simple) return;\n\n        cell.getCellStickers().forEach(cellSticker => {\n            cellSticker && stickers.push(getSticker(x, y, cellSticker, cellData));\n        });\n\n        const { columnSpan = 1, rowSpan = 1 } = position;\n\n        if (columnSpan > 1 || rowSpan > 1) {\n            merges.push(getMerge(x, y, columnSpan, rowSpan));\n        }\n    }\n\n    /**\n     * 转换行为表格所需的单元格信息\n     */\n    private transformTableCellData2SheetCellArgs(opts: {\n        cellData: PageResult,\n        sx: number;\n        sy: number;\n        sheetData: CellType[][];\n    }): {\n            cell?: AbstractTableCell;\n            x: number;\n            y: number;\n            celldimension: XCellDimension;\n            position: XCellPosition;\n        } | undefined {\n        const { sx, sy, sheetData, cellData } = opts;\n    \n        if (cellData) {\n            const {\n                value,\n                celldimension,\n                position,\n            } = cellData;\n            let { x, y } = position;\n            x -= sx;\n            y -= sy;\n            if (value) {\n                sheetData[y] = sheetData[y] || [];\n\n                const cell = getCell(cellData, this.options.tableCellGenerator);\n                sheetData[y][x] = cell.toCell();\n\n                return {\n                    cell,\n                    x,\n                    y,\n                    celldimension,\n                    position,\n                };\n            }\n\n            return {\n                x,\n                y,\n                celldimension,\n                position,\n            };\n        }\n\n        return undefined;\n    }\n\n    /**\n     * 把页面的布局信息转换成单元格\n     */\n    private fixData (data: PageResult[][], sx: number, sy: number, colc: number, rowc: number) {\n        const {\n            marginLeft,\n            marginTop,\n            marginRight,\n            marginBottom,\n        } = this.model.paperSetting;\n    \n        // pagesize补全\n        data.push([createEmptyCell(sx + colc, sy + rowc, 0, 0, 1, 1)]);\n    \n        // header footer\n        data.unshift([\n            createEmptyCell(sx, sy - 1, 0, this.model.headerHeight, 1, colc + 1),\n        ]);\n        data.push([\n            createEmptyCell(\n                sx,\n                sy + rowc + 1,\n                0,\n                this.model.footerHeight,\n                1,\n                colc + 1,\n            ),\n        ]);\n    \n        // margin\n        data.unshift([\n            createEmptyCell(sx - 1, sy - 2, marginLeft, marginTop, 1, colc + 3),\n            createEmptyCell(sx + 1 + colc, sy - 2, marginRight, marginTop, 1, 1),\n        ]);\n        data.push([\n            createEmptyCell(\n                sx - 1,\n                sy + rowc + 2,\n                marginLeft,\n                marginBottom,\n                1,\n                colc + 3,\n            ),\n        ]);\n\n        return data;\n    }\n\n    /**\n     * 转化下tableData，填充合并真实单元格信息\n     * @param data 表格数据\n     * @returns 转化后的表格数据\n     */\n    private transformTableData(tableData: PageResult[][]) {\n        tableData.forEach((rowData, rowIndex) => {\n            rowData.forEach((cell, colIndex) => {\n                if (!BI.isNull(cell.merge)) {\n                    return;\n                }\n                const { position: { rowSpan, columnSpan } } = cell;\n                if (rowSpan && rowSpan > 1\n                    || columnSpan && columnSpan > 1) {\n                    fixRealCellPositionInMergeCell(tableData, {\n                        rowSpan,\n                        columnSpan,\n                        x: colIndex,\n                        y: rowIndex,\n                    });\n                }\n            });\n        });\n\n        return tableData;\n    }\n}\n"]}