{"version":3,"file":"cell.text.js","sourceRoot":"","sources":["../../../src/modules/cell/cell.text.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,iBAAiB,EAAY,MAAM,iBAAiB,CAAC;AAE9D,MAAM,OAAO,aAAc,SAAQ,iBAAiB;IAShD,YAAmB,IAAwB,EAAE,QAA8B;;QACvE,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEtB,IAAI,CAAC,UAAU,GAAG,CAAA,MAAA,IAAI,CAAC,gBAAgB,0CAAE,eAAe,MAAK,cAAc,CAAC;QAE5E,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;QAEtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEpD,4BAA4B;QAC5B,oCAAoC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,KAAI,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,eAAe,0CAAE,eAAe,CAAA,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;QAE9F,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;IACzE,CAAC;IAES,UAAU;QAChB,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QAEvD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE/B,MAAM,EACF,YAAY,EACZ,WAAW,EACX,eAAe,EACf,WAAW,EACX,YAAY,EACZ,aAAa,EACb,YAAY,GACf,GAAG,KAAK,CAAC;QAEV,OAAO;YACH,IAAI,EAAE,EAAE,CAAC,cAAc,CAAC,KAAK;YAC7B,KAAK,EAAE;gBACH;oBACI,EAAE,EAAE;wBACA,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK;wBACpB,KAAK,EAAE,YAAY;wBACnB,SAAS,EAAE;4BACP;gCACI,SAAS,EAAE,YAAY;gCACvB,MAAM,EAAE,CAAC,CAAQ,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;oCACnD,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;oCAE1F,OAAO,IAAI,CAAC;gCAChB,CAAC;6BACJ;yBACJ;wBACD,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ;wBACrC,YAAY,EAAE,IAAI,CAAC,YAAY;wBAC/B,cAAc,EAAE;4BACZ,YAAY,EAAE,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,YAAY;4BAC5C,QAAQ,EAAE,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,QAAQ;4BACpC,aAAa,EAAE,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,aAAa;4BAC9C,aAAa,EAAE,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,aAAa;yBACjD;qBACJ;oBACD,IAAI,EAAE,WAAW;oBACjB,KAAK,EAAE,YAAY;oBACnB,GAAG,EAAE,aAAa;oBAClB,MAAM,EAAE,YAAY;iBACvB;aACJ;YACD,eAAe;YACf,WAAW;YACX,KAAK,EAAE,QAAQ;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE;gBACP;oBACI,SAAS,EAAE,YAAY;oBACvB,MAAM,EAAE,CAAC,CAAQ,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;wBACnD,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;oBACjE,CAAC;iBACJ;gBACD;oBACI,SAAS,EAAE,mBAAmB;oBAC9B,MAAM,EAAE,CAAC,CAAQ,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;wBACnD,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;wBAEjG,OAAO,IAAI,CAAC;oBAChB,CAAC;iBACJ;gBACD;oBACI,SAAS,EAAE,kBAAkB;oBAC7B,MAAM,EAAE,CAAC,CAAQ,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;wBACnD,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC1D,CAAC;iBACJ;gBACD;oBACI,SAAS,EAAE,iBAAiB;oBAC5B,MAAM,EAAE,CAAC,CAAQ,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;wBACnD,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;oBACzD,CAAC;iBACJ;aACJ;YACD,OAAO,EAAE,IAAI;YACb,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,WAAW;SACvC,CAAC;IACN,CAAC;IAEM,MAAM;QACT,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QAE9B,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrB,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,OAAO;YACrB,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE;YACtB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC,CAAC,SAAS,CAAC;IAClB,CAAC;IAEM,QAAQ;QACX,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE;YAC5B,OAAO,SAAS,CAAC;SACpB;QAED,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC5B,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAC,mBAAmB,EAAE;YAC7B,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE;YACnB,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC;IAEO,mBAAmB;QACvB,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;IACjE,CAAC;CACJ","sourcesContent":["import { Cell } from '@fui/sheet/types';\nimport { AbstractLink } from '@engine/link';\nimport { CellType } from '../table.types';\nimport { TableExternalContext } from '../table.cell_generator';\nimport { Transform2CellArgs } from './cell';\nimport { AbstractTableCell, CellHtml } from './cell.abstract';\n\nexport class TextTableCell extends AbstractTableCell {\n    private showAsHtml: boolean;\n\n    private cellText: string;\n\n    private hyperLinks: AbstractLink[];\n\n    private cursor?: CellType['cursor'];\n\n    public constructor(opts: Transform2CellArgs, external: TableExternalContext) {\n        super(opts, external);\n\n        this.showAsHtml = opts.celladvancedattr?.contentShowType === 'SHOW_AS_HTML';\n\n        const { style, cell, hyperLinks: _hyperLinks } = opts;\n\n        this.cellText = this.getTextByCellValue(cell.value);\n        \n        // REPORT-34855 空白单元格不触发点击事件\n        // REPORT-43746 空白单元格有背景图片时，可以触发点击事件\n        this.hyperLinks = this.cellText || style?.backgroundStyle?.backgroundImage ? _hyperLinks : [];\n\n        this.cursor = BI.size(this.hyperLinks) === 0 ? 'default' : 'pointer';\n    }\n\n    protected toFullCell(): CellType {\n        const { style, cell, celladvancedattr } = this.options;\n\n        const cellText = this.cellText;\n\n        const {\n            contentStyle,\n            borderStyle,\n            backgroundStyle,\n            paddingLeft,\n            paddingRight,\n            spacingBefore,\n            spacingAfter,\n        } = style;\n        \n        return {\n            type: BI.AbsoluteLayout.xtype,\n            items: [\n                {\n                    el: {\n                        type: BI.Label.xtype,\n                        style: contentStyle,\n                        listeners: [\n                            {\n                                eventName: 'CELL_CLICK',\n                                action: (e: Event, x: number, y: number, cell: Cell) => {\n                                    this.fireEvent('CELL_CLICK', { e, x, y, cell, hyperLinks: this.hyperLinks, id: this.id });\n\n                                    return true;\n                                },\n                            },\n                        ],\n                        text: this.showAsHtml ? '' : cellText,\n                        autoWrapInfo: cell.autoWrapInfo,\n                        overflowConfig: {\n                            overflowHide: celladvancedattr?.overflowHide,\n                            hideType: celladvancedattr?.hideType,\n                            hideStrLength: celladvancedattr?.hideStrLength,\n                            appendTailStr: celladvancedattr?.appendTailStr,\n                        },\n                    },\n                    left: paddingLeft,\n                    right: paddingRight,\n                    top: spacingBefore,\n                    bottom: spacingAfter,\n                },\n            ],\n            backgroundStyle,\n            borderStyle,\n            value: cellText,\n            position: cell.position,\n            listeners: [\n                {\n                    eventName: 'CELL_HOVER',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_HOVER', { e, x, y, cell, id: this.id });\n                    },\n                },\n                {\n                    eventName: 'CELL_DOUBLE_CLICK',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_DOUBLE_CLICK', { e, x, y, cell, hyperLinks: this.hyperLinks, id: this.id });\n                        \n                        return true;\n                    },\n                },\n                {\n                    eventName: 'CELL_MOUSE_LEAVE',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_MOUSE_LEAVE', { e, x, y, cell });\n                    },\n                },\n                {\n                    eventName: 'CELL_MOUSE_DOWN',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_MOUSE_DOWN', { e, x, y, cell });\n                    },\n                },\n            ],\n            canCopy: true,\n            cursor: this.cursor,\n            valid: cell.valid,\n            title: celladvancedattr?.tooltipText,\n        };\n    }\n\n    public toHtml(): CellHtml | undefined {\n        const { cell } = this.options;\n\n        return this.showAsHtml ? {\n            id: `${this.id}_html`,\n            value: `${cell.value}`,\n            cursor: this.cursor,\n            extended: true,\n        } : undefined;\n    }\n\n    public toWidget() {\n        if (this.shouldNotShowWidget()) {\n            return undefined;\n        }\n\n        return super.toWidget();\n    }\n\n    public toCell(): CellType {\n        return this.shouldNotShowWidget()\n            ? this.toFullCell()\n            : super.toCell();\n    }\n\n    private shouldNotShowWidget() {\n        return BI.size(this.hyperLinks) > 0 && this.isDirectWidget();\n    }\n}\n"]}