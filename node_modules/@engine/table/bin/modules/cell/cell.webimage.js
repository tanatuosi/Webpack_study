import { AbstractTableCell } from './cell.abstract';
export class WebImageTableCell extends AbstractTableCell {
    toFullCell() {
        const { style, cell, celladvancedattr, hyperLinks } = this.options;
        const { borderStyle, backgroundStyle, } = style;
        return {
            type: BI.AbsoluteLayout.xtype,
            stick: true,
            borderStyle,
            backgroundStyle,
            position: cell.position,
            canCopy: true,
            cursor: 'default',
            valid: cell.valid,
            title: celladvancedattr === null || celladvancedattr === void 0 ? void 0 : celladvancedattr.tooltipText,
            listeners: [
                {
                    eventName: 'CELL_CLICK',
                    action: (e, x, y, cell) => {
                        this.fireEvent('CELL_CLICK', { e, x, y, cell, hyperLinks, id: this.id });
                    },
                },
                {
                    eventName: 'CELL_DOUBLE_CLICK',
                    action: (e, x, y, cell) => {
                        this.fireEvent('CELL_DOUBLE_CLICK', { e, x, y, cell, hyperLinks, id: this.id });
                        return true;
                    },
                },
                {
                    eventName: 'CELL_MOUSE_LEAVE',
                    action: (e, x, y, cell) => {
                        this.fireEvent('CELL_MOUSE_LEAVE', { e, x, y, cell });
                    },
                },
                {
                    eventName: 'CELL_MOUSE_DOWN',
                    action: (e, x, y, cell) => {
                        this.fireEvent('CELL_MOUSE_DOWN', { e, x, y, cell });
                    },
                },
                {
                    eventName: 'CELL_HOVER',
                    action: (e, x, y, cell) => {
                        this.fireEvent('CELL_HOVER', { e, x, y, cell });
                    },
                },
            ],
        };
    }
    toHtml() {
        const { cell } = this.options;
        return {
            id: `${this.id}_html`,
            value: `<div style="background: url('${cell.value}'); height:100%; background-size: 100% 100%"></div>`,
            style: {
                height: '100%',
            },
        };
    }
}
//# sourceMappingURL=cell.webimage.js.map