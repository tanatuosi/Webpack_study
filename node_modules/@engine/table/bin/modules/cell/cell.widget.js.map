{"version":3,"file":"cell.widget.js","sourceRoot":"","sources":["../../../src/modules/cell/cell.widget.ts"],"names":[],"mappings":"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","sourcesContent":["import { AbstractParameterControllerWidget } from '@engine/controller';\nimport { FrListener } from '@engine/core';\nimport { DefaultLayout } from '@fui/core';\nimport { Cell } from '@fui/sheet/types';\nimport { XCellValue } from '../table.types';\nimport { AbstractTableCell, CellHtml, EventCellWidgetChangeArgs } from './cell.abstract';\nimport { cellControllerProvider } from './cell_controllers/cell_controller';\nimport { AbstractCellControllerHoc } from './cell_controllers/cell_controller_hoc/cell_controller_hoc.abstract';\nimport { DirectCellController } from './cell_controllers/cell_controller_hoc/cell_controller_hoc.direct/cell_controller_hoc.direct';\nimport { IndirectCellController } from './cell_controllers/cell_controller_hoc/cell_controller_hoc.indirect/cell_controller_hoc.indirect';\n\n/**\n * 根据cell创建widget\n * @param this 单元格类\n */\nexport function transformCell2Widget(this: AbstractTableCell): CellHtml | undefined {\n    const { widget } = this.options;\n\n    return widget\n        ? {\n            id: `${this.id}_cell_controllers`,\n            init: (e, width, height, mount, isInRange) => {\n                const hasWidget = !!this.cellControllerManager.getWidgetByName(this.id);\n\n                if (this.isDirectWidget() || hasWidget) {\n                    initWidget.apply(this, [e, width, height]);\n\n                    isInRange\n                        ? mount?.()\n                        : BI.defer(() => {\n                            mount?.();\n                        });\n\n                    return;\n                }\n\n                // 初始化时不创建\n                this.cellControllerManager.addUninitializedWidget(this.id, {\n                    init: () => {\n                        initWidget.apply(this, [e, width, height]);\n                    },\n                    cellId: this.id,\n                    dependenceMap: widget.dependenceMap || {},\n                    cellWidgetName: widget.widgetName || '',\n                }, mount);\n            },\n            value: '',\n            lazy: true,\n        }\n        : undefined;\n}\n\n/**\n * 创建控件的函数\n * @param e dom\n * @param width 宽度\n * @param height 高度\n */\nfunction initWidget(this: AbstractTableCell, e: Parameters<NonNullable<CellHtml['init']>>[0], width: number, height: number) {\n    const { widget, cell } = this.options;\n\n    if (!widget) return;\n\n    e.css('overflow', 'visible');\n\n    let controller = this.cellControllerManager.getWidgetByName(this.id);\n\n    const wraffleWidth = width - 1;\n    const wraffleHeight = height - 1;\n\n    const isControllerInitialized = !!controller;\n\n    const alawysDirect = cellControllerProvider.isDirect(widget?.type);\n\n    const isSlient = cellControllerProvider.isSlient(widget?.type);\n\n    const controllerEventChangeName = cellControllerProvider.getEventChangeName(widget?.type);\n\n    if (!controller) {\n        controller = <AbstractCellControllerHoc>BI.createWidget({\n            type: this.isDirectWidget()\n                ? DirectCellController.xtype\n                : IndirectCellController.xtype,\n            text: this.getTextByCellValue(),\n\n            /** 获取是否隐藏selectFrame */\n            shouldHideSelectFrame: () => this.cellControllerManager.getHideSelectFrameSign(),\n            cellId: this.id,\n            dependence: widget.dependence,\n            dependenceMap: widget.dependenceMap,\n            reportIndex: widget.reportIndex,\n            width: wraffleWidth,\n            height: wraffleHeight,\n            cellWidgetName: widget.widgetName,\n            slient: isSlient,\n            location: this.id,\n            el: {\n                ...widget,\n                widgetName: '',\n                cellWidgetName: widget.widgetName,\n                type: cellControllerProvider.getType(widget.type),\n                xtype: widget.type,\n                width: wraffleWidth,\n                height: wraffleHeight,\n                position: {\n                    column: cell.position.x,\n                    row: cell.position.y,\n                },\n                location: this.id,\n                value: widget.value,\n                getWidgetDependenceValueByWidget: () => {\n                    const dependence: string[] = widget.dependence || [];\n\n                    const dependenceMap: { [key: string]: string } = widget.dependenceMap || {};\n\n                    return dependence.reduce((result, depCellId) => {\n                        const realId = dependenceMap[depCellId];\n\n                        if (!realId) {\n                            return result;\n                        }\n\n                        const v = this.external.getDependenceValueById(realId);\n\n                        result[depCellId.toUpperCase()] = v;\n\n                        return result;\n                    }, <{ [key: string]: NonNullable<XCellValue['cv']> }>{});\n                },\n                getDependenceByWidget: () => widget.dependence || [],\n                // 这是一段很恶心的代码\n                // 那么对应什么场景呢？\n                // 填报中类似afteredit这类事件后，触发入库\n                // 不先执行event_change，就无法写入dirtycell，入库时就获取不到\n                // 赶紧来个神通收了这段代码吧\n                listeners: ((\n                    controllerEventChangeName\n                        ? [{\n                            eventName: controllerEventChangeName,\n                            action(this: AbstractParameterControllerWidget) {\n                                this.fireEvent('EVENT_CHANGE', () => {\n                                    this.fireEvent(`_${controllerEventChangeName}`);\n                                });\n\n                                return false;\n                            },\n                        }]\n                        : []\n                ) as FrListener[])\n                    .concat(\n                        ((widget.listeners || []) as FrListener[])\n                            .concat(\n                                [{\n                                    eventName: 'EVENT_CHANGE',\n                                    action: (callback?: Function) => {\n                                        if (alawysDirect) {\n                                            const validation = controller!.validateAndMsgToast(this.id);\n\n                                            !validation && controller!.reset();\n                                        }\n\n                                        const promises = this.fireEvent('CELL_WIDGET_CHANGE', {\n                                            e: <Event>{},\n                                            cell: <Cell>{},\n                                            x: cell.position.x,\n                                            y: cell.position.y,\n                                            value: controller!.getValue(),\n                                            id: this.id,\n                                            direct: alawysDirect,\n                                        } as EventCellWidgetChangeArgs);\n\n                                        Promise.all(promises)\n                                            .then(() => {\n                                                /**\n                                                 * 加个保险确保callback一定是函数，解决控制台报错\n                                                 * 修复 https://work.fineres.com/browse/REPORT-72256 引入\n                                                 */\n                                                BI.isFunction(callback) && callback();\n                                            });\n                                    },\n                                }])\n                            .map(listener => {\n                                return {\n                                    ...listener,\n                                    eventName: controllerEventChangeName\n                                        ? listener.eventName === controllerEventChangeName ? `_${controllerEventChangeName}` : listener.eventName\n                                        : listener.eventName,\n                                };\n                            })),\n            },\n            listeners: [{\n                eventName: IndirectCellController.EVENT_OPEN,\n                action: () => {\n                    this.fireEvent('CELL_DOUBLE_CLICK', {\n                        e: <Event>{},\n                        x: cell.position.x,\n                        y: cell.position.y,\n                        id: this.id,\n                        cell: <Cell>{\n                            position: {\n                                x: cell.position.x,\n                                y: cell.position.y,\n                            },\n                            ri: 0,\n                            ci: 0,\n                            x: cell.position.x,\n                            y: cell.position.y,\n                            width,\n                            height,\n                        },\n                    });\n                },\n            }],\n        });\n\n        this.cellControllerManager.register(controller, this.id);\n    } else {\n        controller.setText(this.getTextByCellValue());\n        controller.resize(wraffleWidth, wraffleHeight);\n    }\n\n    const layout = BI.createWidget({\n        type: BI.DefaultLayout.xtype,\n        element: e.el,\n        items: [{\n            type: BI.AbsoluteLayout.xtype,\n            items: [\n                !isControllerInitialized\n                    ? {\n                        el: controller,\n                        top: 1,\n                        left: 1,\n                        right: 0,\n                        bottom: 0,\n                    }\n                    : {\n                        el: {\n                            type: BI.DefaultLayout.xtype,\n                            mounted(this: DefaultLayout) {\n                                BI.mount(controller, this.element[0]);\n                            },\n                        },\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                    },\n                ...this.getStateWidgetJson(wraffleWidth, wraffleHeight),\n            ],\n        }],\n    });\n\n    // 如果控件显示着，则waffle点击事件不冒泡\n    layout.element.mousedown((e: MouseEvent) => {\n        controller?.isActive() && e.stopPropagation();\n    });\n\n    // 如果控件显示着，则waffle点击事件不冒泡\n    layout.element.mouseup((e: MouseEvent) => {\n        controller?.isActive() && e.stopPropagation();\n    });\n\n    // 如果控件显示着，则waffle点击事件不冒泡\n    layout.element.mousewheel((e: MouseEvent) => {\n        (controller?.isActive() || alawysDirect) && e.stopPropagation();\n    });\n}\n"]}