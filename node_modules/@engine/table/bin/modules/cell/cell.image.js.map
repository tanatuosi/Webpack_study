{"version":3,"file":"cell.image.js","sourceRoot":"","sources":["../../../src/modules/cell/cell.image.ts"],"names":[],"mappings":"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","sourcesContent":["import { Cell } from '@fui/sheet/types';\nimport { getCompleteImageUrl, getImgLayout } from '../table.service';\nimport { BackgroundRepeat, CellStyle, CellType } from '../table.types';\nimport { Transform2CellArgs } from './cell';\nimport { AbstractTableCell } from './cell.abstract';\n\nexport abstract class ImageCell extends AbstractTableCell {\n    protected transform2ImageCell(style: CellStyle, url: string, layout: BackgroundRepeat): CellType {\n        const { cell, hyperLinks } = this.options;\n        const {\n            borderStyle,\n            backgroundStyle,\n            paddingLeft,\n            paddingRight,\n        } = style;\n        \n        return {\n            type: BI.AbsoluteLayout.xtype,\n            items: [\n                {\n                    el: {\n                        type: BI.AbsoluteLayout.xtype,\n                        style: {\n                            backgroundImage: url,\n                            backgroundSize: layout,\n                        },\n                        listeners: [\n                            {\n                                eventName: 'CELL_CLICK',\n                                action: (e: Event, x: number, y: number, cell: Cell) => {\n                                    this.fireEvent('CELL_CLICK', { e, x, y, cell, hyperLinks, id: this.id });\n            \n                                    return true;\n                                },\n                            },\n                        ],\n                    },\n                    left: paddingLeft,\n                    right: paddingRight,\n                    top: 0,\n                    bottom: 0,\n                },\n            ],\n            listeners: [\n                {\n                    eventName: 'CELL_DOUBLE_CLICK',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_DOUBLE_CLICK', { e, x, y, cell, hyperLinks, id: this.id });\n                        \n                        return true;\n                    },\n                },\n                {\n                    eventName: 'CELL_HOVER',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_HOVER', { e, x, y, cell });\n                    },\n                },\n                {\n                    eventName: 'CELL_MOUSE_LEAVE',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_MOUSE_LEAVE', { e, x, y, cell });\n                    },\n                },\n                {\n                    eventName: 'CELL_MOUSE_DOWN',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_MOUSE_DOWN', { e, x, y, cell });\n                    },\n                },\n            ],\n            borderStyle,\n            backgroundStyle,\n            position: cell.position,\n            image: url,\n            canCopy: this.options.celladvancedattr?.contentShowType === 'SHOW_AS_IMAGE', // 只有以图片显示的单元格的图片，才允许复制\n            cursor: this.options.hyperLinks.length === 0 ? 'default' : 'pointer',\n            valid: cell.valid,\n            title: this.options.celladvancedattr?.tooltipText,\n        };\n    }\n}\n\nexport class ImageTableCell extends ImageCell {\n    protected toFullCell(): CellType {\n        const { style, cell } = this.options as ImageTableCellProps;\n        const { attachid = '', cache = false, imageLayout = 3, value } = cell;\n        const layout = getImgLayout(imageLayout);\n        \n        return this.transform2ImageCell(style, value ? `data:image;base64,${value}` : getCompleteImageUrl(attachid, cache), layout);\n    }\n}\n\ntype ImageTableCellProps = Transform2CellArgs & {\n    cell: {\n        attachid?: string;\n\n        /**\n         * 图片资源是否需要缓存\n         */\n        cache?: boolean;\n        value?: string;\n        imageLayout?: number;\n    }\n}\n"]}