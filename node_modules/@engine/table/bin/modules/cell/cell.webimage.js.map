{"version":3,"file":"cell.webimage.js","sourceRoot":"","sources":["../../../src/modules/cell/cell.webimage.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAEpD,MAAM,OAAO,iBAAkB,SAAQ,iBAAiB;IAC1C,UAAU;QAChB,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QACnE,MAAM,EACF,WAAW,EACX,eAAe,GAClB,GAAG,KAAK,CAAC;QAEV,OAAO;YACH,IAAI,EAAE,EAAE,CAAC,cAAc,CAAC,KAAK;YAC7B,KAAK,EAAE,IAAI;YACX,WAAW;YACX,eAAe;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI;YACb,MAAM,EAAE,SAAS;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,WAAW;YACpC,SAAS,EAAE;gBACP;oBACI,SAAS,EAAE,YAAY;oBACvB,MAAM,EAAE,CAAC,CAAQ,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;wBACnD,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;oBAC7E,CAAC;iBACJ;gBACD;oBACI,SAAS,EAAE,mBAAmB;oBAC9B,MAAM,EAAE,CAAC,CAAQ,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;wBACnD,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;wBAEhF,OAAO,IAAI,CAAC;oBAChB,CAAC;iBACJ;gBACD;oBACI,SAAS,EAAE,kBAAkB;oBAC7B,MAAM,EAAE,CAAC,CAAQ,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;wBACnD,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC1D,CAAC;iBACJ;gBACD;oBACI,SAAS,EAAE,iBAAiB;oBAC5B,MAAM,EAAE,CAAC,CAAQ,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;wBACnD,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;oBACzD,CAAC;iBACJ;gBACD;oBACI,SAAS,EAAE,YAAY;oBACvB,MAAM,EAAE,CAAC,CAAQ,EAAE,CAAS,EAAE,CAAS,EAAE,IAAU,EAAE,EAAE;wBACnD,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;oBACpD,CAAC;iBACJ;aACJ;SACJ,CAAC;IACN,CAAC;IAEM,MAAM;QACT,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QAE9B,OAAO;YACH,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,OAAO;YACrB,KAAK,EAAE,gCAAgC,IAAI,CAAC,KAAK,qDAAqD;YACtG,KAAK,EAAE;gBACH,MAAM,EAAE,MAAM;aACjB;SACJ,CAAC;IACN,CAAC;CACJ","sourcesContent":["import { Cell } from '@fui/sheet/types';\nimport { CellType } from '../table.types';\nimport { AbstractTableCell } from './cell.abstract';\n\nexport class WebImageTableCell extends AbstractTableCell {\n    protected toFullCell(): CellType {\n        const { style, cell, celladvancedattr, hyperLinks } = this.options;\n        const {\n            borderStyle,\n            backgroundStyle,\n        } = style;\n            \n        return {\n            type: BI.AbsoluteLayout.xtype,\n            stick: true,\n            borderStyle,\n            backgroundStyle,\n            position: cell.position,\n            canCopy: true,\n            cursor: 'default',\n            valid: cell.valid,\n            title: celladvancedattr?.tooltipText,\n            listeners: [\n                {\n                    eventName: 'CELL_CLICK',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_CLICK', { e, x, y, cell, hyperLinks, id: this.id });\n                    },\n                },\n                {\n                    eventName: 'CELL_DOUBLE_CLICK',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_DOUBLE_CLICK', { e, x, y, cell, hyperLinks, id: this.id });\n                        \n                        return true;\n                    },\n                },\n                {\n                    eventName: 'CELL_MOUSE_LEAVE',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_MOUSE_LEAVE', { e, x, y, cell });\n                    },\n                },\n                {\n                    eventName: 'CELL_MOUSE_DOWN',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_MOUSE_DOWN', { e, x, y, cell });\n                    },\n                },\n                {\n                    eventName: 'CELL_HOVER',\n                    action: (e: Event, x: number, y: number, cell: Cell) => {\n                        this.fireEvent('CELL_HOVER', { e, x, y, cell });\n                    },\n                },\n            ],\n        };\n    }\n\n    public toHtml() {\n        const { cell } = this.options;\n        \n        return {\n            id: `${this.id}_html`,\n            value: `<div style=\"background: url('${cell.value}'); height:100%; background-size: 100% 100%\"></div>`,\n            style: {\n                height: '100%',\n            },\n        };\n    }\n}\n"]}