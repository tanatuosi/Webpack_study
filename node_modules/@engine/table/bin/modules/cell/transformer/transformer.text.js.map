{"version":3,"file":"transformer.text.js","sourceRoot":"","sources":["../../../../src/modules/cell/transformer/transformer.text.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtD,OAAO,EAAE,0BAA0B,EAAE,MAAM,sBAAsB,CAAC;AAElE,MAAM,OAAO,wBAAyB,SAAQ,0BAA0B;IAC7D,QAAQ,CAAC,SAAqB,EAAE,MAA2D;;QAC9F,MAAM,EAAE,GAAG,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,mCAAI,EAAE,CAAC;QAE5B,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC;QAElB,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,eAAe,CAAC,EAAE,CAAC,CAAC;QAEnD,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAExB,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAExB,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QAEtB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACzB,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;CACJ","sourcesContent":["import { transformCellCv } from '../../table.service';\nimport { XCellValue } from '../../table.types';\nimport { NormalCellValueTransformer } from './transformer.normal';\n\nexport class TextCellValueTransformer extends NormalCellValueTransformer {\n    public setValue(cellValue: XCellValue, update?: { cv: NonNullable<XCellValue['cv']>; pv?: string }): Promise<string> {\n        const cv = update?.cv ?? '';\n\n        cellValue.cv = cv;\n\n        const { value, xtype, text } = transformCellCv(cv);\n\n        cellValue.xtype = xtype;\n\n        cellValue.value = value;\n\n        cellValue.text = text;\n\n        return new Promise(resolve => {\n            resolve(JSON.stringify(cellValue));\n        });\n    }\n}\n"]}