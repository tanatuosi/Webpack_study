import { transformCellCv } from '../../table.service';
export class NormalCellValueTransformer {
    constructor(externalInterface, cellData) {
        this.externalInterface = externalInterface;
        this.cellData = cellData;
    }
    setValue(cellValue, update) {
        const cv = (update === null || update === void 0 ? void 0 : update.cv) || '';
        cellValue.cv = cv;
        const { value, xtype, text } = transformCellCv(cv);
        cellValue.xtype = xtype;
        cellValue.value = value;
        cellValue.text = text;
        return new Promise(resolve => {
            resolve(JSON.stringify(cellValue));
        });
    }
    /**
     * 获取依赖键值对
     * @param dependence 依赖数组
     * @returns 依赖键值对
     */
    getDependenceValue(dependence) {
        return dependence.reduce((result, dep) => {
            result[dep] = this.externalInterface.getCellValueById(dep);
            return result;
        }, {});
    }
}
//# sourceMappingURL=transformer.normal.js.map