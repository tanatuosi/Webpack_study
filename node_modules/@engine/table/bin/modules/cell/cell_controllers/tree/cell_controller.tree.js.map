{"version":3,"file":"cell_controller.tree.js","sourceRoot":"","sources":["../../../../../src/modules/cell/cell_controllers/tree/cell_controller.tree.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAA8E,aAAa,EAAE,KAAK,EAAE,MAAM,oBAAoB,CAAC;AAC9I,OAAO,EAAc,QAAQ,EAAE,MAAM,cAAc,CAAC;AACpD,OAAO,EAAE,qCAAqC,EAAE,MAAM,6BAA6B,CAAC;AACpF,OAAO,EAAE,2BAA2B,EAAE,yBAAyB,EAAE,2BAA2B,EAAE,MAAM,yBAAyB,CAAC;AAG9H,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,qCAAqC;IAAnE;;QAGW,UAAK,GAWR;YACA,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,CAAC;YACd,QAAQ,EAAE;gBACN,GAAG,EAAE,CAAC;gBACN,MAAM,EAAE,CAAC;aACZ;YACD,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,EAAE;SACd,CAAA;IAqEL,CAAC;IAjEU,MAAM;QACT,MAAM,KAA0D,IAAI,CAAC,OAAO,EAAtE,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,OAA0B,EAArB,IAAI,cAArD,oDAAuD,CAAe,CAAC;QAE7E,OAAO,gCACA,IAAI,KACP,QAAQ,EAAE,EAAE,EACZ,IAAI,EAAE,aAAa,CAAC,KAAK,EACzB,GAAG,EAAE,CAAC,GAAkB,EAAE,EAAE;gBACxB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YACpB,CAAC,EACD,SAAS,EAAE,UAAU,EACrB,yBAAyB,EAAE,2BAA2B,EACtD,yBAAyB,EAAE,2BAA2B,EACtD,uBAAuB,EAAE,yBAAyB,EAClD,eAAe,EAAE,GAAG,EAAE;gBAClB,OAAO;oBACH,QAAQ,kCACD,QAAQ,KACX,WAAW,GACd;iBACJ,CAAC;YACN,CAAC,EACD,YAAY,CAAsB,EAAY;gBAC1C,IAAI,CAAC,kBAAkB,EAAE;qBACpB,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAC1B,CAAC,GACJ,CAAC;IACN,CAAC;IAED,qBAAqB;IACd,OAAO,KAAI,CAAC;IAEZ,QAAQ;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;IAEM,iBAAiB;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACzC,CAAC;IAEM,gBAAgB;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACxC,CAAC;IAEM,KAAK,CAAC,kBAAkB,CAAC,CAAS,EAAE,IAA8C;QACrF,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAEM,oBAAoB;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC5C,CAAC;IAEM,gBAAgB,CAAC,CAAqC;QACzD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAEM,iBAAiB;QACpB,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAClC,CAAC;IAEM,QAAQ,KAAI,CAAC;CACvB,CAAA;AA7FiB,cAAK,GAAG,wCAAwC,CAAC;AADtD,QAAQ;IADpB,QAAQ,EAAE;GACE,QAAQ,CA8FpB;SA9FY,QAAQ","sourcesContent":["import { HEIGHT, ParameterControllerTreeControlAttr, ParameterControllerTreeControlAttrData, ParameterTree, WIDTH } from '@engine/controller';\nimport { FrListener, shortcut } from '@engine/core';\nimport { AbstractParameterCellControllerWidget } from '../cell_controller.abstract';\nimport { fetchNewCellTreeControlAttr, fetchNewCellTreeStructure, fetchOldCellTreeControlAttr } from '../cell_controller.crud';\n\n@shortcut()\nexport class CellTree extends AbstractParameterCellControllerWidget {\n    public static xtype = 'report.main.table_cell.controller.tree';\n\n    public props: {\n        position: {\n            row: number;\n            column: number;\n        };\n        reportIndex: number;\n        xlisteners: FrListener[];\n        width: number;\n        height: number;\n        fontSize: number;\n        baseCls: string;\n    } = {\n        width: WIDTH,\n        height: HEIGHT,\n        fontSize: 12,\n        reportIndex: 0,\n        position: {\n            row: 0,\n            column: 0,\n        },\n        xlisteners: [],\n        baseCls: '',\n    }\n\n    private tree: ParameterTree;\n\n    public render() {\n        const { xlisteners, position, reportIndex, baseCls, ...opts } = this.options;\n\n        return <Partial<ParameterTree['props']>>{\n            ...opts,\n            fontSize: 12,\n            type: ParameterTree.xtype,\n            ref: (ref: ParameterTree) => {\n                this.tree = ref;\n            },\n            listeners: xlisteners,\n            oldTreeControlAttrFetcher: fetchOldCellTreeControlAttr,\n            newTreeControlAttrFetcher: fetchNewCellTreeControlAttr,\n            newTreeStructureFetcher: fetchNewCellTreeStructure,\n            extraOptsGetter: () => {\n                return {\n                    location: {\n                        ...position,\n                        reportIndex,\n                    },\n                };\n            },\n            beforeRender(this: ParameterTree, cb: Function) {\n                this.updateControllAttr()\n                    .then(() => cb());\n            },\n        };\n    }\n\n    // 复写父类不触发afterinit事件\n    public mounted() {}\n\n    public getValue() {\n        return this.tree.getValue();\n    }\n\n    public postGetValidation() {\n        return this.tree.postGetValidation();\n    }\n\n    public preGetValidation() {\n        return this.tree.preGetValidation();\n    }\n\n    public async setControllerValue(v: string, data: ParameterControllerTreeControlAttrData[]) {\n        await this.tree.setControllerValue(v, data);\n    }\n\n    public reset() {\n        this.tree.reset();\n    }\n\n    public postValidateAndToast() {\n        return this.tree.postValidateAndToast();\n    }\n\n    public setInteractValue(v: ParameterControllerTreeControlAttr) {\n        this.tree.setInteractValue(v);\n    }\n\n    public reloadControlAttr() {\n        this.tree.reloadControlAttr();\n    }\n\n    public setStyle() {}\n}\n"]}