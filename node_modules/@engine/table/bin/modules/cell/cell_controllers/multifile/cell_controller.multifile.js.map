{"version":3,"file":"cell_controller.multifile.js","sourceRoot":"","sources":["../../../../../src/modules/cell/cell_controllers/multifile/cell_controller.multifile.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,EAAwB,kBAAkB,EAAE,MAAM,EAAE,kBAAkB,EAAE,KAAK,EAAE,MAAM,oBAAoB,CAAC;AACjH,OAAO,EAAc,QAAQ,EAAE,MAAM,cAAc,CAAC;AACpD,OAAO,EAAE,qCAAqC,EAAE,MAAM,6BAA6B,CAAC;AAGpF,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,qCAAqC;IAAxE;;QAGW,UAAK,GAQR;YACA,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,EAAE;SACf,CAAA;IAsEL,CAAC;IAlEU,MAAM;QACT,MAAM,KAAmC,IAAI,CAAC,OAAO,EAA/C,EAAE,UAAU,EAAE,OAAO,OAA0B,EAArB,IAAI,cAA9B,yBAAgC,CAAe,CAAC;QAEtD,OAAO,gCACA,IAAI,KACP,IAAI,EAAE,kBAAkB,CAAC,KAAK,EAC9B,GAAG,EAAE,CAAC,GAAuB,EAAE,EAAE;gBAC7B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YACtB,CAAC,EACD,SAAS,EAAE,UAAU,EACrB,GAAG,EAAE,yBAAyB,EAC9B,GAAG,EAAE,SAAS,GACjB,CAAC;IACN,CAAC;IAEM,QAAQ;QACX,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;aACrC,GAAG,CAAC,IAAI,CAAC,EAAE;YACR,uCACO,IAAI,KACP,UAAU,EAAE,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAChD;QACN,CAAC,CAAC,CAAC;QAEP,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACtB,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC1B;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,iBAAiB;QACpB,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QAE9C,MAAM,MAAM,GAAG,UAAU,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC,CAAC;QAEvE,OAAO,MAAM;YACT,CAAC,CAAC;gBACE,MAAM,EAAE,IAAI;aACf,CAAC,CAAC,CAAC;YACA,MAAM,EAAE,KAAK;YACb,QAAQ,EAAE,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,kCAAkC,CAAC;SACxE,CAAC;IACV,CAAC;IAEM,gBAAgB;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;IAC1C,CAAC;IAEM,KAAK,CAAC,kBAAkB;QAC3B,MAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;IAC3C,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAEM,oBAAoB;QACvB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;IAC9C,CAAC;IAEM,gBAAgB;QACnB,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;IACnC,CAAC;IAEM,QAAQ,KAAI,CAAC;CACvB,CAAA;AAxFiB,mBAAK,GAAG,6CAA6C,CAAC;AAD3D,aAAa;IADzB,QAAQ,EAAE;GACE,aAAa,CAyFzB;SAzFY,aAAa","sourcesContent":["import { ControllerValidation, getDownloadFileUrl, HEIGHT, ParameterMultifile, WIDTH } from '@engine/controller';\nimport { FrListener, shortcut } from '@engine/core';\nimport { AbstractParameterCellControllerWidget } from '../cell_controller.abstract';\n\n@shortcut()\nexport class CellMultifile extends AbstractParameterCellControllerWidget {\n    public static xtype = 'report.main.table_cell.controller.multifile';\n\n    public props: {\n        xlisteners: FrListener[];\n        width: number;\n        height: number;\n        fontSize: number;\n        baseCls: string;\n        allowBlank: boolean;\n        errorMsg: string;\n    } = {\n        width: WIDTH,\n        height: HEIGHT,\n        fontSize: 12,\n        xlisteners: [],\n        baseCls: '',\n        allowBlank: true,\n        errorMsg: '',\n    }\n\n    private editor: ParameterMultifile;\n\n    public render() {\n        const { xlisteners, baseCls, ...opts } = this.options;\n\n        return <Partial<ParameterMultifile['props']>>{\n            ...opts,\n            type: ParameterMultifile.xtype,\n            ref: (ref: ParameterMultifile) => {\n                this.editor = ref;\n            },\n            listeners: xlisteners,\n            url: 'write/attachment/upload',\n            cls: 'bi-card',\n        };\n    }\n\n    public getValue() {\n        const files = this.editor.getUploadFiles()\n            .map(file => {\n                return {\n                    ...file,\n                    attach_url: getDownloadFileUrl(file.attach_id),\n                };\n            });\n\n        if (BI.size(files) === 1) {\n            return BI.first(files);\n        }\n\n        return files;\n    }\n\n    public postGetValidation(): ControllerValidation {\n        const { allowBlank, errorMsg } = this.options;\n\n        const result = allowBlank || BI.size(this.editor.getUploadFiles()) > 0;\n\n        return result\n            ? {\n                result: true,\n            } : {\n                result: false,\n                errorMsg: errorMsg || BI.i18nText('Fine-Report_Preview_Can_Not_Null'),\n            };\n    }\n\n    public preGetValidation() {\n        return this.editor.preGetValidation();\n    }\n\n    public async setControllerValue() {\n        await this.editor.setControllerValue();\n    }\n\n    public reset() {\n        this.editor.reset();\n    }\n\n    public postValidateAndToast() {\n        return this.editor.postValidateAndToast();\n    }\n\n    public setInteractValue() {\n        this.editor.setInteractValue();\n    }\n\n    public setStyle() {}\n}\n"]}