{"version":3,"file":"cell_controller.list.js","sourceRoot":"","sources":["../../../../../src/modules/cell/cell_controllers/list/cell_controller.list.ts"],"names":[],"mappings":"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","sourcesContent":["import { ControllerValidation, HEIGHT, WIDTH } from '@engine/controller';\nimport { shortcut } from '@engine/core';\nimport { ListPane, SingleSelectItem } from '@fui/core';\nimport { AbstractParameterCellControllerWidget } from '../cell_controller.abstract';\nimport { fetchCellGroupControlAttr } from '../cell_controller.crud';\n\n@shortcut()\nexport class CellList extends AbstractParameterCellControllerWidget {\n    public static xtype = 'report.main.table_cell.controller.list';\n\n    public props = {\n        width: WIDTH,\n        height: HEIGHT,\n        fontSize: 12,\n        value: '',\n        needSubmit: false,\n        disabled: false,\n        invisible: false,\n        allowBlank: true,\n        errorMsg: BI.i18nText('Fine-Report_Preview_Can_Not_Null'),\n        controlAttr: {\n            data: <{text: string; value: string}[]>[],\n            value: '',\n        },\n        needHead: false,\n        widgetName: '',\n        reportIndex: 0,\n        position: {\n            row: 0,\n            column: 0,\n        },\n    }\n\n    private pane: ListPane;\n\n    public render() {\n        const { needHead } = this.options;\n\n        return {\n            type: BI.AbsoluteLayout.xtype,\n            items: [{\n                el: {\n                    type: BI.VerticalLayout.xtype,\n                    items: [{\n                        type: BI.CenterAdaptLayout.xtype,\n                        cls: 'bi-background',\n                        items: [{\n                            type: BI.ButtonGroup.xtype,\n                            layouts: [{\n                                type: BI.VerticalAdaptLayout.xtype,\n                                hgap: 2,\n                            }],\n                            items: [{\n                                type: BI.IconButton.xtype,\n                                cls: 'list-add-font report-list-item-active icon-size-16',\n                                handler: () => {\n                                    const name = window.prompt(BI.i18nText('Fine-Report_Input'));\n                                    if (BI.isNull(name) || BI.isEmptyString(name)) {\n                                        BI.Msg.toast(BI.i18nText('Fine-Report_Name_Empty'));\n                                    } else {\n                                        this.addItemByValue(name);\n                                    }\n                                },\n                            }, {\n                                type: BI.IconButton.xtype,\n                                cls: 'list-delete-font report-list-item-active icon-size-16',\n                                handler: () => {\n                                    this.removeSelectedItem();\n                                },\n                            }, {\n                                type: BI.IconButton.xtype,\n                                cls: 'list-rename-font report-list-item-active icon-size-16',\n                                handler: () => {\n                                    const selectIndex = this.getSelectedIndex();\n                                    \n                                    if (selectIndex === -1) {\n                                        BI.Msg.toast(BI.i18nText('Fine-Report_Item_Not_Selected'));\n\n                                        return;\n                                    }\n\n                                    const button = this.pane.getAllButtons<SingleSelectItem>()[selectIndex];\n\n                                    const name = button.attr('text');\n                                    const newName = window.prompt('Rename:', name);\n                                    if (BI.isNull(newName) || BI.isEmptyString(newName)) {\n                                        this.removeSelectedItem();\n\n                                        return;\n                                    }\n\n                                    button.setText(newName);\n                                    this.options.controlAttr.data[selectIndex].text = newName;\n                                },\n                            }],\n                            invisible: !needHead,\n                            height: 20,\n                        }],\n                    }, {\n                        type: BI.ListPane.xtype,\n                        ref: (_ref: ListPane) => {\n                            this.pane = _ref;\n                        },\n                        items: this.getGroupItems(),\n                        el: {\n                            type: BI.ButtonGroup.xtype,\n                            chooseType: BI.Selection.None,\n                            layouts: [{\n                                type: BI.VerticalLayout.xtype,\n                            }],\n                        },\n                    }],\n                },\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n            }],\n            invisible: !this.postGetValidation().result,\n        };\n    }\n\n    private removeSelectedItem() {\n        const selectIndex = this.getSelectedIndex();\n\n        if (selectIndex === -1) {\n            BI.Msg.toast(BI.i18nText('Fine-Report_Item_Not_Selected'));\n\n            return;\n        }\n\n        this.pane.removeItemAt(selectIndex);\n        this.options.controlAttr.data.splice(selectIndex, 1);\n    }\n\n    private getSelectedIndex() {\n        return this.pane.getAllButtons<SingleSelectItem>()\n            .findIndex(item => item.isSelected());\n    }\n\n    private addItemByValue(v: string) {\n        this.pane.addItems(this.createItems([{ text: v, value: v }]));\n        this.options.controlAttr.data.push({ text: v, value: v });\n    }\n\n    public beforeInit(cb: Function) {\n        this.getGroupControlAttr()\n            .then(() => cb());\n    }\n\n    private getGroupItems() {\n        return this.createItems(this.options.controlAttr.data);\n    }\n\n    private getGroupControlAttr() {\n        const { widgetName } = this.options;\n\n        return fetchCellGroupControlAttr(widgetName, this.getRequestOpts())\n            .then(res => {\n                this.options.controlAttr = {\n                    data: res,\n                    value: this.options.value,\n                };\n            });\n    }\n\n    private getRequestOpts() {\n        const { position, reportIndex } = this.options;\n\n        return {\n            location: {\n                ...position,\n                reportIndex,\n            },\n        };\n    }\n\n    public getValue() {\n        return this.pane.getAllButtons<SingleSelectItem>()\n            .find(item => item.isSelected())\n            ?.getValue() || '';\n    }\n\n    public async setControllerValue($v: string | number | undefined = '') {\n        const v = `${$v}`;\n\n        const buttons = this.pane.getAllButtons<SingleSelectItem>();\n\n        buttons.forEach(button => {\n            button.setSelected(false);\n        });\n\n        let isSelected = buttons.some(button => {\n            if (`${button.getValue()}` === `${v}`) {\n                button.setSelected(true);\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (!isSelected) {\n            isSelected = buttons.some(button => {\n                if (`${button.attr('text')}` === `${v}`) {\n                    button.setSelected(true);\n    \n                    return true;\n                }\n    \n                return false;\n            });\n        }\n\n        if (!isSelected && v) {\n            this.addItemByValue(v);\n        }\n    }\n\n    public setInteractValue() {}\n\n    public reset() {\n        // 恢复初始状态\n        const buttons = this.pane.getAllButtons<SingleSelectItem>();\n\n        buttons.forEach(button => {\n            button.setSelected(false);\n        });\n    }\n\n    public reloadControlAttr() {\n        this.getGroupControlAttr()\n            .then(() => {\n                this.pane.populate(this.getGroupItems());\n            });\n    }\n\n    public preGetValidation(): ControllerValidation {\n        return { result: true };\n    }\n    public postGetValidation(): ControllerValidation {\n        const { errorMsg } = this.options;\n        const value = `${this.getGroupItems()}` || '';\n\n        if (BI.isNull(value) || BI.isEmptyString(value)) {\n            return {\n                result: false,\n                errorMsg,\n            };\n        }\n\n        return { result: true };\n    }\n    public postValidateAndToast(): boolean {\n        return true;\n    }\n\n    public createItems(items: any[]) {\n        return items.map(item => {\n            let singleItem: SingleSelectItem;\n            \n            return {\n                ...item,\n                type: BI.SingleSelectItem.xtype,\n                ref: (_ref: SingleSelectItem) => {\n                    singleItem = _ref;\n                },\n                cls: 'bi-list-item-active2',\n                height: 12,\n                listeners: [{\n                    eventName: BI.SingleSelectItem.EVENT_CHANGE,\n                    action: () => {\n                        this.pane.getAllButtons<SingleSelectItem>()\n                            .forEach(button => {\n                                button.setSelected(false);\n                            });\n\n                        singleItem.setSelected(true);\n                    },\n                }],\n            };\n        });\n    }\n\n    public setStyle() {}\n}\n"]}