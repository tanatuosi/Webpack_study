{"version":3,"file":"cell_controller.tree_combo_box.js","sourceRoot":"","sources":["../../../../../src/modules/cell/cell_controllers/tree_combo_box/cell_controller.tree_combo_box.ts"],"names":[],"mappings":"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","sourcesContent":["import { HEIGHT, ParameterControllerTreeControlAttr, ParameterControllerTreeControlAttrData, ParameterTreeComboBox, WIDTH } from '@engine/controller';\nimport { FrListener, shortcut } from '@engine/core';\nimport { AbstractParameterCellControllerWidget } from '../cell_controller.abstract';\nimport { fetchNewCellTreeControlAttr, fetchNewCellTreeStructure, fetchOldCellTreeControlAttr } from '../cell_controller.crud';\n\n@shortcut()\nexport class CellTreeComboBox extends AbstractParameterCellControllerWidget {\n    public static xtype = 'report.main.table_cell.controller.tree_combo_box';\n\n    public props: {\n        position: {\n            row: number;\n            column: number;\n        };\n        reportIndex: number;\n        xlisteners: FrListener[];\n        width: number;\n        height: number;\n        fontSize: number;\n        baseCls: string;\n    } = {\n        width: WIDTH,\n        height: HEIGHT,\n        fontSize: 12,\n        reportIndex: 0,\n        position: {\n            row: 0,\n            column: 0,\n        },\n        xlisteners: [],\n        baseCls: '',\n    }\n\n    private combo: ParameterTreeComboBox;\n\n    public render() {\n        const { xlisteners, position, reportIndex, baseCls, ...opts } = this.options;\n\n        return <Partial<ParameterTreeComboBox['props']>>{\n            ...opts,\n            type: ParameterTreeComboBox.xtype,\n            ref: (ref: ParameterTreeComboBox) => {\n                this.combo = ref;\n            },\n            listeners: xlisteners,\n            oldTreeControlAttrFetcher: fetchOldCellTreeControlAttr,\n            newTreeControlAttrFetcher: fetchNewCellTreeControlAttr,\n            newTreeStructureFetcher: fetchNewCellTreeStructure,\n            extraOptsGetter: () => {\n                return {\n                    location: {\n                        ...position,\n                        reportIndex,\n                    },\n                };\n            },\n            beforeRender(this: ParameterTreeComboBox, cb: Function) {\n                const v = BI.isArray(this.options.value) ? [this.options.value] : `${this.options.value}`;\n                if (v) {\n                    this.getInfoByValue(v)\n                        .then(result => {\n                            if (result?.controlData) {\n                                this.options.controlAttr.data = result.controlData;\n                            }\n                            cb();\n                        });\n                } else {\n                    cb();\n                }\n            },\n        };\n    }\n\n    // 复写父类不触发afterinit事件\n    public mounted() { }\n\n    public getValue() {\n        return this.combo.getValue();\n    }\n\n    public postGetValidation() {\n        return this.combo.postGetValidation();\n    }\n\n    public preGetValidation() {\n        return this.combo.preGetValidation();\n    }\n\n    public async setControllerValue(v: string, data: ParameterControllerTreeControlAttrData[]) {\n        await this.combo.setControllerValue(v, data);\n    }\n\n    public reset() {\n        this.combo.reset();\n    }\n\n    public postValidateAndToast() {\n        return this.combo.postValidateAndToast();\n    }\n\n    public setInteractValue(v: ParameterControllerTreeControlAttr) {\n        this.combo.setInteractValue(v);\n    }\n\n    public reloadControlAttr() {\n        this.combo.reloadControlAttr();\n    }\n\n    public getAdapter() {\n        return this.combo.getAdapter();\n    }\n\n    public setStyle() { }\n\n    public focus () {\n        this.combo.focus();\n    }\n\n    public blur () {\n        this.combo.blur();\n    }\n}\n"]}