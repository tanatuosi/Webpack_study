{"version":3,"file":"cell_controller.number.js","sourceRoot":"","sources":["../../../../../src/modules/cell/cell_controllers/number/cell_controller.number.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,KAAK,EAAE,MAAM,oBAAoB,CAAC;AACpE,OAAO,EAAc,QAAQ,EAAE,MAAM,cAAc,CAAC;AACpD,OAAO,EAAE,qCAAqC,EAAE,MAAM,6BAA6B,CAAC;AAGpF,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,qCAAqC;IAArE;;QAGW,UAAK,GAMR;YACA,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,EAAE;SACd,CAAA;IA0DL,CAAC;IAtDU,MAAM;QACT,MAAM,KAAmC,IAAI,CAAC,OAAO,EAA/C,EAAE,UAAU,EAAE,OAAO,OAA0B,EAArB,IAAI,cAA9B,yBAAgC,CAAe,CAAC;QAEtD,OAAO,gCACA,IAAI,KACP,IAAI,EAAE,eAAe,CAAC,KAAK,EAC3B,GAAG,EAAE,CAAC,GAAoB,EAAE,EAAE;gBAC1B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YACtB,CAAC,EACD,SAAS,EAAE,UAAU,GACxB,CAAC;IACN,CAAC;IAEM,QAAQ;QACX,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9C,CAAC;IAEM,iBAAiB;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC;IAC3C,CAAC;IAEM,gBAAgB;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;IAC1C,CAAC;IAEM,KAAK,CAAC,kBAAkB,CAAC,CAAkB;QAC9C,MAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAEM,oBAAoB;QACvB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;IAC9C,CAAC;IAEM,gBAAgB,CAAC,CAAS;QAC7B,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAEM,IAAI;QACP,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;IACpC,CAAC;IAEM,QAAQ,KAAI,CAAC;CACvB,CAAA;AAxEiB,gBAAK,GAAG,0CAA0C,CAAC;AADxD,UAAU;IADtB,QAAQ,EAAE;GACE,UAAU,CAyEtB;SAzEY,UAAU","sourcesContent":["import { HEIGHT, ParameterNumber, WIDTH } from '@engine/controller';\nimport { FrListener, shortcut } from '@engine/core';\nimport { AbstractParameterCellControllerWidget } from '../cell_controller.abstract';\n\n@shortcut()\nexport class CellNumber extends AbstractParameterCellControllerWidget {\n    public static xtype = 'report.main.table_cell.controller.number';\n\n    public props: {\n        xlisteners: FrListener[];\n        width: number;\n        height: number;\n        fontSize: number;\n        baseCls: string;\n    } = {\n        width: WIDTH,\n        height: HEIGHT,\n        fontSize: 12,\n        xlisteners: [],\n        baseCls: '',\n    }\n\n    private editor: ParameterNumber;\n\n    public render() {\n        const { xlisteners, baseCls, ...opts } = this.options;\n\n        return <Partial<ParameterNumber['props']>>{\n            ...opts,\n            type: ParameterNumber.xtype,\n            ref: (ref: ParameterNumber) => {\n                this.editor = ref;\n            },\n            listeners: xlisteners,\n        };\n    }\n\n    public getValue(): number {\n        return parseFloat(this.editor.getValue());\n    }\n\n    public postGetValidation() {\n        return this.editor.postGetValidation();\n    }\n\n    public preGetValidation() {\n        return this.editor.preGetValidation();\n    }\n\n    public async setControllerValue(v: string | number) {\n        await this.editor.setControllerValue(v);\n    }\n\n    public reset() {\n        this.editor.reset();\n    }\n\n    public postValidateAndToast() {\n        return this.editor.postValidateAndToast();\n    }\n\n    public setInteractValue(v: string) {\n        this.editor.setInteractValue(v);\n    }\n\n    public focus() {\n        this.editor.focus();\n    }\n\n    public blur(): void {\n        this.editor.blur();\n    }\n\n    public getAdapter() {\n        return this.editor.getAdapter();\n    }\n\n    public setStyle() {}\n}\n"]}