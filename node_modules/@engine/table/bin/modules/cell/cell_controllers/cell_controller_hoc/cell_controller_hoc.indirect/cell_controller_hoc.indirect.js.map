{"version":3,"file":"cell_controller_hoc.indirect.js","sourceRoot":"","sources":["../../../../../../src/modules/cell/cell_controllers/cell_controller_hoc/cell_controller_hoc.indirect/cell_controller_hoc.indirect.ts"],"names":[],"mappings":"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","sourcesContent":["import { AbstractParameterControllerWidget, ControllerValidation } from '@engine/controller';\nimport { FrListener, shortcut } from '@engine/core';\nimport { AbsoluteLayout, DefaultLayout, Tab } from '@fui/core';\nimport { AbstractParameterCellControllerWidget } from '../../cell_controller.abstract';\nimport { AbstractCellControllerHoc } from '../cell_controller_hoc.abstract';\nimport './cell_controller_hoc.indirect.less';\n\n\n/**\n * 非直接显示控件\n */\n@shortcut()\nexport class IndirectCellController extends AbstractCellControllerHoc {\n    public static xtype = 'report.main.table_cell.controller.indirect';\n\n    public static EVENT_OPEN = 'EVENT_OPEN';\n\n    public props: AbstractCellControllerHoc['props'] = {\n        baseCls: 'report-main-table-cell-controller-indirect',\n        el: {},\n        width: 0,\n        height: 0,\n        fontSize: 12,\n        slient: false,\n        shouldHideSelectFrame: <() => boolean>BI.emptyFn,\n    }\n\n    private controller: AbstractParameterControllerWidget | AbstractParameterCellControllerWidget;\n\n    private tip: AbsoluteLayout;\n\n    private tab: Tab;\n\n    private seleciontMarker: DefaultLayout;\n    private hightLightBorder: DefaultLayout;\n\n    private controllerWrapper?: AbsoluteLayout;\n\n    public render() {\n        const listeners: FrListener[] = this.options.el.listeners || [];\n\n        const listener = {\n            eventName: 'EVENT_CHANGE',\n            action: () => {\n                this.watermark?.setVisible(!this.checkValueNotEmpty(this.controller.getValue()));\n            },\n        };\n\n        listeners.push(listener);\n\n        this.controller = BI.createWidget({\n            ...this.options.el,\n            listeners: this.options.slient ? [listener] : listeners,\n            xlisteners: listeners,\n        });\n\n        return {\n            type: BI.Tab.xtype,\n            ref: (ref: Tab) => {\n                this.tab = ref;\n            },\n            showIndex: 'inactive',\n            cardCreator: (v: string) => {\n                switch (v) {\n                    case 'active':\n                        return {\n                            type: BI.AbsoluteLayout.xtype,\n                            ref: (ref: AbsoluteLayout) => {\n                                this.controllerWrapper = ref;\n                            },\n                            items: [{\n                                el: this.controller,\n                                top: 0,\n                                left: 0,\n                                bottom: 0,\n                                right: 0,\n                            }],\n                        };\n                    case 'inactive':\n                    default:\n                        return {\n                            type: BI.AbsoluteLayout.xtype,\n                            items: [{\n                                el: {\n                                    ...this.options.el,\n                                    ref: (ref: DefaultLayout) => {\n                                        this.seleciontMarker = ref;\n                                    },\n                                    disabled: false,\n                                    invisible: true,\n                                    width: this.options.width - 2,\n                                    height: this.options.height - 2,\n                                    cls: 'cell-selected',\n                                    type: BI.DefaultLayout.xtype,\n                                },\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                            }, this.createWatermark(), {\n                                el: {\n                                    type: BI.AbsoluteLayout.xtype,\n                                    invisible: true,\n                                    ref: (ref: AbsoluteLayout) => {\n                                        this.tip = ref;\n                                    },\n                                    items: [{\n                                        el: {\n                                            ...this.options.el,\n                                            ref: (ref: DefaultLayout) => {\n                                                this.hightLightBorder = ref;\n                                            },\n                                            disabled: false,\n                                            width: this.options.width - 2,\n                                            height: this.options.height - 2,\n                                            cls: 'bi-high-light-border',\n                                            type: BI.DefaultLayout.xtype,\n                                        },\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                    }, {\n                                        el: {\n                                            cls: 'cell-edit-tip',\n                                            iconWidth: 16,\n                                            iconHeight: 16,\n                                            width: 16,\n                                            height: 16,\n                                            type: BI.IconButton.xtype,\n                                            stopPropagation: true,\n                                            handler: () => {\n                                                this.fireEvent(IndirectCellController.EVENT_OPEN);\n                                            },\n                                        },\n                                        top: 0,\n                                        right: 0,\n                                    }],\n                                },\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                            }],\n                        };\n                }\n            },\n        };\n    }\n\n    public mounted() {\n        this.element.on('mouseenter', () => {\n            if (this.isActive()) return;\n\n            // 每次mouseenter都刷新状态\n            const state = !this.isControllerUnusalState();\n\n            this.tip.setVisible(state);\n\n            this.handleControllerByState(state);\n        });\n\n        this.element.on('mouseleave', () => {\n            this.tip.invisible();\n        });\n    }\n\n    /**\n     * 控件是否被挂载\n     */\n    private isControllerRegistered() {\n        return this.controllerWrapper ? this.controllerWrapper.hasWidget('0') : false;\n    }\n\n    /**\n     * 根据状态挂载或者不挂载控件\n     * @param state 状态\n     */\n    private handleControllerByState(state: boolean) {\n        if (!state) {\n            this.controller.isolate();\n\n            return;\n        }\n\n        if (!this.isControllerRegistered()) {\n            this.controllerWrapper?.addWidget(this.controller);\n        }\n    }\n\n    public setEnable(enable: boolean): void {\n        this.controller.setEnable(enable);\n\n        this.handleControllerByState(enable);\n    }\n\n    public setVisible(visible: boolean): void {\n        this.controller.setVisible(visible);\n\n        this.handleControllerByState(visible);\n    }\n\n    public getValue() {\n        return this.controller ? this.controller.getValue() : this.options.el.value;\n    }\n\n    public setValue(v: string) {\n        // TODO:这边是beforeRender导致的bug，临时加个trycatch\n        try {\n            this.controller\n                ? this.controller.setValue(v)\n                : this.options.el.value = v;\n        } catch (e) {}\n    }\n\n    public postGetValidation() {\n        return this.controller.postGetValidation() || {\n            result: true,\n        };\n    }\n\n    public postValidateAndToast() {\n        return this.controller.postValidateAndToast() || true;\n    }\n\n    public preGetValidation() {\n        return this.controller.preGetValidation() || {\n            result: true,\n        };\n    }\n\n    public reset() {\n        this.controller.reset();\n    }\n\n    public async setControllerValue(v: string) {\n        this.controller\n            ? await this.controller.setControllerValue(v)\n            : this.options.el.value === v || '';\n    }\n\n    public active() {\n        // 如果控件状态不正常，则不切换至active状态\n        if (this.isControllerUnusalState()) {\n            return;\n        }\n\n        this.tab.setSelect('active');\n\n        this.controller.focus();\n    }\n\n    public inactive() {\n        this.tab.setSelect('inactive');\n    }\n\n    public isActive() {\n        return this.tab.getSelect() === 'active';\n    }\n\n    public setText() {}\n\n    /**\n     * 对非直接显示控件进行resize\n     * 修复 https://work.fineres.com/browse/REPORT-73661 引入\n     * @param width\n     * @param height\n     */\n    public resize(width: number, height: number) {\n        this.controller.resize(width, height);\n\n        this.tab.setHeight(height);\n        this.tab.setWidth(width);\n\n        this.seleciontMarker.setWidth(width - 2);\n        this.seleciontMarker.setHeight(height - 2);\n\n        this.hightLightBorder.setWidth(width - 2);\n        this.hightLightBorder.setHeight(height - 2);\n    }\n\n    public reloadControlAttr() {\n        // TODO:这边是beforeRender导致的bug，临时加个trycatch\n        try {\n            this.controller.reloadControlAttr();\n        } catch (e) {}\n    }\n\n    public setSeleted(v: boolean) {\n        /** 如果设置了selectFrame为true, 那么在选择cell的时候不将selectionMark设置为显示*/\n        if (this.options.shouldHideSelectFrame()) return;\n\n        this.seleciontMarker.setVisible(v);\n    }\n\n    public hideHightlightBorder() {\n        this.seleciontMarker.setVisible(false);\n    }\n\n    /**\n     * 查看控件是否是非正常状态\n     */\n    private isControllerUnusalState() {\n        return this.controllerWrapper\n            ? !this.isControllerRegistered()\n            : !(this.controller.isEnabled() && this.controller.isVisible());\n    }\n\n    public setStyle() {}\n\n    public getValidation(): ControllerValidation {\n        if (this.isControllerUnusalState()) {\n            return {\n                result: true,\n            };\n        }\n\n        return super.getValidation();\n    }\n\n    public getDependenceValue() {\n        // TODO:这边是beforeRender导致的bug，临时加个trycatch\n        try {\n            return this.controller instanceof AbstractParameterCellControllerWidget ? this.controller.getDependenceValue() : this.controller.getValue();\n        } catch (e) {}\n    }\n}\n"]}