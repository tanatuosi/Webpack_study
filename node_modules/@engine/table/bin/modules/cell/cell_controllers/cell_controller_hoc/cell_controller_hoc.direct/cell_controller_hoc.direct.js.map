{"version":3,"file":"cell_controller_hoc.direct.js","sourceRoot":"","sources":["../../../../../../src/modules/cell/cell_controllers/cell_controller_hoc/cell_controller_hoc.direct/cell_controller_hoc.direct.ts"],"names":[],"mappings":"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","sourcesContent":["import { AbstractParameterControllerWidget, ControllerValidation } from '@engine/controller';\nimport { FrListener, shortcut } from '@engine/core';\nimport { AbsoluteLayout, Label } from '@fui/core';\nimport { AbstractParameterCellControllerWidget } from '../../cell_controller.abstract';\nimport { AbstractCellControllerHoc } from '../cell_controller_hoc.abstract';\nimport './cell_controller_hoc.direct.less';\n\n/**\n * 直接显示控件\n */\n@shortcut()\nexport class DirectCellController extends AbstractCellControllerHoc {\n    public static xtype = 'report.main.table_cell.controller.direct';\n\n    public props: AbstractCellControllerHoc['props'] & {\n        text: string;\n    } = {\n        baseCls: 'report-main-table-cell-controller-direct',\n        el: {},\n        width: 0,\n        height: 0,\n        fontSize: 12,\n        slient: false,\n        text: '',\n        shouldHideSelectFrame: <() => boolean>BI.emptyFn,\n    }\n\n    private controller: AbstractParameterControllerWidget | AbstractParameterCellControllerWidget;\n\n    private label?: Label;\n\n    private adapter?: AbsoluteLayout;\n\n    public render() {\n        const listeners: FrListener[] = this.options.el.listeners || [];\n\n        const listener = {\n            eventName: 'EVENT_CHANGE',\n            action: () => {\n                this.watermark?.setVisible(!this.checkValueNotEmpty(this.controller.getValue()));\n            },\n        };\n\n        listeners.push(listener, {\n            eventName: 'afterinit',\n            action: () => {\n                this.initLabelLayer();\n            },\n        });\n\n        return {\n            type: BI.BasicButton.xtype,\n            render: () => {\n                return {\n                    ...this.options.el,\n                    xlisteners: listeners,\n                    listeners: this.options.slient ? [listener] : listeners,\n                    ref: (ref: AbstractParameterCellControllerWidget) => {\n                        this.controller = ref;\n                    },\n                };\n            },\n            handler: () => {\n                this.active();\n            },\n        };\n    }\n\n    private initLabelLayer() {\n        if (this.adapter) return;\n\n        const adapter = this.controller.getAdapter();\n\n        if (!adapter) return;\n\n        BI.createWidget({\n            type: BI.AbsoluteLayout.xtype,\n            element: adapter.element,\n            items: [{\n                el: {\n                    type: BI.AbsoluteLayout.xtype,\n                    ref: (ref: AbsoluteLayout) => {\n                        this.adapter = ref;\n                    },\n                    items: [\n                        {\n                            el: {\n                                type: BI.Label.xtype,\n                                ref: (ref: Label) => {\n                                    this.label = ref;\n                                },\n                                cls: 'bi-card',\n                                text: this.options.text,\n                                textAlign: 'left',\n                            },\n                            top: 1,\n                            bottom: 1,\n                            left: 1,\n                            right: 1,\n                        },\n                        this.createWatermark(),\n                    ],\n                },\n                top: 0,\n                bottom: 0,\n                left: 0,\n                right: 0,\n            }],\n        });\n    }\n\n    public getValue() {\n        return this.controller.getValue();\n    }\n\n    public setValue(...args: any[]) {\n        // TODO:这边是beforeRender导致的bug，临时加个trycatch\n        try {\n            this.controller.setValue(...args);\n        } catch (e) {}\n    }\n\n    public postGetValidation() {\n        return this.controller.postGetValidation();\n    }\n\n    public postValidateAndToast() {\n        return this.controller.postValidateAndToast();\n    }\n\n    public preGetValidation() {\n        return this.controller.preGetValidation();\n    }\n\n    public reset() {\n        this.controller.reset();\n    }\n\n    public async setControllerValue(...args: any[]) {\n        await this.controller.setControllerValue(...args);\n    }\n\n    public active() {\n        this.adapter?.invisible();\n\n        this.controller.focus();\n    }\n\n    public inactive() {\n        this.adapter?.visible();\n    }\n\n    public isActive() {\n        return this.adapter\n            ? !this.adapter.isVisible()\n            : false;\n    }\n\n    public setText(v: string) {\n        this.label?.setText(v);\n        this.options.text = v;\n    }\n\n    public reloadControlAttr() {\n        // TODO:这边是beforeRender导致的bug，临时加个trycatch\n        try {\n            this.controller.reloadControlAttr();\n        } catch (e) {}\n    }\n\n    public setSeleted(v: boolean) {\n        /** 如果设置了selectFrame为true, 那么在选择cell的时候不添加选中样式 */\n        if (this.options.shouldHideSelectFrame()) return;\n\n        v\n            ? this.element.addClass('highlight-border')\n            : this.hideHightlightBorder();\n    }\n\n    public hideHightlightBorder() {\n        this.element.removeClass('highlight-border');\n    }\n\n    public setStyle() {}\n\n    // FIXME: 现在报错\"input输入框在不可见下不能blur\"，先trycatch处理一下\n    public blur(): void {\n        try {\n            this.controller.blur();\n        } catch (e) {}\n    }\n\n    /**\n     * 对直接显示控件进行resize\n     * 修复 https://work.fineres.com/browse/REPORT-73661 引入\n     * @param width\n     * @param height\n     */\n    public resize(width: number, height: number) {\n        this.controller.resize(width, height);\n    }\n\n    public getValidation(): ControllerValidation {\n        if (!this.controller.isEnabled() || !this.controller.isVisible()) {\n            return {\n                result: true,\n            };\n        }\n\n        return super.getValidation();\n    }\n\n    public getDependenceValue() {\n        // TODO:这边是beforeRender导致的bug，临时加个trycatch\n        try {\n            return this.controller instanceof AbstractParameterCellControllerWidget ? this.controller.getDependenceValue() : this.controller.getValue();\n        } catch (e) {}\n    }\n}\n"]}