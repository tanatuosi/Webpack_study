{"version":3,"file":"table.cell_error_tip_manager.js","sourceRoot":"","sources":["../../src/modules/table.cell_error_tip_manager.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAE9C;;GAEG;AACH,MAAM,OAAO,mBAAoB,SAAQ,aAAqB;IAGnD,OAAO;QACV,KAAK,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED;;OAEG;IACI,KAAK;QACR,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACjC,MAAM,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,KAAK,EAAE,CAAC;IAClB,CAAC;IAED;;;;;;OAMG;IACI,cAAc,CAAC,EAAU,EAAE,IAAY,EAAE,eAO/C;QACG,MAAM,MAAM,GAAW,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QAEhD,IAAI,CAAC,MAAM;YAAE,OAAO;QAEpB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC;QAE1C,kBAAkB;QAClB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,eAAe,CAAC;QAClE,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrC,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAEvC,gDAAgD;QAChD,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE;YAC5C,OAAO,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;SAC3F;QAED;;;WAGG;QACH,MAAM,gBAAgB,GAAG,KAAK,GAAG,UAAU,GAAG,CAAC,CAAC;QAChD,IAAI,gBAAgB,EAAE;YAClB,MAAM,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;YAEhC,aAAa;YACb,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;SACrC;QAED,0CAA0C;QAC1C,OAAO,GAAG,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAC9E,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC;IACnE,CAAC;;AAnEa,wBAAI,GAAG,WAAW,CAAC","sourcesContent":["import { Label, Widget } from '@fui/core';\nimport { Bounds } from '@fui/sheet/types';\nimport { WidgetManager } from '@engine/utils';\n\n/**\n * 管理所有报错单元格的标签\n */\nexport class CellErrorTipManager extends WidgetManager<Widget> {\n    public static NAME = 'ERROR_TIP';\n\n    public destroy() {\n        super.destroy();\n    }\n\n    public update() {\n        this.destroy();\n    }\n\n    /**\n     * 清除字典\n     */\n    public clear() {\n        this.controllerDict.forEach(widget => {\n            widget.destroy();\n        });\n\n        super.clear();\n    }\n\n    /**\n     * 调整错误消息的显示位置以及宽度\n     * @param id\n     * @param cell\n     * @param currentViewPort\n     * @returns\n     */\n    public adjustErrorTip(id: string, cell: Bounds, currentViewPort: {\n        left: number;\n        top: number;\n        right: number;\n        bottom: number;\n        width: number;\n        height: number;\n    }) {\n        const widget = <Label> this.getWidgetByName(id);\n        \n        if (!widget) return;\n        \n        let offsetX = cell.width + 1, offsetY = 0;\n\n        /** 得到当前的视窗界限信息 */\n        const { right, bottom, top, width: sheetWidth } = currentViewPort;\n        const width = widget.element.width();\n        const height = widget.element.height();\n\n        /** 如果cell的右边位置不够， 那么根据上下部分的空间设置错误消息是位于上部还是下部 */\n        if ((cell.x || 0) + cell.width + width > right) {\n            offsetY = bottom - (cell.y || 0) - cell.height > (cell.y || 0) - top ? height : -height;\n        }\n\n        /**\n         * 暂时设定错误消息需要调整宽度的条件是大于整个sheet宽度的一半时，\n         * 需要一定的测试来确定界限是多少才最美观，FineUI是定死的500\n         */\n        const isNeedAdaptWidth = width > sheetWidth / 2;\n        if (isNeedAdaptWidth) {\n            widget.setWidth(sheetWidth / 2);\n\n            /** 设置提示信息 */\n            widget.setTitle(widget.getText());\n        }\n\n        /** 开始对错误消息进行偏移, 如果y方向没有偏移，那么说明不会进行位置调整 */\n        offsetX = isNeedAdaptWidth ? cell.width - sheetWidth / 2 : cell.width - width;\n        offsetY && widget.element.css({ left: offsetX, top: offsetY });\n    }\n}\n"]}