import { WidgetManager } from '@engine/utils';
/**
 * 管理所有报错单元格的标签
 */
export class CellErrorTipManager extends WidgetManager {
    destroy() {
        super.destroy();
    }
    update() {
        this.destroy();
    }
    /**
     * 清除字典
     */
    clear() {
        this.controllerDict.forEach(widget => {
            widget.destroy();
        });
        super.clear();
    }
    /**
     * 调整错误消息的显示位置以及宽度
     * @param id
     * @param cell
     * @param currentViewPort
     * @returns
     */
    adjustErrorTip(id, cell, currentViewPort) {
        const widget = this.getWidgetByName(id);
        if (!widget)
            return;
        let offsetX = cell.width + 1, offsetY = 0;
        /** 得到当前的视窗界限信息 */
        const { right, bottom, top, width: sheetWidth } = currentViewPort;
        const width = widget.element.width();
        const height = widget.element.height();
        /** 如果cell的右边位置不够， 那么根据上下部分的空间设置错误消息是位于上部还是下部 */
        if ((cell.x || 0) + cell.width + width > right) {
            offsetY = bottom - (cell.y || 0) - cell.height > (cell.y || 0) - top ? height : -height;
        }
        /**
         * 暂时设定错误消息需要调整宽度的条件是大于整个sheet宽度的一半时，
         * 需要一定的测试来确定界限是多少才最美观，FineUI是定死的500
         */
        const isNeedAdaptWidth = width > sheetWidth / 2;
        if (isNeedAdaptWidth) {
            widget.setWidth(sheetWidth / 2);
            /** 设置提示信息 */
            widget.setTitle(widget.getText());
        }
        /** 开始对错误消息进行偏移, 如果y方向没有偏移，那么说明不会进行位置调整 */
        offsetX = isNeedAdaptWidth ? cell.width - sheetWidth / 2 : cell.width - width;
        offsetY && widget.element.css({ left: offsetX, top: offsetY });
    }
}
CellErrorTipManager.NAME = 'ERROR_TIP';
//# sourceMappingURL=table.cell_error_tip_manager.js.map