import { PopupHandler } from '../handler/handler.popup';
/**
 * 行列对象
 */
export class TableRowColumn {
    constructor(externalContext, opts) {
        this.externalContext = externalContext;
        this.index = opts.index;
        this.size = opts.size;
        this.unifiedPosition = opts.unifiedPosition;
    }
    getWidth() {
        return -1;
    }
    setWidth(_width) { }
    getHeight() {
        return -1;
    }
    setHeight(_height) { }
    /**
     * 获取行/列索引
     */
    getIndex() {
        return this.index;
    }
    /**
     * 设置行/列所有单元格样式
     * @param opts 样式
     */
    setStyle(opts) {
        this.externalContext.emitCellEvent('CELL_SET_STYLE', Object.assign({ style: opts }, this.getUnifiedPosition()));
    }
    /**
     * 设置行/列所有单元格提示
     * @param opts 弹窗选项
     */
    showToolTip(opts) {
        if (!opts.show)
            return;
        const { content, style } = opts;
        this.externalContext.addHandler(PopupHandler, {
            position: this.getUnifiedPosition(),
            scopeType: 'rowcolumn',
            body: content === null || content === void 0 ? void 0 : content.text,
            header: content === null || content === void 0 ? void 0 : content.header,
            image: content === null || content === void 0 ? void 0 : content.image,
            style,
        });
    }
}
//# sourceMappingURL=table.api_row_column.abstract.js.map