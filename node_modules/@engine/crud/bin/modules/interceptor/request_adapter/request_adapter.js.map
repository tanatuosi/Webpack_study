{"version":3,"file":"request_adapter.js","sourceRoot":"","sources":["../../../../src/modules/interceptor/request_adapter/request_adapter.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,sBAAsB;IAAnC;QACY,gBAAW,GAAG,IAAI,GAAG,EAAoB,CAAC;IAetD,CAAC;IAbU,GAAG,CAAC,GAAW,EAAE,OAA8C;QAClE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACvC,CAAC;IAEM,MAAM,CAAC,QAAuB;QACjC,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,EAAE,CAAC;QACtC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,OAAO,EAAE;YACT,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC5B;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;CACJ;AAED,MAAM,CAAC,MAAM,sBAAsB,GAAG,IAAI,sBAAsB,EAAE,CAAC","sourcesContent":["import { AxiosResponse } from 'axios';\n\nexport class RequestAdapterProvider {\n    private adapterDict = new Map<string, Function>();\n\n    public set(url: string, handler: (res: AxiosResponse) => AxiosResponse) {\n        this.adapterDict.set(url, handler);\n    }\n\n    public handle(response: AxiosResponse): AxiosResponse {\n        const url = response.config.url || '';\n        const handler = this.adapterDict.get(url);\n        if (handler) {\n            return handler(response);\n        }\n\n        return response;\n    }\n}\n\nexport const requestAdapterProvider = new RequestAdapterProvider();\n"]}