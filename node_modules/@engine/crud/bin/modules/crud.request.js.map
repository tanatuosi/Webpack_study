{"version":3,"file":"crud.request.js","sourceRoot":"","sources":["../../src/modules/crud.request.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,oBAAoB,EAAE,eAAe,EAAE,eAAe,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAErG,IAAI,eAAe,GAAqB,SAAS,CAAC;AAElD,kBAAkB;AAClB,IAAI,aAAa,GAAY,KAAK,CAAC;AAEnC;;GAEG;AACH,MAAM,UAAU,OAAO;IACnB,OAAO,CAAC,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC;AACnD,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,YAAY;IACxB,mDAAmD;IACnD,uDAAuD;IACvD,oGAAoG;IACpG,eAAe,CAAC,eAAe,CAAC,CAAC;AACrC,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,iBAAiB;IAC7B,IAAI,CAAC,eAAe,EAAE;QAClB,OAAO;KACV;IAED,MAAM,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;IAElC,WAAW,CAAC,SAAS,EAAE;QACnB,IAAI,EAAE;YACF,MAAM,EAAE;gBACJ,IAAI,EAAE,eAAe,CAAC,OAAO,EAAE;gBAC/B,MAAM,EAAE,cAAc,CAAC,OAAO,EAAE;gBAChC,OAAO,EAAE,cAAc,CAAC,OAAO,EAAE,GAAG,eAAe,CAAC,OAAO,EAAE;gBAC7D,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,uBAAuB,CAAC;aACvD;SACJ;KACJ,CAAC,CAAC;IAEH,eAAe,GAAG,SAAS,CAAC;IAE5B,OAAO;AACX,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,aAAa,CAAC,GAAW,EAAE,UAA+C,EAAE,MAAM,GAAG,OAAO;IACxG,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACjD,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC;IACvB,IAAI,MAAM,KAAK,OAAO;QAAE,aAAa,GAAG,IAAI,CAAC;IAC7C,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;IAC1B,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;IAC1B,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IACjC,MAAM,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;SACxB,OAAO,CAAC,QAAQ,CAAC,EAAE;QAChB,MAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,KAAK,EAAE;YACP,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAC/C,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC;YACpB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;YAClB,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SAC9B;IACL,CAAC,CAAC,CAAC;IACP,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACrC,SAAS,CAAC,MAAM,EAAE,CAAC;IACnB,SAAS,CAAC,MAAM,EAAE,CAAC;AACvB,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,oBAAoB;IAChC,OAAO,aAAa,CAAC;AACzB,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,kBAAkB;IAC9B,aAAa,GAAG,KAAK,CAAC;AAC1B,CAAC","sourcesContent":["import { CancelToken } from 'axios';\nimport { FINE_AUTH_TOKEN_NAME, getCookieByName, requestGetByXHR, requestPost } from './crud.service';\n\nlet startRenderTime: Date | undefined = undefined;\n\n// 判断使用_self方式导出场景\nlet isAfterBySelf: boolean = false;\n\n/**\n * 用户是否登入\n */\nexport function isLogin(): boolean {\n    return !!getCookieByName(FINE_AUTH_TOKEN_NAME);\n}\n\n/**\n * 关闭session\n */\nexport function closeSession() {\n    // KERNEL-1254 当页面刷新时，unload事件中使用axios发送请求会被cancel掉\n    // 灵感来源：https://juejin.im/post/5b21c61cf265da6e5415297f\n    // 官方文档推荐XMLHttpRequest或者image：https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon\n    requestGetByXHR('session/close');\n}\n\n/**\n * 页面性能埋点\n */\nexport function recordConsumption(): void {\n    if (!startRenderTime) {\n        return;\n    }\n\n    const stopRenderTime = new Date();\n\n    requestPost('consume', {\n        data: {\n            render: {\n                time: startRenderTime.getTime(),\n                finish: stopRenderTime.getTime(),\n                consume: stopRenderTime.getTime() - startRenderTime.getTime(),\n                memory: BI.get(performance, 'memory.usedJSHeapSize'),\n            },\n        },\n    });\n\n    startRenderTime = undefined;\n\n    return;\n}\n\n/**\n * post传参\n * @param url 地址\n * @param parameters 参数\n * @param target 目标\n */\nexport function openUrlByPost(url: string, parameters: {[key: string]: string | undefined}, target = '_self') {\n    const temp_form = document.createElement('form');\n    temp_form.action = url;\n    if (target === '_self') isAfterBySelf = true;\n    temp_form.target = target;\n    temp_form.method = 'post';\n    temp_form.style.display = 'none';\n    Object.keys(parameters || {})\n        .forEach(paramKey => {\n            const value = parameters[paramKey];\n            if (value) {\n                const opt = document.createElement('textarea');\n                opt.name = paramKey;\n                opt.value = value;\n                temp_form.appendChild(opt);\n            }\n        });\n    document.body.appendChild(temp_form);\n    temp_form.submit();\n    temp_form.remove();\n}\n\n/**\n * 查看是否为_self open之后\n * @returns boolean\n */\nexport function checkIfIsAfterBySelf() {\n    return isAfterBySelf;\n}\n\n/**\n * 重置_self open状态\n */\nexport function resetIsAfterBySelf() {\n    isAfterBySelf = false;\n}\n\nexport interface CrudReqOpts {\n    url?: string;\n    type?: 'GET' | 'POST';\n    data?: any;\n    headers?: {\n        [key: string]: string;\n    };\n    noProgress?: boolean;\n    params?: CrudParams;\n    cancelToken?: CancelToken;\n    baseURL?: string;\n    encoder?: (v: any) => string;\n}\n\nexport interface CrudParams {\n    [key: string]: string | number | boolean | { [key: string]: any } | undefined;\n}\n"]}