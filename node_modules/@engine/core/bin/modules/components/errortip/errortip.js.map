{"version":3,"file":"errortip.js","sourceRoot":"","sources":["../../../../src/modules/components/errortip/errortip.ts"],"names":[],"mappings":"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","sourcesContent":["import { Segment } from '@fui/core';\nimport { shortcut, store } from '../../core.service';\nimport { ReportHtml } from '../report_html/html';\nimport './errortip.less';\nimport { ErrorTipModel, ErrorTipTab } from './errortip.model';\n\nexport interface ErrorResult{\n    errorCode: string,\n    errorMsg: string,\n    errorTip: string,\n    solution: string,\n    exception: string,\n}\n\n@shortcut()\n@store(ErrorTipModel)\nexport class ErrorTip extends BI.Widget {\n    public static xtype = 'report.components.error_tip';\n\n    public props: {\n        baseCls: string;\n    } & ErrorResult = {\n        baseCls: 'report-main-components-error-pane bi-user-select-enable',\n        errorCode: '',\n        errorMsg: '',\n        errorTip: '',\n        solution: '',\n        exception: '',\n    }\n    \n    private tabTrigger: Segment;\n\n    private labelSolution: ReportHtml;\n\n    private model: ErrorTipModel['model'];\n\n    private store: ErrorTipModel['store'];\n\n    public setup() {\n        const self = this;\n\n        return function () {\n            self.store.setErrorResult(self.options);\n\n            return {\n                type: BI.CenterAdaptLayout.xtype,\n                items: [\n                    {\n                        type: BI.VerticalLayout.xtype,\n                        vgap: 10,\n                        items: [\n                            {\n                                type: BI.CenterAdaptLayout.xtype,\n                                items: [{\n                                    type: BI.Icon.xtype,\n                                    height: 140,\n                                    width: 460,\n                                    cls: 'preview-fail-tip-background',\n                                }],\n                            },\n                            {\n                                type: BI.Label.xtype,\n                                cls: 'fail-tip-title bi-high-light bi-font-bold',\n                                text: BI.i18nText('Fine-Report_Preview_Fail_Title'),\n                            },\n                            {\n                                type: BI.Label.xtype,\n                                width: 460,\n                                whiteSpace: 'normal',\n                                cls: 'fail-tip-message bi-error',\n                                text: () => self.getErrorCodeText(self.model.errorResult.errorMsg),\n                            },\n                            {\n                                type: BI.VerticalLayout.xtype,\n                                cls: 'bi-border error-tips',\n                                items: [\n                                    {\n                                        type: BI.Segment.xtype,\n                                        height: 36,\n                                        ref: (ref: Segment) => {\n                                            self.tabTrigger = ref;\n                                        },\n                                        cls: 'fail-tip-message',\n                                        value: ErrorTipTab.SOLUTION,\n                                        items: [{\n                                            text: BI.i18nText('Fine-Report_Exception'),\n                                            value: ErrorTipTab.EXCEPTION,\n                                        }, {\n                                            text: BI.i18nText('Fine-Report_Solution'),\n                                            value: ErrorTipTab.SOLUTION,\n                                        }],\n                                        listeners: [{\n                                            eventName: 'EVENT_CHANGE',\n                                            action: () => {\n                                                self.store.changeTabPanel(self.tabTrigger.getValue()[0]);\n                                            },\n                                        }],\n                                    },\n                                    {\n                                        type: BI.Tab.xtype,\n                                        height: 150,\n                                        showIndex: () => self.model.showIndex,\n                                        cardCreator: (v: string) => {\n                                            switch (v) {\n                                                case ErrorTipTab.EXCEPTION:\n                                                    return {\n                                                        type: BI.VerticalLayout.xtype,\n                                                        scrolly: true,\n                                                        vgap: 10,\n                                                        hgap: 10,\n                                                        items: [{\n                                                            el: {\n                                                                type: BI.Text.xtype,\n                                                                text: () => self.model.errorResult.exception,\n                                                                lineHeight: 26,\n                                                            },\n                                                        }],\n                                                    };\n                                                case ErrorTipTab.SOLUTION:\n                                                default:\n                                                    return {\n                                                        type: BI.VerticalLayout.xtype,\n                                                        scrolly: true,\n                                                        vgap: 10,\n                                                        hgap: 10,\n                                                        items: [{\n                                                            el: {\n                                                                type: ReportHtml.xtype,\n                                                                ref: (ref: ReportHtml) => {\n                                                                    self.labelSolution = ref;\n                                                                },\n                                                                lineHeight: 26,\n                                                                text: BI.i18nText('Fine-Report_Preview_Fail_Tip'),\n                                                            },\n                                                        }],\n                                                    };\n                                            }\n                                        },\n                                    },\n\n                                ],\n                            },\n                        ],\n                    },\n                ],\n            };\n        };\n    }\n\n    public setErrorTexts(errorResult: ErrorResult) {\n        const { errorTip, solution } = errorResult;\n    \n        this.labelSolution.setText(solution || errorTip || BI.i18nText('Fine-Report_Preview_Fail_Tip'));\n    \n        this.store.setErrorResult(errorResult);\n    }\n\n    private getErrorCodeText(errorMsg: string) {\n        const text = errorMsg;\n\n        if (text.length > 500) {\n            return `${text.substring(0, 500)}...`;\n        }\n\n        return text;\n    }\n}\n\n/**\n * errorTip类装饰器\n * @returns Function\n */\nexport function errorTip() {\n    return function (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) {\n        const render = descriptor.value;\n\n        descriptor.value = function(this: Widget, ...args: any[]) {\n            let errorTipWidget: ErrorTip;\n\n            this.on('EVENT_SHOW_ERROR', (errorResult: ErrorResult) => {\n                errorTipWidget.setErrorTexts(errorResult);\n\n                errorTipWidget.visible();\n            });\n\n            return [\n                render.apply(this, ...args),\n                {\n                    type: BI.AbsoluteLayout.xtype,\n                    items: [{\n                        el: {\n                            type: ErrorTip.xtype,\n                            invisible: true,\n                            ref: (ref: ErrorTip) => {\n                                errorTipWidget = ref;\n                            },\n                            cls: 'bi-card',\n                        },\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                    }],\n                },\n            ];\n        };\n\n        return descriptor;\n    };\n}\n"]}