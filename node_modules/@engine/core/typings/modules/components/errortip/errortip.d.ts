import { Segment } from '@fui/core';
import { ReportHtml } from '../report_html/html';
import './errortip.less';
import { ErrorTipTab } from './errortip.model';
export interface ErrorResult {
    errorCode: string;
    errorMsg: string;
    errorTip: string;
    solution: string;
    exception: string;
}
export declare class ErrorTip extends BI.Widget {
    static xtype: string;
    props: {
        baseCls: string;
    } & ErrorResult;
    private tabTrigger;
    private labelSolution;
    private model;
    private store;
    setup(): () => {
        type: string;
        items: {
            type: string;
            vgap: number;
            items: ({
                type: string;
                items: {
                    type: string;
                    height: number;
                    width: number;
                    cls: string;
                }[];
                cls?: undefined;
                text?: undefined;
                width?: undefined;
                whiteSpace?: undefined;
            } | {
                type: string;
                cls: string;
                text: string;
                items?: undefined;
                width?: undefined;
                whiteSpace?: undefined;
            } | {
                type: string;
                width: number;
                whiteSpace: string;
                cls: string;
                text: () => string;
                items?: undefined;
            } | {
                type: string;
                cls: string;
                items: ({
                    type: string;
                    height: number;
                    ref: (ref: Segment) => void;
                    cls: string;
                    value: ErrorTipTab;
                    items: {
                        text: string;
                        value: ErrorTipTab;
                    }[];
                    listeners: {
                        eventName: string;
                        action: () => void;
                    }[];
                    showIndex?: undefined;
                    cardCreator?: undefined;
                } | {
                    type: string;
                    height: number;
                    showIndex: () => ErrorTipTab;
                    cardCreator: (v: string) => {
                        type: string;
                        scrolly: boolean;
                        vgap: number;
                        hgap: number;
                        items: {
                            el: {
                                type: string;
                                text: () => string;
                                lineHeight: number;
                            };
                        }[];
                    } | {
                        type: string;
                        scrolly: boolean;
                        vgap: number;
                        hgap: number;
                        items: {
                            el: {
                                type: string;
                                ref: (ref: ReportHtml) => void;
                                lineHeight: number;
                                text: string;
                            };
                        }[];
                    };
                    ref?: undefined;
                    cls?: undefined;
                    value?: undefined;
                    items?: undefined;
                    listeners?: undefined;
                })[];
                text?: undefined;
                width?: undefined;
                whiteSpace?: undefined;
            })[];
        }[];
    };
    setErrorTexts(errorResult: ErrorResult): void;
    private getErrorCodeText;
}
/**
 * errorTip类装饰器
 * @returns Function
 */
export declare function errorTip(): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor;
