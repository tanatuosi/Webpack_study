export interface Type<T> extends Function {
    new (...args: any[]): T;
}
/**
 * listeners 事件监听说明
 */
export interface FrListener {
    /**
     * 事件名
     * afterinit --> 初始化后
     * beforeedit --> 编辑前
     * afteredit --> 编辑后
     * stopedit --> 结束编辑
     * click --> 点击
     * nodeadd --> 节点生成
     * statechange --> 状态改变
     * change --> label控件独享事件
     */
    eventName: 'afterinit' | 'beforeedit' | 'afteredit' | 'stopedit' | 'click' | 'nodeadd' | 'statechange' | 'beforetopdf' | 'aftertopdf' | 'beforetoexcel' | 'aftertoexcel' | 'beforetoword' | 'aftertoword' | 'beforetoimage' | 'aftertoimage' | 'beforepdfprint' | 'afterpdfprint' | 'beforeprint' | 'afterprint' | 'afterload' | 'startload' | 'beforeflashprint' | 'afterflashprint' | 'beforeappletprint' | 'afterappletprint' | 'change' | string;
    /**
     * 事件处理	处理事件的 js 代码
     */
    action: Function;
    once?: boolean;
}
export declare type BackgroundType = 'PatternBackground' | 'ColorBackground' | 'TextureBackground' | 'ImageBackground' | 'GradientBackground';
export interface Background {
    backgroundType?: BackgroundType;
    color?: number;
    imgUrl?: string;
    layout?: number;
    direction?: number;
    begin?: number;
    startColor?: number;
    finish?: number;
    endColor?: number;
    foreground?: number;
    backgroundColor?: number;
    background?: string;
}
export interface ErrorResult {
    errorCode: string;
    errorMsg: string;
}
