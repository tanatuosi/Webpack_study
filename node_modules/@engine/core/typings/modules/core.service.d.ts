import type { Background } from './core.types';
export declare const shortcut: typeof import("@fui/core/dist/lib/core/decorator/decorator").shortcut, model: typeof import("@fui/core/dist/lib/core/decorator/decorator").model, store: typeof import("@fui/core/dist/lib/core/decorator/decorator").store, Model: typeof import("@fui/core/dist/lib/core/decorator/decorator").Model, provider: typeof import("@fui/core/dist/lib/core/decorator/decorator").provider;
/**
 * 转换背景配置为stylesheet
 * @param background 背景配置
 */
export declare function generateBackgroundStyle(background: Background): {
    [key: string]: any;
} | undefined;
export declare function warnWhenDeparture(name: string): void;
/**
 * departure触发装饰器
 */
export declare function departure(): (_target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor;
/**
 * 给控件render外包装basicButton
 */
export declare function click(): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor;
/**
 * resize方法的装饰方法
 * 如果宽高没有发生变化则不触发resize
 */
export declare function exResize(): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor;
/**
 * 将数字类color转换为十六进制颜色
 * @param color 颜色
 */
export declare function transformColor(color?: number | string): string;
export declare function getIconCls(iconInfo: {
    iconName: string;
    iconPosition: string;
    toolbarImage: string;
}): string;
/**
 * 找到最上层符合条件的父亲dom
 * @param filter 需要包含哪些条件
 * @returns boolean
 */
export declare function findTargetParent(filter?: (parent: $Window) => boolean): $Window;
/**
 * 判断是否是全屏状态
 */
export declare function isFullScreen(): boolean;
/**
 * 转换HTML部分标签的方法
 */
export declare function htmlDecode(v?: string): string;
