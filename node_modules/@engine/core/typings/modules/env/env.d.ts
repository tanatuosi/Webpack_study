import { Type } from '../core.types';
import { AbstractEnv, AbstractEnvJSON } from './env.abstract';
declare class ReportEnvProvider {
    static xtype: string;
    private env;
    $get(): {
        new (): {
            readonly Version: string;
            readonly FineServletURL: string;
            readonly ReqPrefix: string;
            readonly SessionID: string;
            readonly initParameters: {
                [key: string]: any;
            } | undefined;
            use(Env: Type<AbstractEnv>): void;
            assign(env: AbstractEnvJSON): void;
            isAssigned(): boolean;
            getInstance(): AbstractEnv;
            readonly servletURL: string;
        };
    };
    useEnv(value: AbstractEnvJSON): void;
}
export declare const envProvider: InstanceType<ReturnType<ReportEnvProvider['$get']>>;
export {};
