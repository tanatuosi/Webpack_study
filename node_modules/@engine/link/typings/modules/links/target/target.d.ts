import { AbstractTarget } from './target.abstract';
import { DefaultTarget } from './target.default';
interface Type<T> extends Function {
    new (target: string, url: string, op: {
        [key: string]: any;
    }): T;
}
export declare class TargetProvider {
    private targetDict;
    get(target: string, url: string, op: {
        [key: string]: any;
    }): AbstractTarget;
    set(key: string, value: Type<AbstractTarget>): void;
    handle(target: string, url: string, op: {
        [key: string]: any;
    }): any;
    getImpl(): typeof DefaultTarget;
}
export declare const hyperLinkTargetProvider: TargetProvider;
export {};
