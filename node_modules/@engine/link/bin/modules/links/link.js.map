{"version":3,"file":"link.js","sourceRoot":"","sources":["../../../src/modules/links/link.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAExC,OAAO,EAAE,YAAY,EAAkB,MAAM,iBAAiB,CAAC;AAC/D,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AACnC,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAQ7C,MAAM,CAAC,MAAM,iBAAiB,GAAG;IAC7B,QAAQ,EAAE,SAAS;IACnB,UAAU,EAAE,YAAY;IACxB,KAAK,EAAE,OAAO;IACd,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,WAAW;IACtB,WAAW,EAAE,UAAU;IACvB,QAAQ,EAAE,UAAU;IACpB,YAAY,EAAE,aAAa;CAC9B,CAAC;AAGF,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAAxB;QAGY,oBAAe,GAAG,IAAI,GAAG,CAAqB;YAClD,CAAC,iBAAiB,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;YAChD,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;YAChD,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;YAC7C,CAAC,iBAAiB,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;YAClD,CAAC,iBAAiB,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;YACtD,CAAC,iBAAiB,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;SACvD,CAAC,CAAC;IAwBP,CAAC;IAtBU,IAAI;QACP,MAAM,QAAQ,GAAG,IAAI,CAAC;QAEtB,OAAO,MAAM,mBAAmB;YACrB,UAAU,CAA2B,EAA+C;oBAA/C,EAAE,IAAI,GAAG,EAAE,OAAoC,EAA/B,MAAM,cAAtB,QAAwB,CAAF;gBAC9D,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;gBAEzG,OAAO,IAAI,IAAI,CAAC,MAAW,EAAE,QAAQ,CAAC,CAAC;YAC3C,CAAC;YAEM,UAAU,CAAE,GAAW,EAAE,KAAyC,EAAE,QAAc;gBACrF,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YACjE,CAAC;SACJ,CAAC;IACN,CAAC;IAED,oBAAoB;IACb,UAAU,CAAE,IAAY,EAAE,KAA2B,EAAE,QAAc;QACxE,MAAM,WAAW,GAAG,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEpD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAC;IACpE,CAAC;CACJ,CAAA;AAjCiB,wBAAK,GAAG,sBAAsB,CAAC;AAD3C,kBAAkB;IADvB,QAAQ,EAAE;GACL,kBAAkB,CAkCvB;AAED,MAAM,CAAC,MAAM,mBAAmB,GAAyD,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;AAE5I;;;GAGG;AACH,MAAM,UAAU,sBAAsB,CAAC,eAA6B,EAAE,WAAiC,EAAE;IACrG,OAAO,eAAe;SACjB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QAChC,oBAAoB;SACnB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,UAAU,+BACvC,IAAI,EAAE,IAAI,CAAC,IAAI,IACZ,IAAI,CAAC,UAAU,KAClB,QAAQ,IACV,CAAC,CAAC;AACZ,CAAC","sourcesContent":["import { provider } from '@engine/core';\nimport { XHyperLink } from '../hyper_link.types';\nimport { AbstractLink, HyperLinkProps } from './abstract.link';\nimport { DownloadLink } from './download.link';\nimport { EmptyLink } from './empty.link';\nimport { HTMLLink } from './html.link';\nimport { JSLink } from './js.link';\nimport { MailLink } from './mail.link';\nimport { ParameterLink } from './parameter.link';\nimport { ViewletLink } from './viewlet.link';\n\ninterface Type<T, M extends HyperLinkProps> extends Function {\n    new (props: M, ...external: any[]): T\n}\n\ninterface LinkWidget { link: Type<AbstractLink, HyperLinkProps>, external?: any}\n\nexport const DEFAUTL_LINK_TYPE = {\n    WEB_LINK: 'weblink',\n    JAVASCRIPT: 'javascript',\n    EMAIL: 'email',\n    VIEWLET: 'viewlet',\n    PARAMETER: 'parameter',\n    CHART_POPUP: 'chartpop',\n    DOWNLOAD: 'download',\n    CHART_RELATE: 'chartRelate',\n};\n\n@provider()\nclass ReportLinkProvider {\n    public static xtype = 'report.link.provider';\n\n    private linkHandlerDict = new Map<string, LinkWidget>([\n        [DEFAUTL_LINK_TYPE.WEB_LINK, { link: HTMLLink }],\n        [DEFAUTL_LINK_TYPE.JAVASCRIPT, { link: JSLink }],\n        [DEFAUTL_LINK_TYPE.EMAIL, { link: MailLink }],\n        [DEFAUTL_LINK_TYPE.VIEWLET, { link: ViewletLink }],\n        [DEFAUTL_LINK_TYPE.PARAMETER, { link: ParameterLink }],\n        [DEFAUTL_LINK_TYPE.DOWNLOAD, { link: DownloadLink }],\n    ]);\n\n    public $get () {\n        const provider = this;\n\n        return class LinkHandlerProvider {\n            public getHandler<T extends HyperLinkProps>({ type = '', ...others }: T & { type?: string }): AbstractLink {\n                const { link: Link, external } = provider.linkHandlerDict.get(type) || { link: EmptyLink, external: {} };\n                \n                return new Link(others as T, external);\n            }\n\n            public setHandler (key: string, value: Type<AbstractLink, HyperLinkProps>, external?: any) {\n                provider.linkHandlerDict.set(key, { link: value, external });\n            }\n        };\n    }\n\n    // 对外提供，以键值对格式注册link\n    public addHandler (type: string, value: {[key: string]: any}, external?: any) {\n        const linkHandler = BI.inherit(AbstractLink, value);\n\n        this.linkHandlerDict.set(type, { link: linkHandler, external });\n    }\n}\n\nexport const linkHandlerProvider: InstanceType<ReturnType<ReportLinkProvider['$get']>> = BI.Providers.getProvider(ReportLinkProvider.xtype);\n\n/**\n * 实例化 XHyperLink\n * @param javaScriptGroup XHyperLink数组\n */\nexport function instantiateXHyperLinks(javaScriptGroup: XHyperLink[], external: {[key: string]: any} = {}): AbstractLink[] {\n    return javaScriptGroup\n        .filter(link => link.javaScript)\n        // todo 目前后端还没给，之后适配\n        .map(link => linkHandlerProvider.getHandler({\n            name: link.name,\n            ...link.javaScript,\n            external,\n        }));\n}\n"]}