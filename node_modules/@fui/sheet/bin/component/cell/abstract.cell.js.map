{"version":3,"file":"abstract.cell.js","sourceRoot":"","sources":["../../../src/component/cell/abstract.cell.ts"],"names":[],"mappings":"AAOA,MAAM,OAAgB,YAAY;IAQ9B,YAAmB,KAAgB;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC7B,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;IAC5B,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;IAC5B,CAAC;CAqBJ","sourcesContent":["import { CellProps, CellStyle } from '../../../types';\r\n\r\nexport interface CellInterface {\r\n    copyText: () => string;\r\n    copyHtml: () => string;\r\n}\r\n\r\nexport abstract class AbstractCell implements CellInterface {\r\n    protected abstract _copyHtml(): string;\r\n    protected abstract _copyText(): string;\r\n    // protected abstract _renderContent(): Record<string, any>;\r\n\r\n    protected props: CellProps;\r\n    protected style: CellStyle;\r\n\r\n    public constructor(props: CellProps) {\r\n        this.props = props;\r\n        this.style = props.style;\r\n    }\r\n\r\n    public copyHtml(): string {\r\n        return this._copyHtml();\r\n    }\r\n\r\n    public copyText(): string {\r\n        return this._copyText();\r\n    }\r\n\r\n    // public renderContent(): Record<string, any> {\r\n    //     const { paddingLeft, paddingRight, paddingTop, paddingBottom } = this.style;\r\n    //     return {\r\n    //         type: 'absolute',\r\n    //         items: [\r\n    //             {\r\n    //                 el: this._renderContent(),\r\n    //                 top: paddingTop,\r\n    //                 bottom: paddingBottom,\r\n    //                 left: paddingLeft,\r\n    //                 right: paddingRight\r\n    //             }\r\n    //         ]\r\n    //     };\r\n    // }\r\n\r\n    // public renderBorder() {}\r\n\r\n    // public renderBackground() {}\r\n}\r\n"]}