{"version":3,"file":"table.js","sourceRoot":"","sources":["../../src/component/table.ts"],"names":[],"mappings":"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","sourcesContent":["import { Element, h } from './element';\r\nimport { DataProxy } from '../core';\r\nimport { initRenderer, Renderer, renderComponent } from '../renderer';\r\nimport { clamp, isPointOnLine, loadImage, getImageData, debounce } from '../utils';\r\nimport { Cell, Bounds, LineStyleType } from 'types';\r\nimport { Container } from './container';\r\n\r\nexport class Table {\r\n    // private overLayer: Grid;\r\n    public el: Element;\r\n    public renderer: Renderer;\r\n    public data: DataProxy;\r\n    public container: Container;\r\n\r\n    private cacheBorderSet: Set<string>;\r\n    private cacheBorderPosition: Set<string>;\r\n\r\n    public constructor(data: DataProxy, container: Container) {\r\n        this.el = h('div', 'sheet-table');\r\n        this.data = data;\r\n        this.container = container;\r\n        this.renderer = initRenderer(this.el, {\r\n            width: data.width + data.offset.offsetX,\r\n            height: data.height + data.offset.offsetY,\r\n        });\r\n    }\r\n\r\n    private reRender = (): void => {\r\n        this.renderGrid();\r\n        this.renderSequnce();\r\n        // REPORT-50075 如果冻结行滚动后，再点击收起/展开参数面板，render的时候冻结行边框会被遮挡，所以这里也做下renderFreeze\r\n        this.renderFreeze();\r\n    };\r\n\r\n    public render = (): void => {\r\n        this.renderStickers();\r\n        this.reRender();\r\n    };\r\n\r\n    public renderSequnce(): void {\r\n        const OffsetX = this.data.offset.offsetX,\r\n            OffsetY = this.data.offset.offsetY;\r\n        this.renderer.clear(0, 0, this.data.width + OffsetX, OffsetY);\r\n        this.renderer.clear(0, 0, OffsetX, this.data.height + OffsetY);\r\n        const cells = this.data.getSequnceCells();\r\n\r\n        this.clearBorderSet();\r\n        cells.forEach((cell): void => {\r\n            this.renderContent(cell);\r\n            this.renderBorder(cell);\r\n        });\r\n        this.clearBorderSet();\r\n    }\r\n\r\n    public refresh = (): void => {\r\n        this.clear();\r\n        this.renderGrid();\r\n    };\r\n\r\n    public resize = (): void => {\r\n        this.renderer.resize(this.data.width + this.data.offset.offsetX, this.data.height + this.data.offset.offsetY);\r\n    };\r\n\r\n    public scroll(scrollDeltaX: number, scrollDeltaY: number): void {\r\n        const deltaY = Math.ceil(isNaN(scrollDeltaY) ? 0 : scrollDeltaY),\r\n            deltaX = Math.ceil(isNaN(scrollDeltaX) ? 0 : scrollDeltaX);\r\n\r\n        /** 排除掉 deltaX、deltaY 都为 0 等情况 */\r\n        if (!(deltaX || deltaY)) return;\r\n\r\n        /**\r\n         * 如果是单方向滚动，在排除掉都为0的情况下，则有以下结论：\r\n         *   1、 deltaX和deltaY必不想等\r\n         *   2、其中一项必为0 => (deltaX === (deltaY || deltaX) || deltaY === (deltaX || deltaY))\r\n         *      (deltaY || deltaX)和(deltaX || deltaY)中的或运算符当作设置默认值用\r\n         */\r\n        const isSingalDirection = deltaX !== deltaY && (deltaX === (deltaY || deltaX) || deltaY === (deltaX || deltaY));\r\n\r\n        if (isSingalDirection) {\r\n            const _bounds = this.data.getRenderBounds(deltaY ? 'vertical' : 'horizontal');\r\n            const bounds = {\r\n                x: Math.ceil(_bounds.x),\r\n                y: Math.ceil(_bounds.y),\r\n                width: Math.ceil(_bounds.width),\r\n                height: Math.ceil(_bounds.height),\r\n            };\r\n\r\n            /** 计算能够复用、需要重新渲染等区域 */\r\n            const { cacheBounds, canvasBounds, renderBounds } = this.getReRenderBounds(deltaX, deltaY, bounds);\r\n            this.clip(bounds.x, bounds.y, bounds.width, bounds.height, (): void => {\r\n                this.drawSelf(\r\n                    cacheBounds.x,\r\n                    cacheBounds.y,\r\n                    canvasBounds.x,\r\n                    canvasBounds.y,\r\n                    canvasBounds.width,\r\n                    canvasBounds.height,\r\n                );\r\n                this.clip(renderBounds.x, renderBounds.y, renderBounds.width, renderBounds.height, (): void => {\r\n                    this.clear();\r\n                    this.rerenderBounds(renderBounds.x, renderBounds.y, renderBounds.width, renderBounds.height);\r\n                });\r\n            });\r\n            this.renderSequnce();\r\n            this.renderFreeze();\r\n        } else {\r\n            this.reRender();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据滚动信息计算出缓存区域、重新render的区域\r\n     * @param deltaX 在x方向上的滚动距离\r\n     * @param deltaY 在y方向上的滚动距离\r\n     * @param bounds 当前渲染的区域\r\n     * @returns\r\n     */\r\n    private getReRenderBounds(\r\n        deltaX: number,\r\n        deltaY: number,\r\n        bounds: Bounds,\r\n    ): {\r\n        cacheBounds: Bounds;\r\n        canvasBounds: Bounds;\r\n        renderBounds: Bounds;\r\n    } {\r\n        let cacheBounds, canvasBounds, renderBounds;\r\n        if (deltaY < 0) {\r\n            cacheBounds = {\r\n                x: bounds.x,\r\n                y: bounds.y,\r\n                width: bounds.width,\r\n                height: bounds.height + deltaY,\r\n            };\r\n            canvasBounds = {\r\n                x: bounds.x,\r\n                y: bounds.y - deltaY,\r\n                width: bounds.width,\r\n                height: bounds.height + deltaY,\r\n            };\r\n            renderBounds = {\r\n                x: bounds.x,\r\n                y: bounds.y,\r\n                width: bounds.width,\r\n                height: bounds.height - canvasBounds.height + 1, // 防止下滑时出现1px残留\r\n            };\r\n        }\r\n        if (deltaY > 0) {\r\n            const drawImageWidth = clamp(bounds.width - bounds.x, 0, bounds.width);\r\n            const drawImageHeight = clamp(bounds.height - bounds.y - deltaY, 0, bounds.height);\r\n            cacheBounds = {\r\n                x: bounds.x,\r\n                y: bounds.y + deltaY,\r\n                width: drawImageWidth,\r\n                height: drawImageHeight,\r\n            };\r\n            canvasBounds = {\r\n                x: bounds.x,\r\n                y: bounds.y,\r\n                width: drawImageWidth,\r\n                height: drawImageHeight,\r\n            };\r\n            renderBounds = {\r\n                x: bounds.x,\r\n                y: canvasBounds.y + canvasBounds.height,\r\n                width: bounds.width,\r\n                height: bounds.height - canvasBounds.height,\r\n            };\r\n        }\r\n        if (deltaX < 0) {\r\n            cacheBounds = {\r\n                x: bounds.x,\r\n                y: bounds.y,\r\n                width: bounds.width + deltaX,\r\n                height: bounds.height,\r\n            };\r\n            canvasBounds = {\r\n                x: bounds.x - deltaX,\r\n                y: bounds.y,\r\n                width: bounds.width + deltaX,\r\n                height: bounds.height,\r\n            };\r\n            renderBounds = {\r\n                x: bounds.x,\r\n                y: bounds.y,\r\n                width: bounds.width - canvasBounds.width + 1, // TODO: REPORT-23802 防止向左滑动时出现1px的残留, 后面看看有没有其他优化的方法\r\n                height: bounds.height,\r\n            };\r\n        }\r\n        if (deltaX > 0) {\r\n            const drawImageWidth = clamp(bounds.width - bounds.x - deltaX, 0, bounds.width);\r\n            const drawImageHeight = clamp(bounds.height - bounds.y, 0, bounds.height);\r\n            cacheBounds = {\r\n                x: bounds.x + deltaX,\r\n                y: bounds.y,\r\n                width: drawImageWidth,\r\n                height: drawImageHeight,\r\n            };\r\n            canvasBounds = {\r\n                x: bounds.x,\r\n                y: bounds.y,\r\n                width: drawImageWidth,\r\n                height: drawImageHeight,\r\n            };\r\n            renderBounds = {\r\n                x: canvasBounds.x + canvasBounds.width,\r\n                y: bounds.y,\r\n                width: bounds.width - canvasBounds.width,\r\n                height: bounds.height,\r\n            };\r\n        }\r\n\r\n        return { cacheBounds, canvasBounds, renderBounds };\r\n    }\r\n\r\n    private clip(x: number, y: number, width: number, height: number, cb: Function): void {\r\n        const { offsetX, offsetY } = this.data.offset;\r\n\r\n        this.renderer.clip(x + offsetX, y + offsetY, width, height, cb);\r\n    }\r\n\r\n    private clear(x?: number, y?: number, width?: number, height?: number): void {\r\n        const { offsetX, offsetY } = this.data.offset;\r\n\r\n        this.renderer.clear(x && x + offsetX, y && y + offsetY, width, height);\r\n    }\r\n\r\n    private drawSelf(sx: number, sy: number, dx: number, dy: number, w: number, h: number): void {\r\n        const { offsetX, offsetY } = this.data.offset;\r\n        this.renderer.drawSelf(sx + offsetX, sy + offsetY, dx + offsetX, dy + offsetY, w, h);\r\n    }\r\n\r\n    private renderFreeze() {\r\n        this.data.getFreezeBounds().forEach(({ x, y, width, height }) => {\r\n            if (width > 0 && height > 0) {\r\n                // 如果冻结区域区域不存在，则不处理\r\n                // widht 和 height 可能为0 或 underfined\r\n                const cells = this.data.getCellsInBounds(x, y, width, height);\r\n                this.clip(x, y, width, height, () => {\r\n                    this.clear();\r\n                    cells.forEach((cell: Cell) => {\r\n                        this.renderContent(cell);\r\n                    });\r\n                });\r\n                this.clip(x, y, width + 1, height + 1, () => {\r\n                    this.clearBorderSet();\r\n                    cells.forEach((cell: Cell) => {\r\n                        this.renderBorder(cell);\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private rerenderBounds(x, y, width, height): void {\r\n        // TODO: 避免重复画线的，需要考虑去掉的方法\r\n        this.data.spliteBounds(x, y, x + width, y + height).forEach(({ x, y, width, height }: Bounds) => {\r\n            if (width <= 0 || height <= 0) {\r\n                return;\r\n            }\r\n            this.clip(x, y, width, height, () => {\r\n                const cells = this.data.getCellsInBounds(x, y, width, height);\r\n                cells.forEach((cell: Cell) => {\r\n                    this.renderContent(cell);\r\n                });\r\n                this.clearBorderSet();\r\n                cells.forEach((cell: Cell) => {\r\n                    this.renderBorder(cell);\r\n                });\r\n            });\r\n        });\r\n        this.clearBorderSet();\r\n    }\r\n\r\n    private clearBorderSet() {\r\n        this.cacheBorderSet = new Set<string>();\r\n        this.cacheBorderPosition = new Set<string>();\r\n    }\r\n\r\n    private renderGrid(): void {\r\n        // REPORT-44227 display:none时，canvas宽高取不到导致clear失败,所以手动传入宽高\r\n        this.clear(0, 0, this.data.width, this.data.height);\r\n        this.rerenderBounds(0, 0, this.data.width, this.data.height);\r\n    }\r\n\r\n    private renderContent(cell: Cell): void {\r\n        if (cell.ci < this.data.view.colc && cell.ri < this.data.view.rowc) {\r\n            this.renderCellComponent(cell);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 渲染单个单元格\r\n     * @param quadrantBounds 所在象限的bounds\r\n     * @param cells 单元格对象们\r\n     */\r\n    public renderCell(cell: Cell) {\r\n        const targetCell = {\r\n            ...cell,\r\n            ...this.data.correctBounds(cell),\r\n        };\r\n\r\n        const quadrantBounds = this.data.getQuadrantBounds(cell.x, cell.y);\r\n\r\n        let belowCell = this.data.getCell(cell.ri + cell.rp + 1, cell.ci);\r\n\r\n        belowCell = {\r\n            ...belowCell,\r\n            ...this.data.correctBounds(belowCell),\r\n            borderStyle: belowCell.borderStyle ? { borderTop: belowCell.borderStyle.borderTop } : {},\r\n        };\r\n\r\n        let rightCell = this.data.getCell(cell.ri, cell.ci + cell.cp + 1);\r\n\r\n        rightCell = {\r\n            ...rightCell,\r\n            ...this.data.correctBounds(rightCell),\r\n            borderStyle: rightCell.borderStyle ? { borderTop: rightCell.borderStyle.borderLeft } : {},\r\n        };\r\n\r\n        this.clip(quadrantBounds.x, quadrantBounds.y, quadrantBounds.width, quadrantBounds.height, () => {\r\n            this.clear(targetCell.x, targetCell.y, targetCell.width, targetCell.height);\r\n            this.renderContent(targetCell);\r\n            this.renderCellBorder(targetCell);\r\n            this.renderCellBorder(belowCell);\r\n            this.renderCellBorder(rightCell);\r\n        });\r\n    }\r\n\r\n    private renderBorder(cell: Cell): void {\r\n        if (cell.ci < this.data.view.colc && cell.ri < this.data.view.rowc) {\r\n            this.renderCellBorder(cell);\r\n        }\r\n    }\r\n\r\n    private renderCellComponent(component): void {\r\n        const { width, height } = component;\r\n        if (width === 0 || height === 0) {\r\n            return;\r\n        }\r\n        component.x += this.data.offset.offsetX;\r\n        component.y += this.data.offset.offsetY;\r\n        const optTextArea = [];\r\n        this.renderCellBg(component);\r\n        if (component.stick) {\r\n            this.container.stickCell(component.ri, component.ci, component.init);\r\n        } else {\r\n            renderComponent(component, this.renderer, this.debounceRender, opt => {\r\n                const viewData = this.data.view.getViewData();\r\n                if (viewData[component.ri] && viewData[component.ri][component.ci]) {\r\n                    const cell = viewData[component.ri][component.ci];\r\n                    const textArea = {\r\n                        ...opt,\r\n                        x: opt.x - component.x,\r\n                        y: opt.y - component.y,\r\n                    };\r\n                    // 原来的逻辑是逐层比较写入，文字多的时候，效率很低\r\n                    // if (cell.textArea && cell.textArea.length > 0) {\r\n                    //     // !cell.textArea.some(\r\n                    //     //     item =>\r\n                    //     //         Math.abs(item.x - textArea.x) <= 10e-3 &&\r\n                    //     //         Math.abs(item.y - textArea.y) <= 10e-3 &&\r\n                    //     //         item.height === textArea.height &&\r\n                    //     //         item.width === textArea.width &&\r\n                    //     //         item.text === textArea.text\r\n                    //     // ) &&\r\n                    //     optTextArea.push(textArea);\r\n                    // } else {\r\n                    //     cell.textArea = [textArea];\r\n                    // }\r\n                    // 现在修改为一次性写入，效率明显提升\r\n                    optTextArea.push(textArea);\r\n                    cell.textArea = optTextArea;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private renderCellBorder(cell: Cell): void {\r\n        const { borderStyle = {} } = cell;\r\n        const backgroundColor = cell?.backgroundStyle?.backgroundColor;\r\n        const { x, y, width: cellWidth, height: cellHeight } = cell;\r\n\r\n        if (cellWidth <= 0 || cellHeight <= 0) {\r\n            return;\r\n        }\r\n\r\n        const { borderTop, borderLeft, borderBottom, borderRight } = borderStyle;\r\n        this.renderCellBorderLine(x, y, x + cellWidth, y, borderTop, backgroundColor);\r\n        this.renderCellBorderLine(x, y + cellHeight, x + cellWidth, y + cellHeight, borderBottom, backgroundColor);\r\n        this.renderCellBorderLine(x, y, x, y + cellHeight, borderLeft, backgroundColor);\r\n        this.renderCellBorderLine(x + cellWidth, y, x + cellWidth, y + cellHeight, borderRight, backgroundColor);\r\n    }\r\n\r\n    private renderCellBorderLine(\r\n        x: number,\r\n        y: number,\r\n        x1: number,\r\n        y1: number,\r\n        border?: {\r\n            width: number;\r\n            style: LineStyleType;\r\n            color: string;\r\n            dash: number[];\r\n        },\r\n        backgroundColor?: string,\r\n    ) {\r\n        const positionKey = `${x}-${y}-${x1}-${y1}`;\r\n        if (border?.width > 0) {\r\n            const key = `${x}-${y}-${x1}-${y1}-${border.width}-${border.color}`;\r\n            if (!this.cacheBorderSet.has(key)) {\r\n                this.renderer.drawLine(x, y, x1, y1, {\r\n                    color: border.color,\r\n                    lineWidth: border.width,\r\n                    lineStyle: border.style,\r\n                    lineDash: border.dash,\r\n                });\r\n                this.cacheBorderSet.add(key);\r\n                this.cacheBorderPosition.add(positionKey);\r\n            }\r\n\r\n            return;\r\n        }\r\n        // REPORT-34884 如果单元格设置了背景色但是没设置边框，则自动将边框色设置为和背景色相同的颜色\r\n        if (backgroundColor && !this.cacheBorderSet.has(positionKey)) {\r\n            // 判断是否有合并单元格的单元格边框已经存在\r\n            let hasCoveredLine = false;\r\n            let width = 0;\r\n            this.cacheBorderSet.forEach(v => {\r\n                if (hasCoveredLine) return;\r\n\r\n                const [$sx, $sy, $ex, $ey, $width] = v.split('-');\r\n\r\n                // TODO 后面重构把保留4位小数部分干掉\r\n                // 暂时先优化下性能,缓解单元格多时的性能问题\r\n                const PRECISION = 10000;\r\n\r\n                const sx = Math.floor(Number($sx) * PRECISION) / PRECISION,\r\n                    sy = Math.floor(Number($sy) * PRECISION) / PRECISION,\r\n                    ex = Math.floor(Number($ex) * PRECISION) / PRECISION,\r\n                    ey = Math.floor(Number($ey) * PRECISION) / PRECISION,\r\n                    precisionX = Math.floor(x * PRECISION) / PRECISION,\r\n                    precisionY = Math.floor(y * PRECISION) / PRECISION,\r\n                    precisionX1 = Math.floor(x1 * PRECISION) / PRECISION,\r\n                    precisionY1 = Math.floor(y1 * PRECISION) / PRECISION;\r\n\r\n                hasCoveredLine =\r\n                    isPointOnLine(sx, sy, ex, ey, precisionX, precisionY) &&\r\n                    isPointOnLine(sx, sy, ex, ey, precisionX1, precisionY1) ||\r\n                    isPointOnLine(x, y, x1, y1, sx, sy) && isPointOnLine(x, y, x1, y1, ex, ey);\r\n\r\n                const isStartOnline = isPointOnLine(sx, sy, ex, ey, precisionX, precisionY);\r\n                const isEndOnline = isPointOnLine(sx, sy, ex, ey, precisionX1, precisionY1);\r\n\r\n                // REPORT-63753【填报新前端】模板中的分割线截断了\r\n                // 起始点在线上，终点不在线上（横线）且不在延长线上（width可以设置一个系数用于防止溢出）\r\n                if (isStartOnline && !isEndOnline && sy === ey && precisionY1 !== ey) {\r\n                    width = ~~$width;\r\n                    y = y + width;\r\n                }\r\n                // 终点在线上，起始点不在线上（横线）且不在延长线上（width可以设置一个系数用于防止溢出）\r\n                if (!isStartOnline && isEndOnline && sy === ey && precisionY !== ey) {\r\n                    width = ~~$width;\r\n                    y1 = y1 - width;\r\n                }\r\n                // 起始点在线上，终点不在线上（直线）且不在延长线上（width可以设置一个系数用于防止溢出）\r\n                if (isStartOnline && !isEndOnline && sx === ex && precisionX1 !== ex) {\r\n                    width = ~~$width;\r\n                    x = x + width;\r\n                }\r\n                // 终点在线上，起始点不在线上（直线）且不在延长线上（width可以设置一个系数用于防止溢出）\r\n                if (!isStartOnline && isEndOnline && sx === ex && precisionX !== ex) {\r\n                    width = ~~$width;\r\n                    x1 = x1 - width;\r\n                }\r\n            });\r\n            // 只有要画的线不与已有的线不相交或者包含时，才不用画线\r\n            if (!hasCoveredLine) {\r\n                this.renderer.drawLine(x, y, x1, y1, {\r\n                    color: backgroundColor,\r\n                    lineWidth: 1,\r\n                    lineStyle: 'solid',\r\n                    lineDash: [],\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private debounceRender = debounce(() => {\r\n        this.render();\r\n    }, 50);\r\n\r\n    private renderCellBg(cell: Cell): void {\r\n        const { bias, style = {}, backgroundStyle = {}, currencyLineAttr, value } = cell;\r\n        const { x, y, width: cellWidth, height: cellHeight } = cell;\r\n\r\n        if (cellWidth <= 0 || cellHeight <= 0) {\r\n            return;\r\n        }\r\n\r\n        const { backgroundColor, backgroundImage, linearGradient, backgroundImageLayout } = backgroundStyle;\r\n\r\n        if (linearGradient) {\r\n            this.renderer.drawRect(x, y, cellWidth, cellHeight, {\r\n                linearGradient,\r\n                radiusConfig: backgroundStyle.radiusConfig,\r\n            });\r\n        } else if (backgroundImage) {\r\n            const image = getImageData(backgroundImage);\r\n            if (image) {\r\n                this.renderer.drawImage(image, x, y, cellWidth, cellHeight, backgroundImageLayout, {\r\n                    radiusConfig: backgroundStyle.radiusConfig,\r\n                });\r\n            } else {\r\n                loadImage(backgroundImage).then(this.debounceRender);\r\n            }\r\n        } else if (backgroundColor) {\r\n            this.renderer.drawRect(x, y, cellWidth, cellHeight, {\r\n                fillColor: backgroundColor,\r\n                radiusConfig: backgroundStyle.radiusConfig,\r\n            });\r\n        }\r\n\r\n        if (bias) {\r\n            this.renderer.drawBias(x, y, cellWidth, cellHeight, bias.backslash, bias.texts, style);\r\n        }\r\n        if (currencyLineAttr) {\r\n            this.renderer.drawCurrencyLine(x, y, cellWidth, cellHeight, currencyLineAttr, value, style);\r\n        }\r\n    }\r\n\r\n    private renderStickers(): void {\r\n        this.data.getStickers().forEach(sticker => {\r\n            if (sticker.tag === 'delete') {\r\n                this.container.tearSticker(sticker.id);\r\n            } else {\r\n                this.container.stick(sticker, sticker.init);\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}