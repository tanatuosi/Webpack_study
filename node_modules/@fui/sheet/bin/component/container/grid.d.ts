import { Element } from '../element';
import { Bounds, Stick } from '../../../types';
import { OB } from '../../utils/OB';
export interface GridProps {
    width?: number;
    height?: number;
    top?: number;
    left?: number;
    scrollLeft?: number;
    scrollTop?: number;
    cls?: string;
    totalWidth?: number;
    totalHeight?: number;
}
export interface Active {
    p: Element;
    c?: Element;
    t: Element;
    l: Element;
    r: Element;
    b: Element;
}
interface BorderOptions {
    borderBottom?: boolean;
    borderTop?: boolean;
    borderLeft?: boolean;
    borderRight?: boolean;
}
export declare class Grid extends OB {
    el: Element;
    protected focusMode: number;
    protected scrollTop: number;
    protected scrollLeft: number;
    protected scrollTopDelta: number;
    protected scrollLeftDelta: number;
    protected scrollEl: Element;
    protected activeAreas: Set<Active>;
    private width;
    private height;
    constructor(props: GridProps);
    hideSelect(): void;
    selectAreas(area: Bounds[] | null, options?: BorderOptions): void;
    private selectArea;
    hideSelectAreas(): void;
    scroll(left?: number, top?: number): void;
    private createActiveArea;
    offset(bounds: any): void;
    updateScrollEl(position: {
        totalWidth: number;
        totalHeight: number;
        top?: number;
        left?: number;
    }): void;
    stick({ top, left, el }: Stick): void;
    isStickerInRange(stick: Stick): boolean;
    private checkScrollElMounted;
}
export {};
