import { Element } from '../element';
import { Grid } from './grid';
import { WaffleProps, Bounds, Stick } from '../../../types';
import { OB } from '../../utils/OB';
export declare class Waffle extends OB {
    el: Element;
    protected width: number;
    protected height: number;
    protected freezeWidth: number;
    protected freezeHeight: number;
    protected totalWidth: number;
    protected totalHeight: number;
    protected tGrid: Grid;
    protected bGrid: Grid;
    protected tlGrid: Grid;
    protected trGrid: Grid;
    protected blGrid: Grid;
    protected brGrid: Grid;
    protected stickers: {
        [key: string]: Element;
    };
    static STICKER_CONTAINER_CLASS_NAME: string;
    constructor(props: WaffleProps);
    render(): void;
    showSelectArea(bounds: Bounds[][]): void;
    hideSelectArea(): void;
    scroll(x: number, y: number): void;
    getGrids(): Grid[];
    update(props: WaffleProps): void;
    private digest;
    private getResponseGrid;
    stick({ left, top, width, height, el, id, lazy, }: Stick): {
        id: string;
        mount?: Function;
        isInRange: boolean;
    };
    updateStick({ left, top, width, height, id }: Stick): string;
    tear(id: string): void;
    getStick(id: string): Element;
    clean(): void;
    private mountGrid;
}
