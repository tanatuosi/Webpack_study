import { Element } from './element';
declare type Direction = 'vertical' | 'horizontal';
declare interface Slider {
    color?: string;
}
export interface ScrollBarValue {
    direction: Direction;
    position: number;
    deltaX: number;
    deltaY: number;
}
export interface ScrollBarProps {
    size: number;
    scrollSize: number;
    slider: Slider;
    direction: Direction;
    startScroll?: Function;
    onScoll?: Function;
    endScroll?: Function;
}
export declare class ScrollBar {
    el: Element;
    private size;
    private sliderSize;
    private scrollSize;
    private sliderEl;
    private direction;
    private state;
    private position;
    private startPosition;
    private isOver;
    private timer;
    private autoShow;
    private minScrollBarLength;
    private moveOutside;
    private cachePosition;
    private startTrigger;
    private scrollTrigger;
    private endTrigger;
    constructor(props: ScrollBarProps);
    private _initEvent;
    private _startScroll;
    private _scroll;
    /**
     * 防止滚动条滚动到头时报表未能滚动到顶部
     */
    private adjustScroll;
    private _endScroll;
    private _scrollTo;
    private checkScrollSize;
    vertical(): boolean;
    inScrollBounds(e: MouseEvent): boolean;
    private _resetTimeout;
    scroll(distance: number, showScrollBar?: boolean): void;
    update(props: any): void;
    private getScrollBarLength;
    setVisible(visible: boolean): void;
    private sliderElHide;
}
export {};
