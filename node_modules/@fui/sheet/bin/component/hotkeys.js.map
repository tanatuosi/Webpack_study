{"version":3,"file":"hotkeys.js","sourceRoot":"","sources":["../../src/component/hotkeys.ts"],"names":[],"mappings":"AAAA,OAAO,OAAuB,MAAM,YAAY,CAAC;AAGjD;IAAA,MAAa,cAAc;QAKvB,YAAmB,KAAoB;YACnC,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;gBACxB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACrC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC9C,CAAC,CAAC,CAAC;aACN;QACL,CAAC;QAEM,WAAW,CAAC,IAAY,EAAE,EAAc;YAC3C,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACtB,CAAC;QAEM,aAAa,CAAC,IAAY,EAAE,EAAc;YAC7C,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC7B,CAAC;;IAlBa,kBAAG,GAAG;QAChB,IAAI,EAAE,kBAAkB;KAC3B,CAAC;IAiBN,qBAAC;KAAA;SApBY,cAAc","sourcesContent":["import hotkeys, { KeyHandler } from 'hotkeys-js';\r\nimport { HotkeysProps } from '../../types';\r\n\r\nexport class HotkeysManager {\r\n    public static KEY = {\r\n        COPY: 'ctrl+c,command+c',\r\n    };\r\n\r\n    public constructor(props?: HotkeysProps) {\r\n        if (props && props.hotkeys) {\r\n            Object.keys(props.hotkeys).forEach(key => {\r\n                this.bindHotkeys(key, props.hotkeys[key]);\r\n            });\r\n        }\r\n    }\r\n\r\n    public bindHotkeys(keys: string, fn: KeyHandler) {\r\n        hotkeys(keys, fn);\r\n    }\r\n\r\n    public unbindHotkeys(keys: string, fn: KeyHandler) {\r\n        hotkeys.unbind(keys, fn);\r\n    }\r\n}\r\n"]}