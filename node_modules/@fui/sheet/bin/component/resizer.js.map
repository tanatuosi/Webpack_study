{"version":3,"file":"resizer.js","sourceRoot":"","sources":["../../src/component/resizer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Element, h } from './element';\r\nimport { clamp } from '../utils';\r\n\r\nexport interface ResizerProps {\r\n    direction?: string;\r\n    onResize?: Function;\r\n}\r\n\r\nexport interface Rect {\r\n    top: number;\r\n    left: number;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport interface Line {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nlet moving = false;\r\n\r\nexport class Resizer {\r\n    public el: Element;\r\n    protected hoverEl: Element;\r\n    protected lineEl: Element;\r\n    protected min: number;\r\n    protected max: number;\r\n    protected rect: Rect;\r\n    protected direction: string;\r\n    protected onResize?: Function;\r\n\r\n    private prevX: number;\r\n    private prevY: number;\r\n    private distance: number;\r\n\r\n    public constructor(props: ResizerProps) {\r\n        const { direction = 'vertical', onResize } = props;\r\n        this.direction = direction;\r\n        this.onResize = onResize;\r\n        this.el = h('div', `sheet-resizer ${direction}`);\r\n        this.hoverEl = h('div', 'sheet-resizer-hover');\r\n        this.lineEl = h('div', 'sheet-resizer-line');\r\n        this.el.children(this.hoverEl, this.lineEl);\r\n\r\n        this.lineEl.hide();\r\n\r\n        this.hoverEl.on('mousedown', this.onMouseDown);\r\n    }\r\n\r\n    private onMouseDown = (e: MouseEvent): void => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        moving = true;\r\n        this.prevX = 0;\r\n        this.prevY = 0;\r\n        this.distance = 0;\r\n        this.lineEl.show();\r\n\r\n        window.addEventListener('mousemove', this.onMouseMove);\r\n        window.addEventListener('mouseup', this.onMouseUp);\r\n    };\r\n\r\n    private onMouseMove = (e: MouseEvent): void => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (moving) {\r\n            const { prevX, prevY, min, max } = this;\r\n            const movementX = prevX ? e.screenX - prevX : 0;\r\n            const movementY = prevY ? e.screenY - prevY : 0;\r\n\r\n            this.prevX = e.screenX;\r\n            this.prevY = e.screenY;\r\n\r\n            if (this.direction === 'vertical') {\r\n                this.distance += movementX;\r\n                this.el.css('margin-left', `${clamp(this.distance, min, max)}px`);\r\n            } else {\r\n                this.distance += movementY;\r\n                this.el.css('margin-top', `${clamp(this.distance, min, max)}px`);\r\n            }\r\n\r\n            e.preventDefault();\r\n        }\r\n    };\r\n\r\n    private onMouseUp = (e: MouseEvent): void => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (moving) {\r\n            moving = false;\r\n            this.lineEl.hide();\r\n\r\n            const distance =\r\n                parseFloat(this.el.css('margin-left') as string) || parseFloat(this.el.css('margin-top') as string);\r\n\r\n            this.onResize && this.onResize(this.rect, distance, this.direction);\r\n\r\n            this.el.css('margin-left', `0px`);\r\n            this.el.css('margin-top', `0px`);\r\n            this.distance = 0;\r\n\r\n            this.hide();\r\n        }\r\n\r\n        window.removeEventListener('mousemove', this.onMouseMove);\r\n        window.removeEventListener('mouseup', this.onMouseUp);\r\n    };\r\n\r\n    public show(rect: Rect, line: Line, options?): void {\r\n        if (moving) {\r\n            return;\r\n        }\r\n        this.rect = rect;\r\n        const { left, top, width, height } = rect;\r\n        const vertical = this.direction === 'vertical';\r\n        const { min = -Infinity, max = Infinity } = options;\r\n        this.min = min;\r\n        this.max = max;\r\n\r\n        (this.el.offset({\r\n            left: vertical ? left + width - 5 : left,\r\n            top: vertical ? top : top + height - 5,\r\n        }) as Element).show();\r\n        const hoverWidth = vertical ? 5 : width,\r\n            hoverHeight = vertical ? height : 5;\r\n        this.hoverEl.offset({\r\n            width: hoverWidth,\r\n            height: hoverHeight,\r\n        });\r\n        this.lineEl.offset({\r\n            top: vertical ? height : 3,\r\n            left: vertical ? 3 : width,\r\n            width: line.width,\r\n            height: line.height,\r\n        });\r\n    }\r\n\r\n    public hide(): void {\r\n        if (moving) {\r\n            return;\r\n        }\r\n        (this.el.offset({\r\n            width: 0,\r\n            height: 0,\r\n        }) as Element).hide();\r\n    }\r\n}\r\n"]}