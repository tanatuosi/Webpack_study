{"version":3,"file":"element.js","sourceRoot":"","sources":["../../src/component/element.ts"],"names":[],"mappings":"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","sourcesContent":["import { Bounds, SheetElement } from '../../types';\r\nexport class Element implements SheetElement {\r\n    public el: HTMLElement;\r\n    public constructor(tag: HTMLElement | string, className: string = '') {\r\n        if (typeof tag === 'string') {\r\n            this.el = document.createElement(tag);\r\n            this.el.className = className;\r\n        } else {\r\n            this.el = tag;\r\n        }\r\n    }\r\n\r\n    public on(method: string, handler: (event: Event) => void): Element {\r\n        this.el.addEventListener(method, handler);\r\n\r\n        return this;\r\n    }\r\n\r\n    public off(method: string, handler: EventListenerOrEventListenerObject): Element {\r\n        this.el.removeEventListener(method, handler);\r\n\r\n        return this;\r\n    }\r\n\r\n    public children(...children: (HTMLElement | Element)[]): Element {\r\n        children.forEach((child: HTMLElement | Element): void => {\r\n            if (child instanceof Element) {\r\n                this.el.appendChild(child.el);\r\n            } else {\r\n                this.el.appendChild(child);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    public unshiftChildren(...children: (HTMLElement | Element)[]) {\r\n        children.forEach((child: HTMLElement | Element): void => {\r\n            if (child instanceof Element) {\r\n                this.el.insertBefore(child.el, this.el.firstChild);\r\n            } else {\r\n                this.el.insertBefore(child, this.el.firstChild);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    public css(name: number | string): string;\r\n    public css(name: number | string | { [key: string]: string | number }, value?: number | string): Element;\r\n    public css(name: number | string | { [key: string]: string | number }, value?: number | string): Element | string {\r\n        if (value === undefined && typeof name === 'string') {\r\n            return this.el.style[name];\r\n        }\r\n        if (typeof name === 'number' || typeof name === 'string') {\r\n            this.el.style[name] = value;\r\n        } else {\r\n            Object.keys(name).forEach((k: string): void => {\r\n                this.el.style[k] = name[k];\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public offset(): Bounds;\r\n    public offset(value: { [key: string]: string | number }): Element;\r\n    public offset(value?: { [key: string]: string | number }): Bounds | Element {\r\n        if (typeof value === 'undefined') {\r\n            const { offsetTop, offsetLeft, offsetHeight, offsetWidth } = this.el;\r\n\r\n            return {\r\n                top: offsetTop,\r\n                left: offsetLeft,\r\n                height: offsetHeight - offsetTop,\r\n                width: offsetWidth - offsetLeft,\r\n            };\r\n        }\r\n        Object.keys(value).forEach((k: string): void => {\r\n            this.el.style[k] = `${value[k]}px`;\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    public addClass(cls: string): Element {\r\n        const clsReg = new RegExp(cls, 'ig');\r\n        if (!clsReg.test(this.el.className)) {\r\n            this.el.className = `${this.el.className} ${cls}`;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public removeClass(cls: string): Element {\r\n        const clsReg = new RegExp(cls, 'ig');\r\n        if (clsReg.test(this.el.className)) {\r\n            this.el.className = this.el.className.replace(cls, '');\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public html(): string;\r\n    public html(text: string): Element;\r\n    public html(html?: string): string | Element {\r\n        if (html !== undefined) {\r\n            this.el.innerHTML = html;\r\n\r\n            return this;\r\n        }\r\n\r\n        return this.el.innerHTML;\r\n    }\r\n\r\n    public text(): string;\r\n    public text(text: string): Element;\r\n    public text(text?: string): string | Element {\r\n        if (text !== undefined) {\r\n            this.el.innerText = text;\r\n\r\n            return this;\r\n        }\r\n\r\n        return this.el.innerText;\r\n    }\r\n\r\n    public attr(qualifiedName: string, value: string): Element {\r\n        this.el.setAttribute(qualifiedName, value);\r\n\r\n        return this;\r\n    }\r\n\r\n    public contains(child: HTMLElement): boolean {\r\n        return this.el.contains(child);\r\n    }\r\n\r\n    public remove(): void {\r\n        this.el.remove();\r\n    }\r\n\r\n    public hide(): Element {\r\n        this.css('display', 'none');\r\n\r\n        return this;\r\n    }\r\n\r\n    public show(): Element {\r\n        this.css('display', 'block');\r\n\r\n        return this;\r\n    }\r\n\r\n    public focus(): Element {\r\n        this.el.focus();\r\n\r\n        return this;\r\n    }\r\n\r\n    public disableChild(key: string) {\r\n        for (let index = 0; index < this.el.childNodes.length; index++) {\r\n            const child = this.el.childNodes[index] as HTMLElement;\r\n\r\n            /** 避免重复添加disable类 */\r\n            if (child.className.includes(key) && !child.className.includes('disable')) {\r\n                child.className = `${child.className} disable`;\r\n            }\r\n        }\r\n    }\r\n\r\n    public childEnable(key: string) {\r\n        for (let index = 0; index < this.el.childNodes.length; index++) {\r\n            const child = this.el.childNodes[index] as HTMLElement;\r\n            if (child.className.includes(key)) {\r\n                child.className = child.className.replace(' disable', '');\r\n            }\r\n        }\r\n    }\r\n\r\n    public hasChild(el: HTMLElement | Element) {\r\n        let isMount = false;\r\n\r\n        for (let index = 0; index < this.el.childNodes.length; index++) {\r\n            const child = this.el.childNodes[index] as HTMLElement;\r\n\r\n            isMount = el instanceof HTMLElement ? child === el : child === el.el;\r\n\r\n            if (isMount) break;\r\n        }\r\n\r\n        return isMount;\r\n    }\r\n\r\n    public scroll({ top, left }: { top: number; left: number }) {\r\n        this.el.scrollLeft = left;\r\n        this.el.scrollTop = top;\r\n    }\r\n}\r\n\r\nexport const h = (tag: HTMLElement | string, className: string = ''): Element => new Element(tag, className);\r\n"]}