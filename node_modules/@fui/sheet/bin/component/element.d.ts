import { Bounds, SheetElement } from '../../types';
export declare class Element implements SheetElement {
    el: HTMLElement;
    constructor(tag: HTMLElement | string, className?: string);
    on(method: string, handler: (event: Event) => void): Element;
    off(method: string, handler: EventListenerOrEventListenerObject): Element;
    children(...children: (HTMLElement | Element)[]): Element;
    unshiftChildren(...children: (HTMLElement | Element)[]): this;
    css(name: number | string): string;
    css(name: number | string | {
        [key: string]: string | number;
    }, value?: number | string): Element;
    offset(): Bounds;
    offset(value: {
        [key: string]: string | number;
    }): Element;
    addClass(cls: string): Element;
    removeClass(cls: string): Element;
    html(): string;
    html(text: string): Element;
    text(): string;
    text(text: string): Element;
    attr(qualifiedName: string, value: string): Element;
    contains(child: HTMLElement): boolean;
    remove(): void;
    hide(): Element;
    show(): Element;
    focus(): Element;
    disableChild(key: string): void;
    childEnable(key: string): void;
    hasChild(el: HTMLElement | Element): boolean;
    scroll({ top, left }: {
        top: number;
        left: number;
    }): void;
}
export declare const h: (tag: HTMLElement | string, className?: string) => Element;
