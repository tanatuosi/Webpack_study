{"version":3,"file":"clipboard.js","sourceRoot":"","sources":["../../src/component/clipboard.ts"],"names":[],"mappings":"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","sourcesContent":["import { Cell } from '../../types';\r\nimport { getSelection, copyAsHtml, transformCell2HTML } from '../utils';\r\n\r\nexport class Clipboard {\r\n    private cells?: Cell[][];\r\n    private texts: string[][] = [];\r\n    private trigger: HTMLTextAreaElement;\r\n\r\n    public constructor() {\r\n        this.cells = null;\r\n        this.trigger = document.createElement('textarea');\r\n        this.trigger.className = 'trix-offscreen';\r\n        // Safari: https://bugs.webkit.org/show_bug.cgi?id=156529\r\n        this.trigger.innerText = ' ';\r\n        this.trigger.addEventListener('copy', e => {\r\n            this.setClipboardData(e);\r\n        });\r\n        document.body.appendChild(this.trigger);\r\n    }\r\n\r\n    public copy(cells: Cell[][]) {\r\n        this.cells = cells;\r\n        if (this.isImage()) {\r\n            this.downloadImage();\r\n        } else {\r\n            this.dispatchCopy();\r\n        }\r\n    }\r\n\r\n    public copyText(texts: string[][]) {\r\n        if (texts.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.texts = texts;\r\n        this.dispatchCopy();\r\n    }\r\n\r\n    public clear() {\r\n        this.cells = null;\r\n    }\r\n\r\n    public tear() {\r\n        document.body.removeChild(this.trigger);\r\n    }\r\n\r\n    private isImage() {\r\n        return this.cells.length >= 1 && this.cells[0].length >= 1 && this.cells[0][0].image;\r\n    }\r\n\r\n    // 保存图片到本地，不很太好，要寻找一个更好的方法\r\n    private downloadImage() {\r\n        const image = document.createElement('a');\r\n        image.href = this.cells[0][0].image;\r\n        image.download = 'image.png';\r\n        document.body.appendChild(image);\r\n        image.click();\r\n        document.body.removeChild(image);\r\n    }\r\n\r\n    private dispatchCopy() {\r\n        const selection = getSelection();\r\n        const range = document.createRange();\r\n\r\n        selection.removeAllRanges();\r\n        range.selectNodeContents(this.trigger);\r\n        selection.addRange(range);\r\n        this.trigger.setSelectionRange(0, 99999);\r\n        this.trigger.focus();\r\n        // 这里会继续走构造函数里面的 this.trigger.addEventListener\r\n        document.execCommand('copy');\r\n\r\n        this.trigger.blur();\r\n    }\r\n\r\n    /**\r\n     * 将单元格转换成HTML\r\n     *\r\n     * @private\r\n     * @returns {string}\r\n     * @memberof Clipboard\r\n     */\r\n    private transform2HTML(): string {\r\n        if (!this.cells) {\r\n            return '';\r\n        }\r\n        const result = '';\r\n        const cells = {};\r\n        const ws = [];\r\n        const hs = [];\r\n\r\n        this.cells.forEach(cs => {\r\n            cs.forEach(c => {\r\n                const { ri, ci, width, height } = c;\r\n                if (ws[ci] !== width) {\r\n                    if (!ws[ci] && ws[ci] !== 0) {\r\n                        ws[ci] = width;\r\n                    } else {\r\n                        ws[ci] = Math.min(ws[ci], width);\r\n                        ws[ci + 1] = Math.max(ws[ci], width) - ws[ci];\r\n                    }\r\n                }\r\n                if (hs[ri] !== height) {\r\n                    if (!hs[ri] && hs[ri] !== 0) {\r\n                        hs[ri] = height;\r\n                    } else {\r\n                        hs[ri] = Math.min(hs[ri], height);\r\n                        hs[ri + 1] = Math.max(hs[ri], height) - hs[ri];\r\n                    }\r\n                }\r\n                cells[`${c.ci}-${c.ri}`] = transformCell2HTML(c);\r\n            });\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 复制单元格Text\r\n     *\r\n     * @private\r\n     * @returns {string}\r\n     * @memberof Clipboard\r\n     */\r\n    private transform2Text(): string {\r\n        return this.texts.map(item => item.join('\\t')).join('\\n');\r\n    }\r\n\r\n    private setClipboardData(e: ClipboardEvent): void {\r\n        // TODO: 复制html的形式\r\n        if (e.clipboardData) {\r\n            e.clipboardData.setData('text/html', this.transform2HTML());\r\n            e.clipboardData.setData('text/plain', this.transform2Text());\r\n        } else {\r\n            const html = this.transform2HTML();\r\n            copyAsHtml(html);\r\n            window.clipboardData?.setData('text', this.transform2Text());\r\n            // TODO: IE需要借助html实现copyHtml\r\n        }\r\n\r\n        e.preventDefault();\r\n    }\r\n}\r\n"]}