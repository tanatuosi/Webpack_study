{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/renderer/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { canvas } from './canvas';\r\nimport { Element } from '../component';\r\nimport { createWidget } from '../widgets';\r\nimport { getImageData, loadImage, debounce } from '../utils';\r\nimport { CanvasOptions, OverflowConfig } from 'types';\r\nimport { FineCanvas } from './canvas/canvas';\r\n\r\nexport function initRenderer(rootEl: Element, options: CanvasOptions = {}): FineCanvas {\r\n    return canvas(rootEl, options);\r\n}\r\n\r\nfunction drawBackground(style, renderer, forceCallback): void {\r\n    const hasColorBackground = style.backgroundColor && !style.backgroundColor.isTransparent();\r\n    const hasImageBackground = style.backgroundImage && style.backgroundSize;\r\n\r\n    let draw = {};\r\n\r\n    if (hasColorBackground) {\r\n        draw = {\r\n            type: 'rect',\r\n            x: style.left,\r\n            y: style.top,\r\n            width: style.width,\r\n            height: style.height,\r\n            options: {\r\n                fillColor: style.backgroundColor.toString(),\r\n            },\r\n        };\r\n    }\r\n\r\n    if (hasImageBackground) {\r\n        const imageData = getImageData(style.backgroundImage);\r\n        if (imageData) {\r\n            draw = {\r\n                type: 'image',\r\n                x: style.left,\r\n                y: style.top,\r\n                width: style.width,\r\n                height: style.height,\r\n                image: imageData,\r\n                imageLayout: style.backgroundSize,\r\n            };\r\n        } else {\r\n            loadImage(style.backgroundImage).then(\r\n                debounce((): void => {\r\n                    forceCallback();\r\n                }),\r\n            );\r\n        }\r\n    }\r\n    renderer.draw(draw);\r\n}\r\n\r\nfunction createBorder(x: number, y: number, x1: number, y1: number, style) {\r\n    function rotate(x, y, xm, ym, a = 0) {\r\n        a = a * Math.PI / 180;\r\n        const cos = Math.cos,\r\n            sin = Math.sin,\r\n            xr = (x - xm) * cos(a) - (y - ym) * sin(a) + xm,\r\n            yr = (x - xm) * sin(a) + (y - ym) * cos(a) + ym;\r\n\r\n        return [xr, yr];\r\n    }\r\n\r\n    if (style.rotate) {\r\n        const [xm, ym] = style.center;\r\n        const start = rotate(x, y, xm, ym, style.rotate);\r\n        const end = rotate(x1, y1, xm, ym, style.rotate);\r\n        x = start[0];\r\n        y = start[1];\r\n        x1 = end[0];\r\n        y1 = end[1];\r\n    }\r\n\r\n    return {\r\n        type: 'line',\r\n        x,\r\n        y,\r\n        x1,\r\n        y1,\r\n        options: style,\r\n    };\r\n}\r\n\r\nfunction draweBorders(style, renderer): void {\r\n    // TODO: 考虑下圆角\r\n    const { top, left, width, height } = style;\r\n    const center = [left + width / 2, top + height / 2];\r\n    const borders = [];\r\n    if (style.borderTopStyle && !style.borderTopColor.isTransparent()) {\r\n        borders.push(\r\n            createBorder(left, top, left + width, top, {\r\n                color: style.borderTopColor.toString(),\r\n                lineWidth: style.borderTopWidth,\r\n                lineStyle: style.borderTopStyle,\r\n                rotate: style.rotate,\r\n                center,\r\n            }),\r\n        );\r\n    }\r\n    if (style.borderBottomStyle && !style.borderBottomColor.isTransparent()) {\r\n        borders.push(\r\n            createBorder(left, top + height, left + width, top + height, {\r\n                color: style.borderBottomColor.toString(),\r\n                lineWidth: style.borderBottomWidth,\r\n                lineStyle: style.borderBottomStyle,\r\n                rotate: style.rotate,\r\n                center,\r\n            }),\r\n        );\r\n    }\r\n    if (style.borderLeftStyle && !style.borderLeftColor.isTransparent()) {\r\n        borders.push(\r\n            createBorder(left, top, left, top + height, {\r\n                color: style.borderLeftColor.toString(),\r\n                lineWidth: style.borderLeftWidth,\r\n                lineStyle: style.borderLeftStyle,\r\n                rotate: style.rotate,\r\n                center,\r\n            }),\r\n        );\r\n    }\r\n    if (style.borderRightStyle && !style.borderRightColor.isTransparent()) {\r\n        borders.push(\r\n            createBorder(left + width, top, left + width, top + height, {\r\n                color: style.borderRightColor.toString(),\r\n                lineWidth: style.borderRightWidth,\r\n                lineStyle: style.borderRightStyle,\r\n                rotate: style.rotate,\r\n                center,\r\n            }),\r\n        );\r\n    }\r\n    borders.forEach((draw): void => {\r\n        draw && renderer.draw(draw);\r\n    });\r\n}\r\n\r\nfunction drawBackgroundAndBorders(widget, renderer, forceCallback): void {\r\n    const style = widget.getStyle();\r\n    drawBackground(style, renderer, forceCallback);\r\n    draweBorders(style, renderer);\r\n}\r\n\r\nfunction getWidgetOverflowConfig(widget): OverflowConfig {\r\n    return widget.props ? widget.props.overflowConfig : {};\r\n}\r\n\r\nfunction drawConetent(widget, renderer, onDraw): void {\r\n    const text = widget.getText();\r\n\r\n    if (text === null || text === undefined || text === '') {\r\n        return;\r\n    }\r\n\r\n    const style = widget.getStyle();\r\n    const { top, left, width, height, textAlign, verticalAlign, color } = style;\r\n\r\n    renderer.draw(\r\n        {\r\n            type: 'text',\r\n            text: `${text}`,\r\n            x: left,\r\n            y: top,\r\n            width,\r\n            height,\r\n            options: {\r\n                ...style,\r\n                wrap: 'wrap',\r\n                textAlign: textAlign || 'center',\r\n                verticalAlign: verticalAlign || 'middle',\r\n                color: `${color}`,\r\n                clip: true,\r\n                ...getWidgetOverflowConfig(widget),\r\n            },\r\n        },\r\n        onDraw,\r\n    );\r\n}\r\n\r\nexport function renderComponent(config: any, renderer, forceCallback, onDraw): void {\r\n    let stack = [createWidget(config)];\r\n\r\n    while (stack.length > 0) {\r\n        const widget = stack.shift();\r\n        if (widget) {\r\n            drawBackgroundAndBorders(widget, renderer, forceCallback);\r\n            drawConetent(widget, renderer, onDraw);\r\n            stack = stack.concat(widget.getChildren() || []);\r\n        }\r\n    }\r\n}\r\n\r\nexport * from './Renderer';\r\n"]}