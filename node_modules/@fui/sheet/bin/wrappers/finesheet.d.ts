import '../polyfill/polyfill';
import './style.less';
import { Config, SheetOptions, Bounds, Cell, ColumnRowData, RowsConfig, ColsConfig } from '../../types';
import { Sheet, Element } from '../component';
declare class FineSheet {
    sheet: Sheet;
    protected parent: Element;
    protected root: Element;
    constructor(rootEl: HTMLElement, config: Config, events?: Events);
    loadData(data: SheetOptions): FineSheet;
    updateData(): FineSheet;
    /**
     * 更新单个单元格
     * @param cell 单元格
     * @param data 更新数据
     */
    updateCell(cell: Cell, data: {
        [key: string]: any;
    }): void;
    /**
     * 根据单元格坐标获取单元格位置
     * @param data
     */
    getCellPosition(data: {
        row: number;
        col: number;
    }): Bounds;
    /**
     * resize
     */
    resize(w?: number, h?: number): void;
    insertRows(ri: number, rowData: ColumnRowData, config: RowsConfig): void;
    insertCols(ri: number, colData: ColumnRowData, config: ColsConfig): void;
    deleteRows(ri: number, rc: number): void;
    deleteCols(ci: number, cc: number): void;
    /**
     * 销毁全局dom元素
     */
    tear(): void;
}
declare const _default: {
    createSheet(rootEl: HTMLElement, config: Config, events?: Events): FineSheet;
};
export default _default;
export interface Events {
    beforeInit?: () => boolean;
    beforeCreate?: () => void;
    created?: () => void;
    render?: () => void;
    beforeMount?: () => void;
    mounted?: () => void;
}
