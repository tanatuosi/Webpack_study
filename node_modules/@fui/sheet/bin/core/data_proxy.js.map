{"version":3,"file":"data_proxy.js","sourceRoot":"","sources":["../../src/core/data_proxy.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    SheetOptions,\r\n    SheetProps,\r\n    Range,\r\n    Point,\r\n    Scroll,\r\n    Cell,\r\n    Bounds,\r\n    Offset,\r\n    Stick,\r\n    ColumnRowData,\r\n    RowsConfig,\r\n    ColsConfig,\r\n} from '../../types';\r\nimport { View } from './view';\r\nimport { mergeRange, clamp, cArray, xTo26, isEqual, between, cloneDeep, isPointInMatrix } from '../utils';\r\nimport { DEFAULT_SHEET_OPTIONS } from './config';\r\nimport { Selection } from './selection';\r\n\r\nexport class DataProxy {\r\n    private name: string;\r\n    public options: SheetProps;\r\n    public selection: Selection;\r\n    public scroll: Scroll;\r\n\r\n    public width: number;\r\n    public height: number;\r\n\r\n    public offset: Offset;\r\n    public maxScrollX: number;\r\n    public maxScrollY: number;\r\n    public view: View;\r\n    public constructor(name: string = 'sheet', options: SheetOptions) {\r\n        this.name = name;\r\n        this.selection = new Selection();\r\n        this.options = {\r\n            ...cloneDeep(DEFAULT_SHEET_OPTIONS), // 深拷贝配置数据防止多个sheet下相同引用地址导致数据错误的问题。\r\n            ...options,\r\n        };\r\n\r\n        this.view = new View(this.options.sheet);\r\n        this.scroll = this.options.scroll;\r\n        this.scroll.x = isNaN(this.scroll.x) ? 0 : this.scroll.x;\r\n        this.scroll.y = isNaN(this.scroll.y) ? 0 : this.scroll.y;\r\n        this.update();\r\n    }\r\n\r\n    // 获取除了冻结的区域\r\n    public getRenderBounds(direction: string): Bounds {\r\n        const freezeWidth = this.view.freezeWidth;\r\n        const freezeHeight = this.view.freezeHeight;\r\n        if (direction === 'horizontal') {\r\n            return {\r\n                x: freezeWidth,\r\n                y: 0,\r\n                width: this.width - freezeWidth,\r\n                height: this.options.height,\r\n            };\r\n        } else {\r\n            return {\r\n                x: 0,\r\n                y: freezeHeight,\r\n                width: this.width,\r\n                height: this.options.height - freezeHeight,\r\n            };\r\n        }\r\n    }\r\n\r\n    // 可选范围和坐标\r\n    public select(\r\n        a: number,\r\n        b: number,\r\n        c: number | undefined,\r\n        d: number | undefined,\r\n        position: { x: number; y: number },\r\n    ): void {\r\n        if (c !== undefined && d !== undefined) {\r\n            // TODO: 观察了下，如果单一选区的话还是会有问题，最好要设计多选区\r\n            const [[sc, sr], [ec, er]] = this.correctSelectRange(a, b, c, d);\r\n            this.selection.selectRange(sr, sc, er, ec, position);\r\n        } else {\r\n            this.selection.selectCell(a, b, position);\r\n        }\r\n    }\r\n\r\n    public scrollTo(x: number, y: number, cb?: Function): void {\r\n        this.sc(x, y, cb);\r\n    }\r\n\r\n    public scrollX(x: number, cb?: Function): void {\r\n        x = clamp(x, 0, this.maxScrollX);\r\n        this.sc(x, this.scroll.y, cb);\r\n    }\r\n\r\n    public scrollY(y: number, cb?: Function): void {\r\n        y = clamp(y, 0, this.maxScrollY);\r\n        this.sc(this.scroll.x, y, cb);\r\n    }\r\n\r\n    public getViewRange(): Range {\r\n        const start = this.view.getCellIndexs(this.scroll.x, this.scroll.y);\r\n        const end = this.view.getCellIndexs(this.scroll.x + this.width, this.scroll.y + this.height);\r\n\r\n        return [start, end];\r\n    }\r\n\r\n    public getScrollRange(): Range {\r\n        const start = this.view.getCellIndexs(\r\n            this.scroll.x + this.view.freezeWidth,\r\n            this.scroll.y + this.view.freezeHeight,\r\n        );\r\n        const end = this.view.getCellIndexs(this.scroll.x + this.width, this.scroll.y + this.height);\r\n\r\n        return [start, end];\r\n    }\r\n\r\n    //\r\n    public getViewBounds(): Bounds {\r\n        return {\r\n            width: this.width,\r\n            height: this.height,\r\n        };\r\n    }\r\n\r\n    public getScroll(): Scroll {\r\n        return this.scroll;\r\n    }\r\n\r\n    public getCellIndexs(x: number, y: number): Point {\r\n        const freezeWidth = this.view.freezeWidth,\r\n            freezeHeight = this.view.freezeHeight;\r\n\r\n        x > freezeWidth && (x += this.scroll.x);\r\n        y > freezeHeight && (y += this.scroll.y);\r\n\r\n        const oCell = this.view.getCellIndexs(x, y);\r\n        const mCell = this.view.getMergeCell(oCell[1], oCell[0]);\r\n\r\n        return [mCell.ci, mCell.ri];\r\n    }\r\n\r\n    public getCellByOffset(x: number, y: number): Cell | null {\r\n        if (x < this.offset.offsetX || y < this.offset.offsetY) {\r\n            return null;\r\n        } else {\r\n            const { x: offsetX, y: offsetY } = this.getPositionByOffset(x, y);\r\n            const oCell = this.view.getCellIndexs(offsetX, offsetY);\r\n\r\n            return this.view.getMergeCell(oCell[1], oCell[0]);\r\n        }\r\n    }\r\n\r\n    public getPositionByOffset(x: number, y: number) {\r\n        const freezeWidth = this.view.freezeWidth,\r\n            freezeHeight = this.view.freezeHeight;\r\n        x -= this.offset.offsetX;\r\n        y -= this.offset.offsetY;\r\n        x > freezeWidth && (x += this.scroll.x);\r\n        y > freezeHeight && (y += this.scroll.y);\r\n\r\n        return { x, y };\r\n    }\r\n\r\n    /**\r\n     * 更新data数据\r\n     * @param ri row\r\n     * @param ci col\r\n     * @param data 更新数据\r\n     */\r\n    public updateCell(ri: number, ci: number, data: any) {\r\n        this.view.updateCell(ri, ci, data);\r\n    }\r\n\r\n    public getCellIndexsByOffset(x: number, y: number): Point | null {\r\n        const { offsetX, offsetY } = this.offset;\r\n        if (x >= offsetX && y >= offsetY) {\r\n            x -= offsetX;\r\n            y -= offsetY;\r\n\r\n            if (x <= this.view.totalWidth && y <= this.view.totalHeight) {\r\n                const [ci, ri] = this.getCellIndexs(x, y);\r\n    \r\n                return this.view.getCell(ri, ci).valid === false ? null : [ci, ri];\r\n            }\r\n        }\r\n    }\r\n\r\n    public getFreezeBounds(): Bounds[] {\r\n        return [\r\n            {\r\n                x: this.view.freezeWidth,\r\n                y: 0,\r\n                width: this.width - this.view.freezeWidth,\r\n                height: this.view.freezeHeight,\r\n            },\r\n            {\r\n                x: 0,\r\n                y: this.view.freezeHeight,\r\n                width: this.view.freezeWidth,\r\n                height: this.height - this.view.freezeHeight,\r\n            },\r\n            {\r\n                x: 0,\r\n                y: 0,\r\n                width: this.view.freezeWidth,\r\n                height: this.view.freezeHeight,\r\n            },\r\n        ];\r\n    }\r\n\r\n    public cellIsFreezed(cell: Cell) {\r\n        return {\r\n            horizontalFreezed: cell.y + cell.height <= this.view.freezeHeight,\r\n            verticalFreezed: cell.x + cell.width <= this.view.freezeWidth,\r\n        };\r\n    }\r\n\r\n    // 目前只能一个区域一个区域地取\r\n    public getCellsInBounds(x, y, width, height): Cell[] {\r\n        let freezeCells = [],\r\n            otherCells = [];\r\n        x = Math.max(x, 0);\r\n        y = Math.max(y, 0);\r\n        width = Math.min(width, this.width - x);\r\n        height = Math.min(height, this.height - y);\r\n\r\n        if (x < this.view.freezeWidth && y < this.view.freezeHeight) {\r\n            const topLeft = this.view.getCellsInRange([\r\n                this.view.getCellIndexs(x, y),\r\n                this.view.getCellIndexs(this.view.freezeWidth, this.view.freezeHeight),\r\n            ]);\r\n\r\n            // const trscell = this.view.getCellIndexs(this.view.freezeWidth + this.scroll.x, y);\r\n            // const topRight = this.view.getCellsInRange([\r\n            //     [trscell[0], trscell[1]],\r\n            //     this.view.getCellIndexs(this.scroll.x + width, this.view.freezeHeight)\r\n            // ]);\r\n\r\n            // const blscell = this.view.getCellIndexs(x, this.view.freezeHeight + this.scroll.y);\r\n            // const bottomLeft = this.view.getCellsInRange([\r\n            //     [blscell[0], blscell[1]],\r\n            //     this.view.getCellIndexs(this.view.freezeWidth, this.scroll.y + height)\r\n            // ]);\r\n            // freezeCells = Array.prototype.concat(bottomLeft, topRight, topLeft);\r\n            freezeCells = topLeft;\r\n\r\n            // const brscell = this.view.getCellIndexs(\r\n            //     this.view.freezeWidth + this.scroll.x,\r\n            //     this.view.freezeHeight + this.scroll.y\r\n            // );\r\n            // otherCells = this.view.getCellsInRange([\r\n            //     [brscell[0], brscell[1]],\r\n            //     this.view.getCellIndexs(this.scroll.x + width, this.scroll.y + height)\r\n            // ]);\r\n        } else if (x < this.view.freezeWidth) {\r\n            freezeCells = this.view.getCellsInRange([\r\n                this.view.getCellIndexs(x, y + this.scroll.y),\r\n                this.view.getCellIndexs(this.view.freezeWidth, y + this.scroll.y + height),\r\n            ]);\r\n            // otherCells = this.view.getCellsInRange([\r\n            //     this.view.getCellIndexs(this.view.freezeWidth + this.scroll.x, y + this.scroll.y),\r\n            //     this.view.getCellIndexs(width + x + this.scroll.x, y + this.scroll.y + height)\r\n            // ]);\r\n        } else if (y < this.view.freezeHeight) {\r\n            freezeCells = this.view.getCellsInRange([\r\n                this.view.getCellIndexs(x + this.scroll.x, y),\r\n                this.view.getCellIndexs(x + this.scroll.x + width, this.view.freezeHeight),\r\n            ]);\r\n            // otherCells = this.view.getCellsInRange([\r\n            //     this.view.getCellIndexs(x + this.scroll.x, this.view.freezeHeight + this.scroll.y),\r\n            //     this.view.getCellIndexs(x + this.scroll.x + width, height + y + this.scroll.y)\r\n            // ]);\r\n        } else {\r\n            // freezeCells = [];\r\n            otherCells = this.view.getCellsInRange([\r\n                this.view.getCellIndexs(x + this.scroll.x, y + this.scroll.y),\r\n                this.view.getCellIndexs(x + this.scroll.x + width, height + y + this.scroll.y),\r\n            ]);\r\n        }\r\n\r\n        // return Array.prototype.concat(otherCells, freezeCells).reduce((result: { [key: string]: Cell }, cell: Cell): {\r\n        //     [key: string]: Cell;\r\n        // } => {\r\n        //     result[`${cell.ci}-${cell.ri}`] = this._getCorrectBounds(cell) as Cell;\r\n        //     return result;\r\n        // }, {});\r\n        const cacheSet = new Set<string>();\r\n        const result = [];\r\n        Array.prototype.concat(otherCells, freezeCells).reduce((r, cell: Cell) => {\r\n            const key = `${cell.ci}-${cell.ri}`;\r\n            if (cacheSet.has(key)) {\r\n                return r;\r\n            }\r\n            cacheSet.add(key);\r\n            r.push(this.correctBounds(cell));\r\n\r\n            return r;\r\n        }, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    public getCellBounds(row: number, column: number): Bounds {\r\n        const freeze = this.view.freeze;\r\n        const bounds = this.view.getCellBounds(row, column);\r\n        if (row > freeze[1]) {\r\n            bounds.y -= this.scroll.y;\r\n        }\r\n        if (column > freeze[0]) {\r\n            bounds.x -= this.scroll.x;\r\n        }\r\n\r\n        return bounds;\r\n    }\r\n\r\n    public getCell(row: number, column: number): Cell {\r\n        return ({\r\n            ...this.getCellBounds(row, column),\r\n            ri: row,\r\n            ci: column,\r\n        } as unknown) as Cell;\r\n    }\r\n\r\n    public getMergeCells(): Cell[] {\r\n        return this.view.merges.map(\r\n            (merge): Cell => {\r\n                const [start] = merge;\r\n                const bounds = this.view.getRangeBounds(merge);\r\n\r\n                return this.correctBounds({\r\n                    ...this.view.getCell(start[1], start[0]),\r\n                    ...bounds,\r\n                    x: bounds.x + 0.5,\r\n                    y: bounds.y + 0.5,\r\n                }) as Cell;\r\n            },\r\n        );\r\n    }\r\n\r\n    public getRangeBounds(merge: Range) {\r\n        return this.view.getRangeBounds(merge);\r\n    }\r\n\r\n    // 修正滚动的距离\r\n    public correctDeltaY(deltaY: number): number {\r\n        if (!deltaY) {\r\n            return deltaY;\r\n        }\r\n        const scrollY = this.scroll.y + deltaY;\r\n\r\n        if (scrollY <= 0) {\r\n            return -this.scroll.y;\r\n        }\r\n        if (scrollY >= this.maxScrollY) {\r\n            return this.maxScrollY - this.scroll.y;\r\n        }\r\n\r\n        if (!this.options.align) {\r\n            return deltaY;\r\n        }\r\n\r\n        const totalHeight = scrollY + this.view.freezeHeight;\r\n        let totalTop = this.view.freezeHeight;\r\n        let lastScollTop = scrollY;\r\n        for (let i = this.view.freeze[1]; i < this.view.rowc; i++) {\r\n            const rowHeight = this.view.getRowHeight(i);\r\n            if (totalHeight >= totalTop && totalHeight < totalTop + rowHeight) {\r\n                lastScollTop = totalHeight > totalTop + rowHeight / 2 ? totalTop + rowHeight : totalTop;\r\n                break;\r\n            }\r\n            totalTop += rowHeight;\r\n        }\r\n\r\n        return lastScollTop - this.scroll.y - this.view.freezeHeight;\r\n    }\r\n\r\n    // 修正滚动的距离\r\n    public correctDeltaX(deltaX: number): number {\r\n        if (!deltaX) {\r\n            return deltaX;\r\n        }\r\n        const scrollX = this.scroll.x + deltaX;\r\n\r\n        if (scrollX <= 0) {\r\n            return -this.scroll.x;\r\n        }\r\n        if (scrollX >= this.maxScrollX) {\r\n            return this.maxScrollX - this.scroll.x;\r\n        }\r\n\r\n        if (!this.options.align) {\r\n            return deltaX;\r\n        }\r\n\r\n        const scrollLeft = scrollX + this.view.freezeWidth;\r\n        let totalLeft = this.view.freezeWidth;\r\n        let lastScollLeft = scrollX;\r\n        for (let i = this.view.freeze[0]; i < this.view.colc; i++) {\r\n            const colWidth = this.view.getColWidth(i);\r\n            if (scrollLeft >= totalLeft && scrollLeft < totalLeft + colWidth) {\r\n                lastScollLeft = scrollLeft > totalLeft + colWidth / 2 ? totalLeft + colWidth : totalLeft;\r\n                break;\r\n            }\r\n            totalLeft += colWidth;\r\n        }\r\n\r\n        return lastScollLeft - this.scroll.x - this.view.freezeWidth;\r\n    }\r\n\r\n    // sequnce\r\n    public getSequnceCells(): Cell[] {\r\n        const [[sc, sr], [ec, er]] = this.selection.getRange();\r\n        let top = [],\r\n            left = [];\r\n        const [start, end] = this.view.getCellArea(sr, sc, er, ec);\r\n        const startCI = Math.min(start.ci, end.ci),\r\n            endCI = Math.max(start.ci + start.cp, end.ci + end.cp),\r\n            startRI = Math.min(start.ri, end.ri),\r\n            endRI = Math.max(start.ri + start.rp, end.ri + end.rp);\r\n        if (this.options.topSequnce.enable) {\r\n            top = Array.prototype\r\n                .concat(cArray(this.scroll.sc, this.scroll.ec + 1), cArray(0, this.view.freeze[0]))\r\n                .map(\r\n                    (ci): Cell => {\r\n                        const cellBounds = this.getCellBounds(0, ci);\r\n\r\n                        return {\r\n                            ...cellBounds,\r\n                            x: cellBounds.x + 0.5,\r\n                            y: cellBounds.y - this.offset.offsetY + 0.5,\r\n                            width: this.view.getColWidth(ci),\r\n                            height: this.offset.offsetY,\r\n                            type: 'bi.label',\r\n                            text: xTo26(ci),\r\n                            ri: -1,\r\n                            ci,\r\n                            style: {\r\n                                color: '#5f6368',\r\n                                backgroundColor: between(ci, startCI, endCI) ? '#e8eaed' : '#f8f9fa',\r\n                            },\r\n                        };\r\n                    },\r\n                );\r\n        }\r\n        if (this.options.leftSequnce.enable) {\r\n            left = Array.prototype\r\n                .concat(cArray(this.scroll.sr, this.scroll.er + 1), cArray(0, this.view.freeze[1]))\r\n                .map(\r\n                    (ri): Cell => {\r\n                        const cellBounds = this.getCellBounds(ri, 0);\r\n\r\n                        return {\r\n                            ...cellBounds,\r\n                            x: cellBounds.x - this.offset.offsetX + 0.5,\r\n                            y: cellBounds.y + 0.5,\r\n                            width: this.offset.offsetX - 0.5,\r\n                            height: this.view.getRowHeight(ri) - 0.5,\r\n                            type: 'bi.label',\r\n                            text: ri + 1,\r\n                            ci: -1,\r\n                            ri,\r\n                            style: {\r\n                                color: '#5f6368',\r\n                                backgroundColor: between(ri, startRI, endRI) ? '#e8eaed' : '#f8f9fa',\r\n                            },\r\n                        };\r\n                    },\r\n                );\r\n        }\r\n\r\n        return Array.prototype.concat(top, left);\r\n    }\r\n\r\n    public isInSticker(x: number, y: number) {\r\n        return this.getStickers().some(\r\n            item => item.left <= x && item.left + item.width >= x && item.top <= y && item.top + item.height >= y,\r\n        );\r\n    }\r\n\r\n    // stickers\r\n    public getStickers(): Stick[] {\r\n        return this.view.getStickers().map(s => {\r\n            const { el, position, id, tag, init, lazy } = s;\r\n            let top = 0,\r\n                left = 0,\r\n                width = 0,\r\n                height = 0;\r\n            if ('x' in position) {\r\n                left = position.x;\r\n                top = position.y;\r\n                width = position.width;\r\n                height = position.height;\r\n            }\r\n\r\n            if ('col' in position && 'row' in position) {\r\n                const [start, end] = this.view.findMergeRange(position.row, position.col);\r\n                const b = this.getStickerBounds(position.row, position.col);\r\n                left = b.x;\r\n                top = b.y;\r\n                width = this.view.getSumWidth(start[0], end[0] + 1);\r\n                height = this.view.getSumHeight(start[1], end[1] + 1);\r\n            }\r\n\r\n            return {\r\n                id,\r\n                top,\r\n                left,\r\n                width,\r\n                height,\r\n                el,\r\n                tag,\r\n                init,\r\n                lazy,\r\n            };\r\n        });\r\n    }\r\n\r\n    private getStickerBounds(row: number, column: number): Bounds {\r\n        return this.view.getCellBounds(row, column);\r\n    }\r\n\r\n    // resizer\r\n    public getResizerCell(x: number, y: number): Bounds | null {\r\n        const vertical = x > this.offset.offsetX;\r\n        const correctX = vertical ? x - this.offset.offsetX : x;\r\n        const correctY = !vertical ? y - this.offset.offsetY : y;\r\n        const indexs = this.getCellIndexs(correctX, correctY);\r\n        const cellBounds = this.getCellBounds(indexs[1], indexs[0]);\r\n\r\n        let resultIndexs, resultBounds;\r\n        if (vertical) {\r\n            if (correctX - cellBounds.x < cellBounds.x + cellBounds.width - correctX) {\r\n                resultIndexs = [indexs[0], Math.max(indexs[1] - 1, 0)];\r\n                resultBounds = this.getCellBounds(resultIndexs[1], resultIndexs[0]);\r\n            } else {\r\n                resultIndexs = indexs;\r\n                resultBounds = cellBounds;\r\n            }\r\n        } else {\r\n            if (correctY - cellBounds.y < cellBounds.y + cellBounds.height - correctY) {\r\n                resultIndexs = [Math.max(indexs[0] - 1, 0), indexs[1]];\r\n                resultBounds = this.getCellBounds(resultIndexs[1], resultIndexs[0]);\r\n            } else {\r\n                resultIndexs = indexs;\r\n                resultBounds = cellBounds;\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...resultBounds,\r\n            ri: resultIndexs[1],\r\n            ci: resultIndexs[0],\r\n            left: vertical ? resultBounds.x + this.offset.offsetX : resultBounds.x,\r\n            top: !vertical ? resultBounds.y + this.offset.offsetY : resultBounds.y,\r\n            width: !vertical ? this.offset.offsetX : resultBounds.width,\r\n            height: vertical ? this.offset.offsetY : resultBounds.height,\r\n        };\r\n    }\r\n\r\n    //\r\n    public getSelectCell(): Cell {\r\n        const [ci, ri] = this.selection.getCell();\r\n\r\n        return this.view.getMergeCell(ri, ci);\r\n    }\r\n\r\n    public getSelectRangeCells(): Cell[][] {\r\n        return this.view.getCellSquareInRange(this.getSelectRange());\r\n    }\r\n\r\n    /**\r\n     * getSelectRange\r\n     */\r\n    public getSelectRange(): Range {\r\n        const [[sc, sr], [ec, er]] = this.selection.getRange();\r\n        const start = this.view.getMergeCell(sr, sc),\r\n            end = this.view.getMergeCell(er, ec);\r\n\r\n        const startCI = Math.min(start.ci, end.ci),\r\n            endCI = Math.max(start.ci + start.cp, end.ci + end.cp),\r\n            startRI = Math.min(start.ri, end.ri),\r\n            endRI = Math.max(start.ri + start.rp, end.ri + end.rp);\r\n\r\n        return [\r\n            [startCI, startRI],\r\n            [endCI, endRI],\r\n        ];\r\n    }\r\n\r\n    private transformPosition(start: { x: number; y: number }, end: { x: number; y: number }, cell: Cell) {\r\n        const [[sc, sr], [ec, er]] = this.selection.getRange();\r\n        const isStartCell = cell.ci === sc && cell.ri === sr,\r\n            isEndCell = cell.ci === ec && cell.ri === er;\r\n        // 这里需要进行位置矫正，因为原来的位移逻辑没有考虑合并单元格的情况\r\n        const correctCell = this.getCellPosition({ row: cell.ri, col: cell.ci }, this.view.merges);\r\n\r\n        if (isStartCell && isEndCell) {\r\n            const isInLine = (cell.textArea || []).some(\r\n                t =>\r\n                    cell.y + t.y <= start.y &&\r\n                    cell.y + t.y + t.height >= start.y &&\r\n                    cell.y + t.y <= end.y &&\r\n                    cell.y + t.y + t.height >= end.y,\r\n            );\r\n\r\n            return isInLine && start.x > end.x ? [end, start] : [start, end];\r\n        }\r\n        if (isStartCell) {\r\n            !isPointInMatrix(start, { x: cell.x, y: cell.y, width: correctCell.width, height: correctCell.height }) &&\r\n                ([start, end] = [end, start]);\r\n\r\n            return [start, { x: cell.x + correctCell.width, y: cell.y + cell.height }];\r\n        }\r\n        if (isEndCell) {\r\n            !isPointInMatrix(end, { x: cell.x, y: cell.y, width: correctCell.width, height: correctCell.height }) &&\r\n                ([start, end] = [end, start]);\r\n\r\n            return [{ x: cell.x, y: cell.y }, end];\r\n        }\r\n\r\n        return [\r\n            { x: cell.x, y: cell.y },\r\n            { x: cell.x + correctCell.width, y: cell.y + correctCell.height },\r\n        ];\r\n    }\r\n\r\n    // 获取选取范围\r\n    public getSelectBounds(): Bounds[][] {\r\n        const [[sc, sr], [ec, er]] = this.selection.getRange();\r\n\r\n        const { start, end } = this.selection.getPosition();\r\n\r\n        const cells = this.view.getSelctionRange(sc, sr, ec, er);\r\n\r\n        const bounds: Bounds[][] = [];\r\n        const selectedTexts: Map<number, string[]> = new Map();\r\n\r\n        cells.forEach(cell => {\r\n            const isStartCell = cell.ci === sc && cell.ri === sr,\r\n                isEndCell = cell.ci === ec && cell.ri === er;\r\n\r\n            const isStartOrEnd = isStartCell || isEndCell;\r\n            const absoluteStart = this.offset2Absolute(start, cell);\r\n            const absoluteEnd = this.offset2Absolute(end, cell);\r\n            const [$start, $end] = this.transformPosition(absoluteStart, absoluteEnd, cell);\r\n            let cellTexts = '';\r\n            (cell.textArea || []).forEach(({ x, y, width, height, text }) => {\r\n                const hit =\r\n                    text &&\r\n                    (!isStartOrEnd ||\r\n                        // 非首尾单元格的话内容全部是选中的\r\n                        (cell.y + y < $start.y ? cell.y + y + height > $start.y : cell.y + y < $end.y) &&\r\n                        // 右上顶点在y小于$start.y的情况下，x需要大于$start.x\r\n                        (cell.y + y < $start.y ? cell.x + x + width > $start.x : true) &&\r\n                        // 左下顶点在y大于$end.y的情况下，x需要小与$end.x\r\n                        (cell.y + y + height > $end.y ? cell.x + x < $end.x : true));\r\n\r\n                if (hit) {\r\n                    bounds.push(this.spliteBounds(x + cell.x, y + cell.y, x + cell.x + width, y + cell.y + height));\r\n                    cellTexts += text;\r\n                }\r\n            });\r\n            cellTexts && selectedTexts.set(cell.y, (selectedTexts.get(cell.y) || []).concat([cellTexts]));\r\n        });\r\n        this.selection.setSelectedTexts(Array.from(selectedTexts.values()));\r\n\r\n        return bounds;\r\n    }\r\n\r\n    public offset2Absolute({ x, y }: { x: number; y: number }, cell: Cell) {\r\n        let [$x, $y] = [x, y];\r\n        const { x: scrollX, y: scrollY } = this.getScroll();\r\n        const { verticalFreezed, horizontalFreezed } = this.cellIsFreezed(cell);\r\n        !horizontalFreezed && ($y += scrollY);\r\n        !verticalFreezed && ($x += scrollX);\r\n\r\n        return { x: $x, y: $y };\r\n    }\r\n\r\n    /**\r\n     * 根据位置获得所在分区\r\n     * @param positionX 横坐标\r\n     * @param positionY 纵坐标\r\n     */\r\n    public getQuadrantBounds(positionX: number, positionY: number): Bounds {\r\n        // REPORT-22692 冻结单元格时显示交界时的边框，所以偏移1px\r\n        const freezeWidth = this.view.freezeWidth + 1;\r\n        const freezeHeight = this.view.freezeHeight + 1;\r\n\r\n        const isUpperQuadrant = positionY < freezeHeight;\r\n\r\n        const isLeftQuadrant = positionX < freezeWidth;\r\n\r\n        return {\r\n            x: isLeftQuadrant ? 0 : freezeWidth,\r\n            y: isUpperQuadrant ? 0 : freezeHeight,\r\n            width: isLeftQuadrant ? freezeWidth : this.width - freezeWidth,\r\n            height: isUpperQuadrant ? freezeHeight : this.height - freezeHeight,\r\n        };\r\n    }\r\n\r\n    public spliteBounds(startX: number, startY: number, endX: number, endY: number): Bounds[] {\r\n        const result = [];\r\n        const freezeWidth = this.view.freezeWidth;\r\n        const freezeHeight = this.view.freezeHeight;\r\n        result.push({\r\n            x: startX,\r\n            y: startY,\r\n            width: Math.min(freezeWidth - startX, endX - startX),\r\n            height: Math.min(freezeHeight - startY, endY - startX),\r\n        });\r\n\r\n        result.push({\r\n            x: Math.max(freezeWidth, startX),\r\n            y: startY,\r\n            width: endX - Math.max(freezeWidth, startX),\r\n            height: Math.min(freezeHeight - startY, endY - startY),\r\n        });\r\n\r\n        result.push({\r\n            x: startX,\r\n            y: Math.max(freezeHeight, startY),\r\n            width: Math.min(freezeWidth - startX, endX - startX),\r\n            height: endY - Math.max(freezeHeight, startY),\r\n        });\r\n\r\n        result.push({\r\n            x: Math.max(freezeWidth, startX),\r\n            y: Math.max(freezeHeight, startY),\r\n            width: endX - Math.max(freezeWidth, startX),\r\n            height: endY - Math.max(freezeHeight, startY),\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    // set\r\n    public setOffset(offset: Offset): void {\r\n        const { offsetX, offsetY } = offset;\r\n        this.offset = offset;\r\n        this.width = this.width - offsetX;\r\n        this.height = this.height - offsetY;\r\n        this.update();\r\n    }\r\n\r\n    public resizeRow(ri: number, height: number): void {\r\n        this.view.setRowHeight(ri, height);\r\n        this.updateMaxScroll();\r\n        this.updateScrollRange();\r\n    }\r\n\r\n    public resizeCol(ci: number, width: number): void {\r\n        this.view.setColWidth(ci, width);\r\n        this.updateMaxScroll();\r\n        this.updateScrollRange();\r\n    }\r\n\r\n    public insertRows(ri: number, rowData: ColumnRowData, config: RowsConfig): void {\r\n        this.view.insertRows(ri, rowData, config);\r\n        this.update();\r\n    }\r\n\r\n    public insertCols(ci: number, colData: ColumnRowData, config: ColsConfig): void {\r\n        this.view.inserCols(ci, colData, config);\r\n        this.update();\r\n    }\r\n\r\n    public deleteRows(ri: number, rc: number): void {\r\n        this.view.deleteRows(ri, rc);\r\n        this.update();\r\n    }\r\n\r\n    public deleteCols(ci: number, cc: number): void {\r\n        this.view.deleteCols(ci, cc);\r\n        this.update();\r\n    }\r\n\r\n    public setData(options: SheetOptions): void {\r\n        this.options = {\r\n            ...DEFAULT_SHEET_OPTIONS,\r\n            ...this.options,\r\n            ...options,\r\n        };\r\n\r\n        this.view.loadData(this.options.sheet);\r\n\r\n        this.scroll = this.options.scroll;\r\n        this.update();\r\n    }\r\n\r\n    public resize(width: number, height: number): void {\r\n        this.options.width = width || this.options.width;\r\n        this.options.height = height || this.options.height;\r\n\r\n        this.view.reset();\r\n\r\n        this.update();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.clearSelection();\r\n    }\r\n\r\n    private update(): void {\r\n        this.updateOffset();\r\n        this.updateMaxScroll();\r\n        this.updateScrollRange();\r\n    }\r\n\r\n    public correctBounds(bounds): Bounds | Cell {\r\n        const { x, y } = bounds;\r\n        const freezeWidth = this.view.freezeWidth,\r\n            freezeHeight = this.view.freezeHeight;\r\n\r\n        return {\r\n            ...bounds,\r\n            x: x >= freezeWidth ? x - this.scroll.x : x,\r\n            y: y >= freezeHeight ? y - this.scroll.y : y,\r\n            ox: x,\r\n            oy: y,\r\n        };\r\n    }\r\n\r\n    public clearSelection() {\r\n        this.selection.reset();\r\n    }\r\n\r\n    private sc(x: number, y: number, cb?: Function): void {\r\n        const old = { ...this.scroll };\r\n        this.scroll.x = x;\r\n        this.scroll.y = y;\r\n\r\n        this.updateScrollRange();\r\n\r\n        cb && cb(this.scroll, old);\r\n    }\r\n\r\n    // update\r\n    private updateScrollRange(): void {\r\n        this.scroll.x = Math.ceil(Math.min(this.scroll.x, this.maxScrollX));\r\n        this.scroll.y = Math.ceil(Math.min(this.scroll.y, this.maxScrollY));\r\n        const [start, end] = this.getScrollRange();\r\n        this.scroll.sr = start[1];\r\n        this.scroll.sc = start[0];\r\n        this.scroll.er = end[1];\r\n        this.scroll.ec = end[0];\r\n    }\r\n\r\n    private updateOffset(): void {\r\n        this.offset = {\r\n            offsetX: (this.options.leftSequnce.enable ? this.options.leftSequnce.size : 0) + this.options.offsetX,\r\n            offsetY: (this.options.topSequnce.enable ? this.options.topSequnce.size : 0) + this.options.offsetY,\r\n        };\r\n        this.width = this.options.width - this.offset.offsetX;\r\n        this.height = this.options.height - this.offset.offsetY;\r\n    }\r\n\r\n    private updateMaxScroll(): void {\r\n        const { width, height } = this.getMaxScrollBounds();\r\n        this.maxScrollX = Math.ceil(width);\r\n        this.maxScrollY = Math.ceil(height);\r\n    }\r\n\r\n    private getMaxScrollBounds(): Bounds {\r\n        let totalHeight = 0,\r\n            totalWidth = 0;\r\n\r\n        if (!this.options.align) {\r\n            return {\r\n                width: Math.max(this.view.totalWidth - this.width, 0),\r\n                height: Math.max(this.view.totalHeight - this.height, 0),\r\n            };\r\n        }\r\n        for (let i = this.view.rowc - 1; i >= 0; i--) {\r\n            const rowHeight = this.view.getRowHeight(i);\r\n            if (totalHeight + rowHeight > this.height - this.view.freezeHeight) {\r\n                break;\r\n            }\r\n            totalHeight += rowHeight;\r\n        }\r\n        for (let i = this.view.colc - 1; i >= 0; i--) {\r\n            const colWidth = this.view.getColWidth(i);\r\n            if (totalWidth + colWidth > this.width - this.view.freezeWidth) {\r\n                break;\r\n            }\r\n            totalWidth += colWidth;\r\n        }\r\n\r\n        return {\r\n            width: Math.max(this.view.totalWidth - this.view.freezeWidth - totalWidth, 0),\r\n            height: Math.max(this.view.totalHeight - this.view.freezeHeight - totalHeight, 0),\r\n        };\r\n    }\r\n\r\n    // 修正选区范围(mergeCell引起)\r\n    private correctSelectRange(sr: number, sc: number, er: number, ec: number): Range {\r\n        if (sr > er) {\r\n            [sr, er] = [er, sr];\r\n            [sc, ec] = [ec, sc];\r\n        }\r\n        if (sr === er && sc > ec) {\r\n            [sc, ec] = [ec, sc];\r\n        }\r\n        let range: Range = [\r\n                [sc, sr],\r\n                [ec, er],\r\n            ],\r\n            newRange: Range = [\r\n                [sc, sr],\r\n                [ec, er],\r\n            ];\r\n\r\n        while (!isEqual(range, newRange)) {\r\n            range = newRange;\r\n            let mRange = newRange;\r\n            this.view.merges.forEach(range => {\r\n                mRange = mergeRange(mRange, range);\r\n            });\r\n            newRange = mRange;\r\n        }\r\n\r\n        return newRange;\r\n    }\r\n\r\n    /**\r\n     * 根据单元格坐标获取单元格位置(用于存在合并单元格时进行位置矫正）\r\n     * @param data\r\n     * @param merges\r\n     */\r\n    public getCellPosition(data: { row: number; col: number }, merges: Range[]) {\r\n        const merge = merges.find(\r\n            merge => merge.findIndex(item => item.length === 2 && item[0] === data.col && item[1] === data.row) >= 0,\r\n        );\r\n        if (merge) {\r\n            return this.view.getRangeBounds(merge);\r\n        }\r\n\r\n        return this.view.getCellBounds(data.row, data.col);\r\n    }\r\n}\r\n"]}