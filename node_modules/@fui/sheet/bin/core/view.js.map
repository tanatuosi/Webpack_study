{"version":3,"file":"view.js","sourceRoot":"","sources":["../../src/core/view.ts"],"names":[],"mappings":"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","sourcesContent":["// 负责处理table各种size相关的问题\r\nimport {\r\n    ColumnSizes,\r\n    RowSizes,\r\n    ColumnRowData,\r\n    Freeze,\r\n    SheetData,\r\n    Point,\r\n    Range,\r\n    Bounds,\r\n    Cell,\r\n    Position,\r\n    Area,\r\n    CellStyle,\r\n    StickerOpt,\r\n    RowsConfig,\r\n    ColsConfig,\r\n} from '../../types';\r\nimport { createWidget } from '../widgets';\r\nimport { find, uuid, isNil } from '../utils';\r\n\r\nconst DefaultRowSize = 30;\r\nconst DefaultColumnSize = 80;\r\n\r\nconst borderWidth = 1;\r\n// const restWidth = Math.floor(borderWidth / 2);\r\nconst lineWidth = borderWidth % 2 !== 0 ? 0.5 : 1;\r\n\r\n// interface ViewProps extends SheetData {\r\n//     width: number;\r\n//     height: number;\r\n// }\r\n\r\nexport interface ViewEvent {\r\n    x: number;\r\n    y: number;\r\n    ri: number;\r\n    ci: number;\r\n}\r\nexport class View {\r\n    public freeze: Freeze;\r\n    public freezeWidth: number;\r\n    public freezeHeight: number;\r\n    private data: ColumnRowData;\r\n    private cols: ColumnSizes;\r\n    private rows: RowSizes;\r\n    private stickers: StickerOpt[];\r\n    public totalWidth: number;\r\n    public totalHeight: number;\r\n    public colc: number;\r\n    public rowc: number;\r\n    public merges: Range[];\r\n    public styles: CellStyle[];\r\n    private hoverCellX = -1;\r\n    private hoverCellY = -1;\r\n    public constructor(props: SheetData) {\r\n        this.loadData(props);\r\n\r\n        this.digest();\r\n    }\r\n\r\n    public doMouseDown(e: Event, ve: ViewEvent, relativePosition: { x: number; y: number }): any {\r\n        const cell = this.getMergeCell(ve.ri, ve.ci);\r\n        const widget = createWidget(cell);\r\n        window.setTimeout(() => {\r\n            widget.mouseDownHandler.call(null, e, ve.x, ve.y, cell, relativePosition);\r\n        }, 0);\r\n    }\r\n\r\n    public doMouseLeave(e: Event, ve: ViewEvent, relativePosition: { x: number; y: number }) {\r\n        const cell = this.getMergeCell(ve.ri, ve.ci);\r\n        const widget = createWidget(cell);\r\n        window.setTimeout(() => {\r\n            widget.mouseLeaveHandler.call(null, e, ve.x, ve.y, cell, relativePosition);\r\n        }, 0);\r\n    }\r\n\r\n    public doClick(e: Event, ve: ViewEvent, relativePosition: { x: number; y: number }) {\r\n        const cell = this.getMergeCell(ve.ri, ve.ci);\r\n        const widget = createWidget(cell);\r\n        window.setTimeout(() => {\r\n            widget.clickHandler.call(null, e, ve.x, ve.y, cell, relativePosition);\r\n        }, 0);\r\n    }\r\n\r\n    public doDbClick(e: Event, ve: ViewEvent, relativePosition: { x: number; y: number }) {\r\n        const cell = this.getMergeCell(ve.ri, ve.ci);\r\n        const widget = createWidget(cell);\r\n        window.setTimeout(() => {\r\n            widget.dbClickHandler && widget.dbClickHandler.call(null, e, ve.x, ve.y, cell, relativePosition);\r\n        }, 0);\r\n    }\r\n\r\n    public doHover(e: Event, ve: ViewEvent, relativePosition: { x: number; y: number }) {\r\n        const cell = this.getMergeCell(ve.ri, ve.ci);\r\n        if (this.hoverCellX === ve.ri && this.hoverCellY === ve.ci) {\r\n            return;\r\n        }\r\n        this.hoverCellX = ve.ri;\r\n        this.hoverCellY = ve.ci;\r\n        const widget = createWidget(cell);\r\n        window.setTimeout(() => {\r\n            widget.hoverHandler && widget.hoverHandler.call(null, e, ve.x, ve.y, cell, relativePosition);\r\n        }, 0);\r\n    }\r\n\r\n    public disHover() {\r\n        if (this.hoverCellX === -1 && this.hoverCellY === -1) {\r\n            return;\r\n        }\r\n        const cell = this.getMergeCell(this.hoverCellX, this.hoverCellY);\r\n        const widget = createWidget(cell);\r\n        this.hoverCellX = -1;\r\n        this.hoverCellY = -1;\r\n        window.setTimeout(() => {\r\n            widget.hoverHandler && widget.hoverHandler.call(null);\r\n        }, 0);\r\n    }\r\n\r\n    public getSumHeight(min: number = 0, max: number = this.rowc): number {\r\n        let sum = 0;\r\n        min = Math.max(0, min);\r\n        max = Math.min(max, this.rowc);\r\n        for (let i = min; i < max; i++) {\r\n            sum += this.getRowHeight(i);\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    public getSumWidth(min: number = 0, max: number = this.colc): number {\r\n        let sum = 0;\r\n        min = Math.max(0, min);\r\n        max = Math.min(max, this.colc);\r\n        for (let i = min; i < max; i++) {\r\n            sum += this.getColWidth(i);\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    public getRowHeight(i: number): number {\r\n        return isNil(this.rows[i]) ? DefaultRowSize : this.rows[i];\r\n    }\r\n\r\n    public getColWidth(i: number): number {\r\n        return isNil(this.cols[i]) ? DefaultColumnSize : this.cols[i];\r\n    }\r\n\r\n    public getCellsInRange(range: Range): Cell[] {\r\n        const result = [];\r\n        const [start, end] = range;\r\n        // fr边框覆盖的原因\r\n        for (let ri = start[1]; ri <= end[1]; ri++) {\r\n            for (let ci = end[0]; ci >= start[0]; ci--) {\r\n                const cell = this.getMergeCell(ri, ci);\r\n                result.push({\r\n                    ...cell,\r\n                    x: cell.x + lineWidth,\r\n                    y: cell.y + lineWidth,\r\n                });\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public getCellSquareInRange(range: Range): Cell[][] {\r\n        const result = [];\r\n        const [start, end] = range;\r\n        for (let ri = start[1]; ri <= end[1]; ri++) {\r\n            const temp = [];\r\n            for (let ci = start[0]; ci <= end[0]; ci++) {\r\n                const cell = this.getMergeCell(ri, ci);\r\n                temp.push({\r\n                    ...cell,\r\n                    x: cell.x + lineWidth,\r\n                    y: cell.y + lineWidth,\r\n                });\r\n            }\r\n            result.push(temp);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public getRangeBounds(range: Range): Bounds {\r\n        let rowSum = 0,\r\n            colSum = 0,\r\n            startX = 0,\r\n            startY = 0;\r\n        const [start, end] = range;\r\n        for (let i = 0; i <= end[1]; i++) {\r\n            i === start[1] && (startY = rowSum);\r\n            rowSum += this.getRowHeight(i);\r\n        }\r\n\r\n        for (let i = 0; i <= end[0]; i++) {\r\n            i === start[0] && (startX = colSum);\r\n            colSum += this.getColWidth(i);\r\n        }\r\n\r\n        return {\r\n            x: startX,\r\n            y: startY,\r\n            width: colSum - startX,\r\n            height: rowSum - startY,\r\n        };\r\n    }\r\n\r\n    public getCellIndexs(x: number, y: number): Point {\r\n        let xSum = 0,\r\n            ySum = 0,\r\n            row = 0,\r\n            col = 0;\r\n        for (let index = 0; index < this.rowc; index++) {\r\n            ySum += this.getRowHeight(index);\r\n            if (y <= ySum) {\r\n                row = index;\r\n                break;\r\n            }\r\n            row = index;\r\n        }\r\n\r\n        for (let index = 0; index < this.colc; index++) {\r\n            xSum += this.getColWidth(index);\r\n            if (x <= xSum) {\r\n                col = index;\r\n                break;\r\n            }\r\n            col = index;\r\n        }\r\n\r\n        return [col, row];\r\n    }\r\n\r\n    public getCellPoistion(row: number, col: number): Position {\r\n        return {\r\n            x: this.getSumWidth(0, col),\r\n            y: this.getSumHeight(0, row),\r\n        };\r\n    }\r\n\r\n    public getCellBounds(row: number, col: number): Bounds {\r\n        return {\r\n            x: this.getSumWidth(0, col),\r\n            y: this.getSumHeight(0, row),\r\n            width: this.getColWidth(col),\r\n            height: this.getRowHeight(row),\r\n        };\r\n    }\r\n\r\n    public findMergeRange(ri: number, ci: number): Range {\r\n        return (\r\n            find(this.merges, (range: Range): boolean => {\r\n                const [start, end] = range;\r\n\r\n                return ri >= start[1] && ri <= end[1] && ci >= start[0] && ci <= end[0];\r\n            }) || [\r\n                [ci, ri],\r\n                [ci, ri],\r\n            ]\r\n        );\r\n    }\r\n\r\n    public getCellArea(sr: number, sc: number, er: number, ec: number): Area {\r\n        return [this.getMergeCell(sr, sc), this.getMergeCell(er, ec)];\r\n    }\r\n\r\n    public getCell(ri: number, ci: number): Cell {\r\n        const cell = this.data[ri] ? this.data[ri][ci] || null : null;\r\n\r\n        return {\r\n            valid: cell !== null,\r\n            x: 0,\r\n            y: 0,\r\n            ...cell,\r\n            ...this.getCellBounds(ri, ci),\r\n            ri,\r\n            ci,\r\n        };\r\n    }\r\n\r\n    public getViewData() {\r\n        return this.data;\r\n    }\r\n\r\n    /**\r\n     * 判断鼠标悬浮下面是否有文字\r\n     */\r\n    public isHoverText(cell: Cell, clientX: number, clientY: number) {\r\n        const textArea = (cell.textArea || []) as { x: number; y: number; width: number; height: number }[];\r\n\r\n        return textArea.some(item =>\r\n            cell.x + item.x <= clientX &&\r\n            cell.y + item.y <= clientY &&\r\n            cell.x + item.x + item.width >= clientX &&\r\n            cell.y + item.y + item.height >= clientY,\r\n        );\r\n    }\r\n\r\n    public getMergeCell(ri: number, ci: number): Cell {\r\n        const [start, end] = this.findMergeRange(ri, ci);\r\n\r\n        return {\r\n            ...this.getCell(start[1], start[0]),\r\n            ri: start[1],\r\n            ci: start[0],\r\n            width: this.getSumWidth(start[0], end[0] + 1),\r\n            height: this.getSumHeight(start[1], end[1] + 1),\r\n            rp: end[1] - start[1],\r\n            cp: end[0] - start[0],\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 更新cell数据\r\n     * @param ri row\r\n     * @param ci col\r\n     * @param data 更新数据\r\n     */\r\n    public updateCell(ri: number, ci: number, data: any) {\r\n        this.data[ri] ? this.data[ri][ci] = data : null;\r\n    }\r\n\r\n    public getStickers(): StickerOpt[] {\r\n        return this.stickers;\r\n    }\r\n\r\n    public setRowHeight(ri: number, height: number): void {\r\n        this.rows[ri] = height;\r\n        this.digest();\r\n    }\r\n\r\n    public setColWidth(ci: number, width: number): void {\r\n        this.cols[ci] = width;\r\n        this.digest();\r\n    }\r\n\r\n    public insertRows(ri: number, rowData: ColumnRowData, config: RowsConfig): void {\r\n        const { rows } = config;\r\n        this.rowc += rowData.length;\r\n        this.rows.splice(ri, 0, ...rows);\r\n        this.data.splice(ri, 0, ...rowData);\r\n\r\n        if (ri < this.freeze[1]) {\r\n            this.freeze[1] += rowData.length;\r\n        }\r\n        this.updateMerges(ri, rowData.length, 0, 0);\r\n        this.updateStickers(ri, rowData.length, 0, 0);\r\n\r\n        this.digest();\r\n    }\r\n\r\n    public deleteRows(ri: number, rc: number): void {\r\n        this.rowc = Math.max(ri, this.rowc - rc);\r\n        this.rows.splice(ri, rc);\r\n        this.data.splice(ri, rc);\r\n\r\n        this.updateMerges(ri, -rc, 0, 0);\r\n        this.updateStickers(ri, -rc, 0, 0);\r\n\r\n        this.digest();\r\n    }\r\n\r\n    public inserCols(ci: number, colData: ColumnRowData, config: ColsConfig): void {\r\n        const { cols } = config;\r\n        this.colc += colData.length;\r\n        this.cols.splice(ci, 0, ...cols);\r\n\r\n        this.data.forEach((row, i) => {\r\n            row.splice(ci, 0, ...colData[i]);\r\n        });\r\n\r\n        if (ci < this.freeze[0]) {\r\n            this.freeze[0] += colData.length;\r\n        }\r\n        this.updateMerges(0, 0, ci, colData.length);\r\n        this.updateStickers(0, 0, ci, colData.length);\r\n\r\n        this.digest();\r\n    }\r\n\r\n    public deleteCols(ci: number, cc: number): void {\r\n        this.colc = Math.max(ci, this.colc - cc);\r\n        this.cols.splice(ci, cc);\r\n\r\n        this.data.forEach(row => {\r\n            row.splice(ci, cc);\r\n        });\r\n        this.updateMerges(0, 0, ci, cc);\r\n        this.updateStickers(0, 0, ci, cc);\r\n\r\n        this.digest();\r\n    }\r\n\r\n    public digest(): void {\r\n        this.totalWidth = this.getSumWidth();\r\n        this.totalHeight = this.getSumHeight();\r\n        this.freezeWidth = this.getSumWidth(0, this.freeze[0]);\r\n        this.freezeHeight = this.getSumHeight(0, this.freeze[1]);\r\n    }\r\n\r\n    public loadData(props: SheetData): void {\r\n        const { colc, rowc, cols, rows, data, freeze, merges, styles, stickers } = props;\r\n        this.colc = colc;\r\n        this.rowc = rowc;\r\n        this.cols = cols || [];\r\n        this.rows = rows || [];\r\n        this.cols.length = colc;\r\n        this.rows.length = rowc;\r\n        this.freeze = freeze || [0, 0];\r\n        this.data = data || [];\r\n        this.merges = merges || [];\r\n        this.styles = styles || [];\r\n        this.stickers = (stickers || []).map(sticker => {\r\n            sticker.id = sticker.id || uuid();\r\n\r\n            return sticker;\r\n        });\r\n        this.digest();\r\n    }\r\n\r\n    private updateMerges(ri, rc, ci, cc): void {\r\n        this.merges.forEach((merge: Range) => {\r\n            const [start, end] = merge;\r\n            start[0] >= ci && (start[0] += cc);\r\n            start[1] >= ri && (start[1] += rc);\r\n            end[0] >= ci && (end[0] += cc);\r\n            end[1] >= ri && (end[1] += rc);\r\n        });\r\n    }\r\n\r\n    private updateStickers(ri, rc, ci, cc): void {\r\n        this.stickers.forEach(sticker => {\r\n            const { position } = sticker;\r\n            if ('row' in position && 'col' in position) {\r\n                if (position.row > ri && position.row <= ri - rc || position.col > ci && position.col <= ci - cc) {\r\n                    sticker.tag = 'delete';\r\n                } else {\r\n                    sticker.tag = 'normal';\r\n                }\r\n                position.col >= ci && (position.col += cc);\r\n                position.row >= ri && (position.row += rc);\r\n            }\r\n\r\n            if ('x' in position && 'y' in position) {\r\n                position.x >= ci && (position.x += cc);\r\n                position.y >= ri && (position.y += rc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public getSelctionRange(sc: number, sr: number, ec: number, er: number): Cell[] {\r\n        if (!this.data[0]) {\r\n            return [];\r\n        }\r\n\r\n        const maxCol = this.data[0].length,\r\n            cells: Cell[] = [];\r\n\r\n        let row = sr,\r\n            col = sc;\r\n\r\n        while (row <= er && !(row === er && col > ec)) {\r\n            const cell = this.getCell(row, col);\r\n\r\n            if (cell) {\r\n                cells.push(cell);\r\n            }\r\n\r\n            if (col === maxCol) {\r\n                row++;\r\n                col = 0;\r\n            } else {\r\n                col++;\r\n            }\r\n        }\r\n\r\n        return cells;\r\n    }\r\n\r\n    public reset() {\r\n        this.getViewData().forEach(row => {\r\n            row.forEach(cell => {\r\n                if (!cell && !cell.textArea) return;\r\n\r\n                cell.textArea = [];\r\n            });\r\n        });\r\n    }\r\n}\r\n"]}