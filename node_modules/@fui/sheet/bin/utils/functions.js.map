{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../src/utils/functions.ts"],"names":[],"mappings":"AACA,OAAO,OAAO,MAAM,mBAAmB,CAAC;AACxC,OAAO,KAAK,MAAM,iBAAiB,CAAC;AACpC,OAAO,KAAK,MAAM,iBAAiB,CAAC;AACpC,OAAO,IAAI,MAAM,gBAAgB,CAAC;AAClC,OAAO,OAAO,MAAM,mBAAmB,CAAC;AACxC,OAAO,MAAM,MAAM,kBAAkB,CAAC;AACtC,OAAO,SAAS,MAAM,qBAAqB,CAAC;AAC5C,OAAO,IAAI,MAAM,SAAS,CAAC;AAC3B,OAAO,QAAQ,MAAM,oBAAoB,CAAC;AAC1C,OAAO,OAAO,MAAM,mBAAmB,CAAC;AACxC,OAAO,QAAQ,MAAM,oBAAoB,CAAC;AAC1C,OAAO,UAAU,MAAM,sBAAsB,CAAC;AAC9C,OAAO,KAAK,MAAM,iBAAiB,CAAC;AAEpC,MAAM,UAAU,aAAa,CAAC,EAAS,EAAE,EAAS;IAC9C,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvG,CAAC;AAED,MAAM,CAAC,MAAM,OAAO,GAAG,GAAS,EAAE,GAAG,CAAC,CAAC;AAEvC,MAAM,UAAU,MAAM,CAAC,QAAgB,CAAC,EAAE,MAAc,CAAC;IACrD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAU,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;AACrF,CAAC;AAED,MAAM,UAAU,KAAK,CAAC,CAAkB;IACpC,OAAO,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;SACtB,QAAQ,CAAC,EAAE,CAAC;SACZ,KAAK,CAAC,EAAE,CAAC;SACT,MAAM,CAAC,CAAC,CAAS,EAAE,CAAS,EAAU,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAChI,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,CAAQ,EAAE,CAAQ;IACzC,MAAM,SAAS,GAAG,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAEtC,OAAO,SAAS;QACZ,CAAC,CAAC;YACE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3D;QACD,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,IAAY;IAC/B,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;QAClB,OAAO,CAAC,IAAI,CAAC,CAAC;KACjB;IACD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACxE,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QACjB,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxC,IAAI,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBAClC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;gBACvD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAC7B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACrB;iBAAM;gBACH,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACzB,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;aAChE;SACJ;QACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IACH,OAAO,CAAC,GAAG,EAAE,CAAC;IAEd,OAAO,OAAO,CAAC;AACnB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,oBAAoB,CAAC,IAAY,EAAE,YAAsB;IACrE,MAAM,KAAK,GAAa,EAAE,CAAC;IAC3B,MAAM,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAC/C,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAClE,CAAC;IACF,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;IACnD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChD,CAAC;AACD,MAAM,UAAU,YAAY;IACxB,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,MAAM,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IAChD,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAC7C,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;IACnD,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;QAC5B,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;KACxE;SAAM,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;QACpB,OAAO,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;KACrC;SAAM,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;QACpB,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACzB;SAAM;QACH,OAAO,GAAG,CAAC,CAAC;KACf;IAED,OAAO,OAAO,CAAC;AACnB,CAAC;AAED,MAAM,UAAU,IAAI;IAChB,OAAO,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACrE,CAAC;AAED;;;;GAIG;AACH,SAAS,eAAe,CAAC,CAA2B,EAAE,MAA+D;IACjH,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;AACnH,CAAC;AAED;;;;;;;;;GASG;AACH,SAAS,aAAa,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;IACzF,OAAO,CACH,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;QAC/C,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE;QACtB,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE;QACtB,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CACzB,CAAC;AACN,CAAC;AAED,OAAO,EACH,OAAO,EACP,OAAO,EACP,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,MAAM,EACN,SAAS,EACT,QAAQ,EACR,eAAe,EACf,aAAa,EACb,OAAO,EACP,QAAQ,EACR,UAAU,EACV,KAAK,GACR,CAAC","sourcesContent":["import { Range } from '../../types';\r\nimport isEmpty from 'lodash-es/isEmpty';\r\nimport clamp from 'lodash-es/clamp';\r\nimport merge from 'lodash-es/merge';\r\nimport find from 'lodash-es/find';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport remove from 'lodash-es/remove';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport uuid from 'uuid/v4';\r\nimport debounce from 'lodash-es/debounce';\r\nimport inRange from 'lodash-es/inRange';\r\nimport isNumber from 'lodash-es/isNumber';\r\nimport isFunction from 'lodash-es/isFunction';\r\nimport isNil from 'lodash-es/isNil';\r\n\r\nexport function intersectRect(r1: Range, r2: Range): boolean {\r\n    return !(r2[0][1] > r1[1][1] || r2[1][1] < r1[0][1] || r2[0][0] > r1[1][0] || r2[1][0] < r1[0][0]);\r\n}\r\n\r\nexport const emptyFn = (): void => { };\r\n\r\nexport function cArray(start: number = 0, end: number = 0): number[] {\r\n    return Array.from(new Array(end - start), (val, index): number => index + start);\r\n}\r\n\r\nexport function xTo26(n: number | string): string {\r\n    return parseInt(`${n}`, 10)\r\n        .toString(26)\r\n        .split('')\r\n        .reduce((r: string, c: string): string => r + String.fromCharCode(parseInt(parseInt(c, 26).toString(10), 10) + 65), '');\r\n}\r\n\r\nexport function mergeRange(p: Range, q: Range): Range {\r\n    const intersect = intersectRect(p, q);\r\n\r\n    return intersect\r\n        ? [\r\n            [Math.min(p[0][0], q[0][0]), Math.min(p[0][1], q[0][1])],\r\n            [Math.max(p[1][0], q[1][0]), Math.max(p[1][1], q[1][1])],\r\n        ]\r\n        : p;\r\n}\r\n\r\nexport function divide(text: string): string[] {\r\n    if (text.length <= 1) {\r\n        return [text];\r\n    }\r\n    const words = text.replace(new RegExp(/(\\r\\n|\\\\n)/g), '\\n').split('\\n');\r\n    const divides = [];\r\n    words.forEach(word => {\r\n        while (word.length > 0) {\r\n            const firstWorld = word.substring(0, 1);\r\n            if (/[\\d|A-Za-z|_]/.test(firstWorld)) {\r\n                const tmp = word.replace(/^([\\d|A-Za-z|_]+).*$/, '$1');\r\n                word = word.replace(tmp, '');\r\n                divides.push(tmp);\r\n            } else {\r\n                divides.push(firstWorld);\r\n                word = word.length > 0 ? word.substring(1, word.length) : '';\r\n            }\r\n        }\r\n        divides.push('\\n');\r\n    });\r\n    divides.pop();\r\n\r\n    return divides;\r\n}\r\n\r\n/**\r\n * 根据换行信息分割字符串\r\n * @param text 原字符串\r\n * @param autoWrapInfo 换行数据\r\n */\r\nexport function divideTextByWrapInfo(text: string, autoWrapInfo: number[]) {\r\n    const texts: string[] = [];\r\n    const wratLines = autoWrapInfo.map((item, index) =>\r\n        text.substring(index === 0 ? 0 : autoWrapInfo[index - 1], item),\r\n    );\r\n    wratLines.push(text.substring(autoWrapInfo[autoWrapInfo.length - 1]));\r\n    wratLines.forEach(line => {\r\n        line.split('/n').forEach(item => {\r\n            texts.push(item);\r\n        });\r\n    });\r\n\r\n    return texts;\r\n}\r\n\r\nexport function between(a: number, b: number, c: number): boolean {\r\n    return a >= b && a <= c || a >= c && a <= b;\r\n}\r\nexport function getIEVersion() {\r\n    let version = 0;\r\n    const agent = navigator.userAgent.toLowerCase();\r\n    const v1 = agent.match(/(?:msie\\s([\\w.]+))/);\r\n    const v2 = agent.match(/(?:trident.*rv:([\\w.]+))/);\r\n    if (v1 && v2 && v1[1] && v2[1]) {\r\n        version = Math.max(parseInt(v1[1], 10) * 1, parseInt(v2[1], 10) * 1);\r\n    } else if (v1 && v1[1]) {\r\n        version = parseInt(v1[1], 10) * 1;\r\n    } else if (v2 && v2[1]) {\r\n        version = ~~v2[1] * 1;\r\n    } else {\r\n        version = 0;\r\n    }\r\n\r\n    return version;\r\n}\r\n\r\nexport function isIE() {\r\n    return /(msie|trident)/i.test(navigator.userAgent.toLowerCase());\r\n}\r\n\r\n/**\r\n * 判断点p是否在矩形内\r\n * @param p p点\r\n * @param matrix 矩形\r\n */\r\nfunction isPointInMatrix(p: { x: number; y: number }, matrix: { x: number; y: number; width: number; height: number }) {\r\n    return p.x >= matrix.x && p.x <= matrix.x + matrix.width && p.y <= matrix.y + matrix.height && p.y >= matrix.y;\r\n}\r\n\r\n/**\r\n * 判断点是否在线段上\r\n * @param x0 线段起点x\r\n * @param y0 线段起点y\r\n * @param x1 线段终点x\r\n * @param y1 线段终点y\r\n * @param x2 测试点x\r\n * @param y2 测试点y\r\n * @returns boolean\r\n */\r\nfunction isPointOnLine(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number) {\r\n    return (\r\n        (x2 - x0) * (y1 - y0) === (x1 - x0) * (y2 - y0) &&\r\n        Math.min(x0, x1) <= x2 &&\r\n        x2 <= Math.max(x0, x1) &&\r\n        Math.min(y0, y1) <= y2 &&\r\n        y2 <= Math.max(y0, y1)\r\n    );\r\n}\r\n\r\nexport {\r\n    isEmpty,\r\n    isEqual,\r\n    merge,\r\n    clamp,\r\n    find,\r\n    uuid,\r\n    remove,\r\n    cloneDeep,\r\n    debounce,\r\n    isPointInMatrix,\r\n    isPointOnLine,\r\n    inRange,\r\n    isNumber,\r\n    isFunction,\r\n    isNil,\r\n};\r\n"]}