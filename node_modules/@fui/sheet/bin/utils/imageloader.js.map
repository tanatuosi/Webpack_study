{"version":3,"file":"imageloader.js","sourceRoot":"","sources":["../../src/utils/imageloader.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,GAAG,IAAI,GAAG,EAA4B,CAAC;AAEvD,MAAM,YAAY,GAAG,IAAI,GAAG,EAAqC,CAAC;AAElE,MAAM,UAAU,SAAS,CAAC,QAAgB;IACtC,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAEvC,IAAI,KAAK,EAAE;QACP,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACzB,OAAO,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;KACN;IAED,MAAM,MAAM,GACR,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC;QAC1B,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAQ,EAAE;YAClC,MAAM,KAAK,GAAqB,IAAI,KAAK,EAAE,CAAC;YAC5C,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC;YACrB,KAAK,CAAC,MAAM,GAAG,GAAS,EAAE;gBACtB,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAChC,OAAO,CAAC,KAAK,CAAC,CAAC;YACnB,CAAC,CAAC;YACF,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,EAAQ,EAAE;gBAC5B,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IAEP,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAEnC,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,QAAgB;IACzC,OAAO,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACpC,CAAC","sourcesContent":["const imageCache = new Map<string, HTMLImageElement>();\r\n\r\nconst loadingCache = new Map<string, Promise<HTMLImageElement>>();\r\n\r\nexport function loadImage(imageUrl: string): Promise<HTMLImageElement> {\r\n    const image = imageCache.get(imageUrl);\r\n\r\n    if (image) {\r\n        return new Promise(resolve => {\r\n            resolve(image);\r\n        });\r\n    }\r\n\r\n    const loader =\r\n        loadingCache.get(imageUrl) ||\r\n        new Promise((resolve, reject): void => {\r\n            const image: HTMLImageElement = new Image();\r\n            image.src = imageUrl;\r\n            image.onload = (): void => {\r\n                imageCache.set(imageUrl, image);\r\n                resolve(image);\r\n            };\r\n            image.onerror = (error): void => {\r\n                reject(error);\r\n            };\r\n        });\r\n\r\n    loadingCache.set(imageUrl, loader);\r\n\r\n    return loader;\r\n}\r\n\r\nexport function getImageData(imageUrl: string): HTMLImageElement {\r\n    return imageCache.get(imageUrl);\r\n}\r\n"]}