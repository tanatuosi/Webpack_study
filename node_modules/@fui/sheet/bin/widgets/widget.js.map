{"version":3,"file":"widget.js","sourceRoot":"","sources":["../../src/widgets/widget.ts"],"names":[],"mappings":"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","sourcesContent":["import { Color } from './base/color';\r\nimport { parseBorder } from '../utils';\r\nimport { TextShadow, UnderLine, Cell } from '../../types';\r\nimport { widget } from './base';\r\ninterface Style {\r\n    // box\r\n    top?: number;\r\n    left?: number;\r\n    width?: number;\r\n    height?: number;\r\n\r\n    // font\r\n    color?: Color;\r\n    fontStyle?: string;\r\n    fontWeight?: string;\r\n    fontSize?: string;\r\n    fontFamily?: string;\r\n    textAlign?: string;\r\n    verticalAlign?: string;\r\n    textDecoration?: string;\r\n    lineHeight?: string;\r\n    strikeThrough?: string;\r\n    textShadow?: TextShadow;\r\n    underline?: UnderLine;\r\n    subscript?: boolean;\r\n    supscript?: boolean;\r\n\r\n    // background\r\n    backgroundColor?: Color;\r\n    backgroundImage?: string;\r\n    backgroundSize?: string;\r\n\r\n    // border\r\n    borderTopColor?: Color;\r\n    borderTopStyle?: string;\r\n    borderTopWidth?: number;\r\n    borderBottomColor?: Color;\r\n    borderBottomStyle?: string;\r\n    borderBottomWidth?: number;\r\n    borderLeftColor?: Color;\r\n    borderLeftStyle?: string;\r\n    borderLeftWidth?: number;\r\n    borderRightColor?: Color;\r\n    borderRightStyle?: string;\r\n    borderRightWidth?: number;\r\n\r\n    // others\r\n    rotate?: string;\r\n    newLine?: string;\r\n    verticalText?: string;\r\n    verTextDirection?: string;\r\n    cellJust?: 'NONE' | 'HEIGHT' | 'WIDTH';\r\n    autoWrapInfo?: number[];\r\n}\r\n\r\nfunction digestStyle(props): Style {\r\n    const {\r\n        x = 0,\r\n        y = 0,\r\n        top,\r\n        left,\r\n        width,\r\n        height,\r\n        style = {},\r\n        autoWrapInfo,\r\n    } = props;\r\n    const {\r\n        backgroundSize,\r\n        backgroundImage,\r\n        backgroundColor = '',\r\n        color = '',\r\n        textAlign,\r\n        fontWeight = 'normal',\r\n        fontFamily = 'SimSun',\r\n        fontSize = '9pt',\r\n        fontStyle = 'normal',\r\n        verticalAlign,\r\n        border = '',\r\n        borderTop = '',\r\n        borderBottom = '',\r\n        borderLeft = '',\r\n        borderRight = '',\r\n        rotate,\r\n        textShadow,\r\n        underline,\r\n        strikeThrough,\r\n        lineHeight,\r\n        subscript,\r\n        supscript,\r\n        newLine,\r\n        verticalText,\r\n        verTextDirection,\r\n        cellJust,\r\n    } = style;\r\n    const styles: Style = {};\r\n    // box\r\n    styles.top = top || y;\r\n    styles.left = left || x;\r\n    styles.width = width;\r\n    styles.height = height;\r\n\r\n    // font\r\n    styles.color = new Color(color);\r\n    styles.textAlign = textAlign;\r\n    styles.verticalAlign = verticalAlign;\r\n    styles.fontWeight = fontWeight;\r\n    styles.fontSize = fontSize;\r\n    styles.fontFamily = fontFamily;\r\n    styles.fontStyle = fontStyle;\r\n    styles.textShadow = textShadow;\r\n    styles.underline = underline;\r\n    styles.strikeThrough = strikeThrough;\r\n    styles.lineHeight = lineHeight;\r\n    styles.subscript = subscript;\r\n    styles.supscript = supscript;\r\n\r\n    // background\r\n    styles.backgroundColor = new Color(backgroundColor);\r\n    styles.backgroundImage = backgroundImage;\r\n    styles.backgroundSize = backgroundSize;\r\n\r\n    // border\r\n    if (border) {\r\n        const { width, style, color } = parseBorder(border);\r\n        styles.borderLeftWidth = styles.borderTopWidth = styles.borderBottomWidth = styles.borderRightWidth = width;\r\n        styles.borderLeftStyle = styles.borderTopStyle = styles.borderBottomStyle = styles.borderRightStyle = style;\r\n        styles.borderLeftColor = styles.borderTopColor = styles.borderBottomColor = styles.borderRightColor = new Color(\r\n            color,\r\n        );\r\n    }\r\n\r\n    if (borderTop) {\r\n        const { width, color, style } = parseBorder(borderTop);\r\n        styles.borderTopWidth = width;\r\n        styles.borderTopStyle = style;\r\n        styles.borderTopColor = new Color(color);\r\n    }\r\n\r\n    if (borderBottom) {\r\n        const { width, color, style } = parseBorder(borderBottom);\r\n        styles.borderBottomWidth = width;\r\n        styles.borderBottomStyle = style;\r\n        styles.borderBottomColor = new Color(color);\r\n    }\r\n\r\n    if (borderLeft) {\r\n        const { width, color, style } = parseBorder(borderLeft);\r\n        styles.borderLeftWidth = width;\r\n        styles.borderLeftStyle = style;\r\n        styles.borderLeftColor = new Color(color);\r\n    }\r\n\r\n    if (borderRight) {\r\n        const { width, color, style } = parseBorder(borderRight);\r\n        styles.borderRightWidth = width;\r\n        styles.borderRightStyle = style;\r\n        styles.borderRightColor = new Color(color);\r\n    }\r\n\r\n    // other\r\n    styles.rotate = rotate;\r\n    styles.newLine = newLine;\r\n    styles.verticalText = verticalText;\r\n    styles.verTextDirection = verTextDirection;\r\n    styles.cellJust = cellJust;\r\n    styles.autoWrapInfo = autoWrapInfo && JSON.parse(`${autoWrapInfo}`);\r\n\r\n    return styles;\r\n}\r\n\r\n@widget('bi.widget')\r\nexport class AbstractWidget {\r\n    protected props: any;\r\n    protected top: number;\r\n    protected left: number;\r\n    protected width: number;\r\n    protected height: number;\r\n    protected style: Style;\r\n\r\n    public constructor(props: any) {\r\n        this.props = props;\r\n        const { x = 0, y = 0, width, height, top, left } = props;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.top = top || y;\r\n        this.left = left || x;\r\n        this.style = digestStyle(props);\r\n    }\r\n\r\n    public getBounds() {\r\n        return {\r\n            left: this.left,\r\n            top: this.top,\r\n            right: this.left + this.width,\r\n            bottom: this.top + this.height,\r\n            width: this.width,\r\n            height: this.height,\r\n        };\r\n    }\r\n\r\n    public getChildren() { }\r\n\r\n    public getStyle() {\r\n        return this.style;\r\n    }\r\n\r\n    public getText() { }\r\n\r\n    public mouseDownHandler = (e: Event, x: number, y: number, click: Cell) => {\r\n        if (this.props.listeners) {\r\n            this.props.listeners.forEach(listener => {\r\n                if (listener.eventName === 'CELL_MOUSE_DOWN') {\r\n                    listener.action?.call(this, e, x, y, click);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    public mouseLeaveHandler = (e: Event, x: number, y: number, click: Cell) => {\r\n        if (this.props.listeners) {\r\n            this.props.listeners.forEach(listener => {\r\n                if (listener.eventName === 'CELL_MOUSE_LEAVE') {\r\n                    listener.action?.call(this, e, x, y, click);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    public clickHandler = (e: Event, x: number, y: number, click: Cell) => {\r\n        // 是否跳过选中等事件\r\n        let skip = false;\r\n        if (this.props.listeners) {\r\n            this.props.listeners.forEach(listener => {\r\n                if (listener.eventName === 'CELL_CLICK') {\r\n                    skip = listener.action?.call(this, e, x, y, click);\r\n                }\r\n            });\r\n        }\r\n\r\n        return skip;\r\n    };\r\n\r\n    public hoverHandler = (e: Event, x: number, y: number, cell: Cell) => {\r\n        if (this.props.listeners) {\r\n            this.props.listeners.forEach(listener => {\r\n                if (listener.eventName === 'CELL_HOVER') {\r\n                    listener.action?.call(this, e, x, y, cell);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    public dbClickHandler = (e: Event, x: number, y: number, cell: Cell) => {\r\n        if (this.props.listeners) {\r\n            this.props.listeners.forEach(listener => {\r\n                if (listener.eventName === 'CELL_DOUBLE_CLICK') {\r\n                    listener.action?.call(this, e, x, y, cell);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    public getRealWidth(): number {\r\n        return this.width;\r\n    }\r\n}\r\n"]}