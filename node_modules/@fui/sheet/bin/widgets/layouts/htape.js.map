{"version":3,"file":"htape.js","sourceRoot":"","sources":["../../../src/widgets/layouts/htape.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AAE/C,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAElC;IAAA,IAAa,KAAK,GAAlB,MAAa,KAAM,SAAQ,MAAM;QAE7B,YAAmB,KAAK;YACpB,KAAK,CAAC,KAAK,CAAC,CAAC;YA6BV,iBAAY,GAAG,CAAC,CAAQ,EAAE,IAAY,EAAE,GAAW,EAAE,KAAW,EAAE,EAAE;gBACvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;oBAC5C,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,KAAK,GAAG,IAAI,EAAE;wBAC5C,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;qBACxE;iBACJ;gBAED,OAAO,IAAI,CAAC;YAChB,CAAC,CAAC;YArCE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;QAEO,MAAM;YACV,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC;YAChC,MAAM,IAAI,GACN,UAAU;gBACV,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,KAAK,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAClC,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;gBACvB,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;gBACxB,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjC,IAAI,IAAI,CAAC,KAAK,EAAE;oBACZ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;iBAC7B;qBAAM;oBACH,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;iBACvB;gBACD,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC9B,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC;gBAErB,OAAO,YAAY,CAAC,MAAM,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC;KAYJ,CAAA;IA1CY,KAAK;QADjB,MAAM,CAAC,UAAU,CAAC;OACN,KAAK,CA0CjB;IAAD,YAAC;KAAA;SA1CY,KAAK","sourcesContent":["import { createWidget, widget } from '../base';\r\nimport { Cell } from 'types';\r\nimport { Layout } from './layout';\r\n@widget('bi.htape')\r\nexport class Htape extends Layout {\r\n    public items: any[];\r\n    public constructor(props) {\r\n        super(props);\r\n        this.items = props.items || [];\r\n        this.children = [];\r\n        this.digest();\r\n    }\r\n\r\n    private digest() {\r\n        const bounds = this.getBounds();\r\n        let left = 0;\r\n        const totalWidth = bounds.width;\r\n        const auto =\r\n            totalWidth -\r\n            this.items.reduce((total, item) => total + (parseFloat(item.width) || 0), 0);\r\n        this.children = this.items.map(item => {\r\n            const widget = item.el;\r\n            widget.top = bounds.top;\r\n            widget.left = bounds.left + left;\r\n            if (item.width) {\r\n                widget.width = item.width;\r\n            } else {\r\n                widget.width = auto;\r\n            }\r\n            widget.height = bounds.height;\r\n            left += widget.width;\r\n\r\n            return createWidget(widget);\r\n        });\r\n    }\r\n\r\n    public clickHandler = (e: Event, left: number, top: number, click: Cell) => {\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            const bounds = this.children[i].getBounds();\r\n            if (bounds.left <= left && bounds.right > left) {\r\n                return this.children[i].clickHandler.call(null, e, left, top, click);\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n}\r\n"]}