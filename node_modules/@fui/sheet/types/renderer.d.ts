export declare type VerticalAlign = 'top' | 'middle' | 'bottom';
export declare type ImageLayout = 'repeat' | 'center' | 'adapt' | 'stretch' | 'default';
export declare type TextAlign = 'left' | 'right' | 'center' | 'distributed';
export declare type LineStyleType = 'double' | 'solid' | 'dashed' | 'dotted' | 'none';

export interface ColorStop {
    color: string;
    per: number;
}
export interface LinearGradient {
    degree: number;
    stops: ColorStop[];
}
export interface TextShadow {
    shadowColor: string;
    shadowOffsetX: number;
    shadowOffsetY: number;
    shadowBlur: number;
}

export interface UnderLine {
    width: number;
    style: LineStyleType;
    color: string;
    dash: number[];
}

export interface TextStyle {
    fontSize?: string;
    fontFamily?: string;
    fontWeight?: number;
    fontStyle?: string;
    lineHeight?: number;
    underline?: UnderLine;
    strikeThrough?: string;
    textShadow?: TextShadow;
    color?: string;
    subscript?: boolean;
    supscript?: boolean;
    rotate?: number;
    newLine?: string;
    verticalText?: string;
    verTextDirection?: string;
    textAlign?: TextAlign;
    verticalAlign?: VerticalAlign;
    cellJust?: 'NONE' | 'HEIGHT' | 'WIDTH';
    autoWrapInfo?: number[];
}

export interface FillStyle {
    fillColor?: string;
    fillImage?: string;
    size?: string;
    linearGradient?: LinearGradient;
}

export interface LineStyle {
    lineWidth?: number;
    lineStyle?: LineStyleType;
    color?: string;
    lineDash?: number[];
}

export interface OverflowConfig {
    overflowHide?: boolean;
    hideType?: string;
    hideStrLength?: number;
    appendTailStr?: string;
}

export interface RadiusConfig {
    radius?: number;
    tlRadius?: boolean;
    trRadius?: boolean;
    blRadius?: boolean;
    brRadius?: boolean;
}

export interface DrawOptions extends TextStyle, LineStyle, FillStyle, OverflowConfig {
    clip?: boolean;
    radiusConfig?: RadiusConfig;
}

export interface Options {
    stroke?: string;
    strokeWidth?: number;
    fill?: string;
    fillStyle?: string;
    fillWeight?: number;
}

export interface CanvasOptions {
    render?: string;
    width?: number;
    height?: number;
}

export interface Border {
    width: number;
    color: string;
    style: string;
}
