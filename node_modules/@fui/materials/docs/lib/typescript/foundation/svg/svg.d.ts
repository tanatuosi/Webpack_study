import { Widget } from '@fui/core';
import { RaphaelPaper } from 'raphael';
export declare class Svg extends Widget {
    static xtype: string;
    add(json: any): NonNullable<ReturnType<RaphaelPaper['getElementByPoint']>>[];
    path(...args: Parameters<RaphaelPaper['path']>): ReturnType<RaphaelPaper['path']>;
    image(...args: Parameters<RaphaelPaper['image']>): ReturnType<RaphaelPaper['image']>;
    rect(...args: Parameters<RaphaelPaper['rect']>): ReturnType<RaphaelPaper['rect']>;
    circle(...args: Parameters<RaphaelPaper['circle']>): ReturnType<RaphaelPaper['circle']>;
    ellipse(...args: Parameters<RaphaelPaper['ellipse']>): ReturnType<RaphaelPaper['ellipse']>;
    text(...args: Parameters<RaphaelPaper['text']>): ReturnType<RaphaelPaper['text']>;
    print(...args: Parameters<RaphaelPaper['print']>): ReturnType<RaphaelPaper['print']>;
    setStart(...args: Parameters<RaphaelPaper['setStart']>): ReturnType<RaphaelPaper['setStart']>;
    setFinish(...args: Parameters<RaphaelPaper['setFinish']>): ReturnType<RaphaelPaper['setFinish']>;
    setSize(...args: Parameters<RaphaelPaper['setSize']>): ReturnType<RaphaelPaper['setSize']>;
    setViewBox(...args: Parameters<RaphaelPaper['setViewBox']>): ReturnType<RaphaelPaper['setViewBox']>;
    getById(...args: Parameters<RaphaelPaper['getById']>): ReturnType<RaphaelPaper['getById']>;
    getElementByPoint(...args: Parameters<RaphaelPaper['getElementByPoint']>): ReturnType<RaphaelPaper['getElementByPoint']>;
    getElementsByPoint(...args: Parameters<RaphaelPaper['getElementByPoint']>): NonNullable<ReturnType<RaphaelPaper['getElementByPoint']>>[];
    getFont(...args: Parameters<RaphaelPaper['getFont']>): ReturnType<RaphaelPaper['getFont']>;
    set(...args: Parameters<RaphaelPaper['set']>): ReturnType<RaphaelPaper['set']>;
    remove(...args: Parameters<RaphaelPaper['remove']>): ReturnType<RaphaelPaper['remove']>;
    clear(...args: Parameters<RaphaelPaper['clear']>): ReturnType<RaphaelPaper['clear']>;
}
