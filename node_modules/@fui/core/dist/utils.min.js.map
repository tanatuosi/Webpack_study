{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./src/core/0.foundation.js","webpack:///./src/core/1.lodash.js","webpack:///./node_modules/script-loader/addScript.js","webpack:///./src/core/1.lodash.js?a7fc","webpack:///./src/core/2.base.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./src/core/3.ob.js","webpack:///./src/core/5.inject.js","webpack:///./src/core/constant/events.js","webpack:///./src/core/constant/var.js","webpack:///./src/core/func/alias.js","webpack:///./src/core/func/array.js","webpack:///./src/core/func/date.js","webpack:///./src/core/func/function.js","webpack:///./src/core/func/number.js","webpack:///./src/core/func/string.js","webpack:///./src/core/utils/chinesePY.js","webpack:///./src/core/utils/color.js","webpack:///./src/core/utils/i18n.js","webpack:///(webpack)/buildin/global.js","webpack:///./i18n/i18n.cn.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","scope","global","self","window","Function","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","require","setImmediate","clearImmediate","_global","undefined","BI","prepares","src","log","error","console","execScript","attachEvent","addEventListener","eval","traverse","func","context","obj","_apply","_","_applyFunc","slice","isFunction","extend","assert","v","is","isArray","deepContains","warn","message","UUID","f","str","parseInt","Math","random","isWidget","widget","Widget","createWidgets","items","options","map","flatten","createWidget","deepClone","createItems","data","innerAttr","outerAttr","makeArray","shift","type","el","packageItems","layouts","k","it","formatEL","stripEL","trans2Element","widgets","wi","element","each","count","from","to","predicate","inverse","firstKey","res","any","lastKey","firstObject","lastObject","obj1","obj2","isKey","idx","join","isObject","backEach","iteratee","index","backAny","backEvery","backFindKey","keys","backFind","findLastIndex","remove","target","contains","splice","removeAt","string2Array","split","array2String","abc2Int","toUpperCase","charAt","charCodeAt","int2Abc","num","DIGITS","isNull","makeObject","makeArrayByArray","uniq","isSorted","isBoolean","inherit","sp","overrides","sb","F","spp","superclass","init","___fineuiExposedFunction","initialized","has","every","freeze","isNumber","isString","isCapitalEqual","a","b","toLowerCase","isEqual","isWidthOrHeight","w","test","isNotNull","isEmptyArray","arr","isEmpty","isNotEmptyArray","isEmptyObject","isNotEmptyObject","isPlainObject","isEmptyString","isNotEmptyString","isWindow","isPromise","then","cloneDeep","deepExtend","merge","isDeepMatch","attrs","fromIndex","isArrayLike","values","indexOf","copy","deepIndexOf","deepRemove","done","deepWithout","result","deepUnique","deepDiff","other","used","callbacks","pending","timerFunc","nextTickHandler","copies","Promise","resolve","MutationObserver","counter","observer","textNode","document","createTextNode","String","observe","characterData","cb","_resolve","reject","number","radix","parseSafeInt","MAX_SAFE_INTEGER","clamp","parseFloat","isNaturalNumber","isPositiveInteger","isNegativeInteger","isInteger","isNumeric","isNaN","isFinite","isFloat","isOdd","isEven","sum","Number","average","trim","string","toLocaleUpperCase","toLocaleLowerCase","isEndWithBlank","isLiteral","exp","stripQuotes","camelize","replace","character","hyphenate","encrypt","text","CRYPT_TYPE","AES","aesEncrypt","decrypt","aesDecrypt","escape","leftPad","val","size","ch","toString","format","isLeapYear","year","checkDateVoid","YY","MM","DD","minDate","maxDate","back","match","checkDateLegal","ar","MD","Date","_MD","parseDateTime","fmt","today","getDate","y","substring","yearlength","j","hr","min","sec","getMonthName","substr","getFullYear","getMonth","getHours","getMinutes","getSeconds","search","dt","timeZone","localTime","getTime","localOffset","getTimezoneOffset","utc","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","event","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","source","callback","task","OB","config","_constructor","props","destroyed","_initProps","_init","_initRef","_defaultConfig","defaultProps","modifiedDefaultProps","configFunctions","reduce","conf","fn","opt","_initListeners","lis","eventName","action","__ref","current","_purgeRef","_getEvents","events","fns","un","proxy","newFns","ifn","purgeListeners","fireEvent","isArguments","destroy","moduleInjection","moduleInjectionMap","components","constants","stores","services","models","providers","xtype","cls","Modules","getModule","constantInjection","constant","Constants","getConstant","modelInjection","model","Models","getModel","storeInjection","store","Stores","getStore","serviceInjection","service","Services","getService","providerInjection","provider","Providers","getProvider","runConfigFunction","configFn","filter","dependencies","getDependencies","findVersion","minVersion","maxVersion","providerInstance","Plugin","configWidget","immediately","getReference","registerObject","actions","globalAction","actionFn","points","point","pointFn","after","getAllModules","callPoint","inst","types","bfns","before","aspect","afns","mixins","$get","Actions","runAction","act","runGlobalAction","kv","shortcut","component","lazy","elType","getWidget","hasObject","Events","MOUNT","getObject","pushed","_context","pushContext","_initRoot","_constructed","_lazyConstructor","popContext","_lazyCreateWidget","getResource","KEYDOWN","BACKSPACE","SPACE","ENTER","CONFIRM","ERROR","PAUSE","DESTROY","UNMOUNT","CLEAR","ADD","EDITING","EMPTY","VIEW","RESIZE","BEFOREEDIT","AFTEREDIT","STARTEDIT","STOPEDIT","CHANGE","EXPAND","COLLAPSE","TOGGLE","CALLBACK","CLICK","STATECHANGE","BEFORESTATECHANGE","INIT","AFTERINIT","SCROLL","STARTLOAD","AFTERLOAD","BS","AS","SC","SF","SS","BVW","AVW","AV","BW","AW","WS","WF","BA","AA","BD","AD","UC","BTOPDF","ATOPDF","BTOEXCEL","ATOEXCEL","BTOWORD","ATOWORD","BTOIMAGE","ATOIMAGE","BTOHTML","ATOHTML","BIMEXCEL","AIMEXCEL","BPDFPRINT","APDFPRINT","BFLASHPRINT","AFLASHPRINT","BAPPLETPRINT","AAPPLETPRINT","BSEVERPRINT","ASERVERPRINT","BEMAIL","AEMAIL","MAX","MIN","EVENT_RESPONSE_TIME","EVENT_BLUR","zIndex_layer","zIndex_popover","zIndex_popup","zIndex_masker","zIndex_tip","emptyStr","pixUnit","pixRatio","pixFormat","pix","border","toPix","emptyFn","empty","Key","KeyCode","COMMA","DELETE","DOWN","END","ESCAPE","HOME","LEFT","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","PAGE_DOWN","PAGE_UP","PERIOD","RIGHT","TAB","UP","Status","SUCCESS","WRONG","START","WAITING","READY","RUNNING","OUTOFBOUNDS","NULL","Direction","Top","Bottom","Left","Right","Custom","Axis","Vertical","Horizontal","Selection","Default","None","Single","Multi","All","HorizontalAlign","Center","Stretch","VerticalAlign","Middle","StartOfWeek","BlankSplitChar","isInvalidDate","date","_eFormat","neg","magnitudeNeg","magnitude","pow","integerLen","formatLeft","valueLeftLen","getInteger","precision","getPrecision","isValueCarry","roundNum","round","isValueCarried","toFixed","isAllZero","formatExponential","eFormat","_dealNumberPrecision","fright","_numberFormat","numMod","fp","fleft","tp","tleft","tright","paddingZero","right","_dealWithRight","leftPlus","left","_dealWithLeft","rll","numReg","orilen","newnum","combo","last","com","tll","newstr","lres","cjkEncode","newText","code","cjkDecode","rightIdx","subText","fromCharCode","SPECIAL_TAGS","htmlEncode","replaceAll","htmlDecode","cjkEncodeDO","jsonEncode","useHasOwn","encodeArray","__time__","floor","jsonDecode","jo","$","parseJSON","JSON","parse","json","_hasDateInJson","callee","getEncodeURL","urlTemplate","param","ori","encodeURIComponent","url","specialCharsMap","decodeURIComponent","reserveSpecialCharsMap","initialChar","encodeChar","contentFormat","cv","needTrim","date2Str","parseFmt","RegExp","str2Date","flagch","start","compileJFmt","char","jfmt","getFullDayName","getDay","hour","getTimezone","object2Number","object2Date","object2Time","pushArray","sArray","pushDistinct","pushDistinctArray","SECOND","MINUTE","HOUR","DAY","WEEK","_FD","_SMN","_OFFSET","getMonthDays","month","getLastDateOfMonth","getDayOfYear","time","getWeekNumber","week","startOfWeek","middleDay","offsetWeekStartCount","offsetWeekMiddleCount","setDate","ms","valueOf","setMonth","getQuarter","getOffsetDate","offset","getOffsetQuarter","day","monthDay","getQuarterStartMonth","quarterStartMonth","nowMonth","getQuarterStartDate","getQuarterEndDate","quarterEndMonth","getOffsetMonth","getWeekStartDate","getWeekEndDate","i18nText","getShortDayName","getQuarterName","print","yWith4number","wn","qr","pm","ir","dy","re","isKhtml","navigator","userAgent","par","tmp","Func","createDistinctName","getGBWidth","ceil","getSearchResult","keyword","py","find","matched","makeFirstPY","splitChar","getSortedResult","getTextOfItem","sort","item1","item2","str1","str2","len1","len2","char1","char2","CODE_INDEX","beforeFunc","sFunc","__self","afterFunc","ret","add","arg","arg1","arg2","r1","r2","abs","max","cm","accAdd","sub","accSub","mul","s1","s2","accMul","div","accDivide","num1","num2","others","_i","num1Changed","float2Fixed","num2Changed","times","digitLength","eSplit","dLen","baseNum","leftValue","startWith","startTag","endWith","endTag","getQuery","reg","unescape","appendQuery","paras","perfectStart","allIndexOf","location","loc","oMultiDiff","_checkPYCh","uni","arrResult","ignoreMulti","arrRslt","multiLen","strlen","tmpStr","tmpArr","_mkPYRslt","DOM","isColor","color","isRGBColor","isHexColor","isDarkColor","hex","rgb","rgb2json","hex2rgb","g","getContrastColor","rgb2hex","rgbColour","rgbValues","red","green","blue","int2hex","_hue2rgb","m1","m2","h","hsl2rgb","hsl","rgb2hsl","delta","rgba2json","json2rgb","json2rgba","rgba","strNum","hexdig","colorArray","tempValue","rgba2rgb","rgbColor","bgColor","R","G","B","A","i18nStore","i18nFormatters","changeI18n","i18n","addI18n","localeText","exec","formatName","addI18nFormatter"],"mappings":"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","file":"utils.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 980);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","/**\r\n * Created by richie on 15/7/8.\r\n */\r\n/**\r\n * 初始化BI对象\r\n */\r\nvar _global = undefined;\r\nif (typeof window !== \"undefined\") {\r\n    _global = window;\r\n} else if (typeof global !== \"undefined\") {\r\n    _global = global;\r\n} else if (typeof self !== \"undefined\") {\r\n    _global = self;\r\n} else {\r\n    _global = this;\r\n}\r\n\r\nif (_global) {\r\n    _global._global = _global;\r\n}\r\n\r\nif (_global.BI == null) {\r\n    _global.BI = {prepares: []};\r\n}\r\nif(_global.BI.prepares == null) {\r\n    _global.BI.prepares = [];\r\n}","require(\"!!E:\\\\Jenkins\\\\workspace\\\\auto-pack\\\\fineui\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!E:\\\\Jenkins\\\\workspace\\\\auto-pack\\\\fineui\\\\node_modules\\\\raw-loader\\\\index.js!E:\\\\Jenkins\\\\workspace\\\\auto-pack\\\\fineui\\\\src\\\\core\\\\1.lodash.js\"))","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\tfunction log(error) {\n\t\t(typeof console !== \"undefined\")\n\t\t&& (console.error || console.log)(\"[Script Loader]\", error);\n\t}\n\n\t// Check for IE =< 8\n\tfunction isIE() {\n\t\treturn typeof attachEvent !== \"undefined\" && typeof addEventListener === \"undefined\";\n\t}\n\n\ttry {\n\t\tif (typeof execScript !== \"undefined\" && isIE()) {\n\t\t\texecScript(src);\n\t\t} else if (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else {\n\t\t\tlog(\"EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tlog(error);\n\t}\n}\n","module.exports = \"/**\\r\\n * @license\\r\\n * Lodash (Custom Build) <https://lodash.com/>\\r\\n * Build: `lodash core plus=\\\"debounce,throttle,get,set,findIndex,findLastIndex,findKey,findLastKey,isArrayLike,invert,invertBy,uniq,uniqBy,omit,omitBy,zip,unzip,rest,range,random,reject,intersection,drop,countBy,union,zipObject,initial,cloneDeep,clamp,isPlainObject,take,takeRight,without,difference,defaultsDeep,trim,merge,groupBy,uniqBy,before,after,unescape,chunk,pick,pickBy,identity\\\"`\\r\\n * Copyright JS Foundation and other contributors <https://js.foundation/>\\r\\n * Released under MIT license <https://lodash.com/license>\\r\\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\\r\\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\\r\\n */\\r\\n;(function() {\\r\\n\\r\\n    /** Used as a safe reference for `undefined` in pre-ES5 environments. */\\r\\n    var undefined;\\r\\n\\r\\n    /** Used as the semantic version number. */\\r\\n    var VERSION = '4.17.5';\\r\\n\\r\\n    /** Used as the size to enable large array optimizations. */\\r\\n    var LARGE_ARRAY_SIZE = 200;\\r\\n\\r\\n    /** Error message constants. */\\r\\n    var FUNC_ERROR_TEXT = 'Expected a function';\\r\\n\\r\\n    /** Used to stand-in for `undefined` hash values. */\\r\\n    var HASH_UNDEFINED = '__lodash_hash_undefined__';\\r\\n\\r\\n    /** Used as the maximum memoize cache size. */\\r\\n    var MAX_MEMOIZE_SIZE = 500;\\r\\n\\r\\n    /** Used as the internal argument placeholder. */\\r\\n    var PLACEHOLDER = '__lodash_placeholder__';\\r\\n\\r\\n    /** Used to compose bitmasks for cloning. */\\r\\n    var CLONE_DEEP_FLAG = 1,\\r\\n        CLONE_FLAT_FLAG = 2,\\r\\n        CLONE_SYMBOLS_FLAG = 4;\\r\\n\\r\\n    /** Used to compose bitmasks for value comparisons. */\\r\\n    var COMPARE_PARTIAL_FLAG = 1,\\r\\n        COMPARE_UNORDERED_FLAG = 2;\\r\\n\\r\\n    /** Used to compose bitmasks for function metadata. */\\r\\n    var WRAP_BIND_FLAG = 1,\\r\\n        WRAP_BIND_KEY_FLAG = 2,\\r\\n        WRAP_CURRY_BOUND_FLAG = 4,\\r\\n        WRAP_CURRY_FLAG = 8,\\r\\n        WRAP_CURRY_RIGHT_FLAG = 16,\\r\\n        WRAP_PARTIAL_FLAG = 32,\\r\\n        WRAP_PARTIAL_RIGHT_FLAG = 64,\\r\\n        WRAP_ARY_FLAG = 128,\\r\\n        WRAP_REARG_FLAG = 256,\\r\\n        WRAP_FLIP_FLAG = 512;\\r\\n\\r\\n    /** Used to detect hot functions by number of calls within a span of milliseconds. */\\r\\n    var HOT_COUNT = 800,\\r\\n        HOT_SPAN = 16;\\r\\n\\r\\n    /** Used to indicate the type of lazy iteratees. */\\r\\n    var LAZY_FILTER_FLAG = 1,\\r\\n        LAZY_MAP_FLAG = 2,\\r\\n        LAZY_WHILE_FLAG = 3;\\r\\n\\r\\n    /** Used as references for various `Number` constants. */\\r\\n    var INFINITY = 1 / 0,\\r\\n        MAX_SAFE_INTEGER = 9007199254740991,\\r\\n        MAX_INTEGER = 1.7976931348623157e+308,\\r\\n        NAN = 0 / 0;\\r\\n\\r\\n    /** Used as references for the maximum length and index of an array. */\\r\\n    var MAX_ARRAY_LENGTH = 4294967295;\\r\\n\\r\\n    /** Used to associate wrap methods with their bit flags. */\\r\\n    var wrapFlags = [\\r\\n        ['ary', WRAP_ARY_FLAG],\\r\\n        ['bind', WRAP_BIND_FLAG],\\r\\n        ['bindKey', WRAP_BIND_KEY_FLAG],\\r\\n        ['curry', WRAP_CURRY_FLAG],\\r\\n        ['curryRight', WRAP_CURRY_RIGHT_FLAG],\\r\\n        ['flip', WRAP_FLIP_FLAG],\\r\\n        ['partial', WRAP_PARTIAL_FLAG],\\r\\n        ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\\r\\n        ['rearg', WRAP_REARG_FLAG]\\r\\n    ];\\r\\n\\r\\n    /** `Object#toString` result references. */\\r\\n    var argsTag = '[object Arguments]',\\r\\n        arrayTag = '[object Array]',\\r\\n        asyncTag = '[object AsyncFunction]',\\r\\n        boolTag = '[object Boolean]',\\r\\n        dateTag = '[object Date]',\\r\\n        errorTag = '[object Error]',\\r\\n        funcTag = '[object Function]',\\r\\n        genTag = '[object GeneratorFunction]',\\r\\n        mapTag = '[object Map]',\\r\\n        numberTag = '[object Number]',\\r\\n        nullTag = '[object Null]',\\r\\n        objectTag = '[object Object]',\\r\\n        promiseTag = '[object Promise]',\\r\\n        proxyTag = '[object Proxy]',\\r\\n        regexpTag = '[object RegExp]',\\r\\n        setTag = '[object Set]',\\r\\n        stringTag = '[object String]',\\r\\n        symbolTag = '[object Symbol]',\\r\\n        undefinedTag = '[object Undefined]',\\r\\n        weakMapTag = '[object WeakMap]';\\r\\n\\r\\n    var arrayBufferTag = '[object ArrayBuffer]',\\r\\n        dataViewTag = '[object DataView]',\\r\\n        float32Tag = '[object Float32Array]',\\r\\n        float64Tag = '[object Float64Array]',\\r\\n        int8Tag = '[object Int8Array]',\\r\\n        int16Tag = '[object Int16Array]',\\r\\n        int32Tag = '[object Int32Array]',\\r\\n        uint8Tag = '[object Uint8Array]',\\r\\n        uint8ClampedTag = '[object Uint8ClampedArray]',\\r\\n        uint16Tag = '[object Uint16Array]',\\r\\n        uint32Tag = '[object Uint32Array]';\\r\\n\\r\\n    /** Used to match HTML entities and HTML characters. */\\r\\n    var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\\r\\n        reUnescapedHtml = /[&<>\\\"']/g,\\r\\n        reHasEscapedHtml = RegExp(reEscapedHtml.source),\\r\\n        reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\\r\\n\\r\\n    /** Used to match property names within property paths. */\\r\\n    var reIsDeepProp = /\\\\.|\\\\[(?:[^[\\\\]]*|([\\\"'])(?:(?!\\\\1)[^\\\\\\\\]|\\\\\\\\.)*?\\\\1)\\\\]/,\\r\\n        reIsPlainProp = /^\\\\w*$/,\\r\\n        rePropName = /[^.[\\\\]]+|\\\\[(?:(-?\\\\d+(?:\\\\.\\\\d+)?)|([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2)\\\\]|(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))/g;\\r\\n\\r\\n    /**\\r\\n     * Used to match `RegExp`\\r\\n     * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\\r\\n     */\\r\\n    var reRegExpChar = /[\\\\\\\\^$.*+?()[\\\\]{}|]/g;\\r\\n\\r\\n    /** Used to match leading and trailing whitespace. */\\r\\n    var reTrim = /^\\\\s+|\\\\s+$/g;\\r\\n\\r\\n    /** Used to match wrap detail comments. */\\r\\n    var reWrapComment = /\\\\{(?:\\\\n\\\\/\\\\* \\\\[wrapped with .+\\\\] \\\\*\\\\/)?\\\\n?/,\\r\\n        reWrapDetails = /\\\\{\\\\n\\\\/\\\\* \\\\[wrapped with (.+)\\\\] \\\\*/,\\r\\n        reSplitDetails = /,? & /;\\r\\n\\r\\n    /** Used to match backslashes in property paths. */\\r\\n    var reEscapeChar = /\\\\\\\\(\\\\\\\\)?/g;\\r\\n\\r\\n    /** Used to match `RegExp` flags from their coerced string values. */\\r\\n    var reFlags = /\\\\w*$/;\\r\\n\\r\\n    /** Used to detect bad signed hexadecimal string values. */\\r\\n    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\\r\\n\\r\\n    /** Used to detect binary string values. */\\r\\n    var reIsBinary = /^0b[01]+$/i;\\r\\n\\r\\n    /** Used to detect host constructors (Safari). */\\r\\n    var reIsHostCtor = /^\\\\[object .+?Constructor\\\\]$/;\\r\\n\\r\\n    /** Used to detect octal string values. */\\r\\n    var reIsOctal = /^0o[0-7]+$/i;\\r\\n\\r\\n    /** Used to detect unsigned integer values. */\\r\\n    var reIsUint = /^(?:0|[1-9]\\\\d*)$/;\\r\\n\\r\\n    /** Used to compose unicode character classes. */\\r\\n    var rsAstralRange = '\\\\\\\\ud800-\\\\\\\\udfff',\\r\\n        rsComboMarksRange = '\\\\\\\\u0300-\\\\\\\\u036f',\\r\\n        reComboHalfMarksRange = '\\\\\\\\ufe20-\\\\\\\\ufe2f',\\r\\n        rsComboSymbolsRange = '\\\\\\\\u20d0-\\\\\\\\u20ff',\\r\\n        rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\\r\\n        rsVarRange = '\\\\\\\\ufe0e\\\\\\\\ufe0f';\\r\\n\\r\\n    /** Used to compose unicode capture groups. */\\r\\n    var rsAstral = '[' + rsAstralRange + ']',\\r\\n        rsCombo = '[' + rsComboRange + ']',\\r\\n        rsFitz = '\\\\\\\\ud83c[\\\\\\\\udffb-\\\\\\\\udfff]',\\r\\n        rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\\r\\n        rsNonAstral = '[^' + rsAstralRange + ']',\\r\\n        rsRegional = '(?:\\\\\\\\ud83c[\\\\\\\\udde6-\\\\\\\\uddff]){2}',\\r\\n        rsSurrPair = '[\\\\\\\\ud800-\\\\\\\\udbff][\\\\\\\\udc00-\\\\\\\\udfff]',\\r\\n        rsZWJ = '\\\\\\\\u200d';\\r\\n\\r\\n    /** Used to compose unicode regexes. */\\r\\n    var reOptMod = rsModifier + '?',\\r\\n        rsOptVar = '[' + rsVarRange + ']?',\\r\\n        rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\\r\\n        rsSeq = rsOptVar + reOptMod + rsOptJoin,\\r\\n        rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\\r\\n\\r\\n    /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\\r\\n    var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\\r\\n\\r\\n    /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\\r\\n    var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\\r\\n\\r\\n    /** Used to identify `toStringTag` values of typed arrays. */\\r\\n    var typedArrayTags = {};\\r\\n    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\\r\\n        typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\\r\\n            typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\\r\\n                typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\\r\\n                    typedArrayTags[uint32Tag] = true;\\r\\n    typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\\r\\n        typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\\r\\n            typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\\r\\n                typedArrayTags[errorTag] = typedArrayTags[funcTag] =\\r\\n                    typedArrayTags[mapTag] = typedArrayTags[numberTag] =\\r\\n                        typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\\r\\n                            typedArrayTags[setTag] = typedArrayTags[stringTag] =\\r\\n                                typedArrayTags[weakMapTag] = false;\\r\\n\\r\\n    /** Used to identify `toStringTag` values supported by `_.clone`. */\\r\\n    var cloneableTags = {};\\r\\n    cloneableTags[argsTag] = cloneableTags[arrayTag] =\\r\\n        cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\\r\\n            cloneableTags[boolTag] = cloneableTags[dateTag] =\\r\\n                cloneableTags[float32Tag] = cloneableTags[float64Tag] =\\r\\n                    cloneableTags[int8Tag] = cloneableTags[int16Tag] =\\r\\n                        cloneableTags[int32Tag] = cloneableTags[mapTag] =\\r\\n                            cloneableTags[numberTag] = cloneableTags[objectTag] =\\r\\n                                cloneableTags[regexpTag] = cloneableTags[setTag] =\\r\\n                                    cloneableTags[stringTag] = cloneableTags[symbolTag] =\\r\\n                                        cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\\r\\n                                            cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\\r\\n    cloneableTags[errorTag] = cloneableTags[funcTag] =\\r\\n        cloneableTags[weakMapTag] = false;\\r\\n\\r\\n    /** Used to map characters to HTML entities. */\\r\\n    var htmlEscapes = {\\r\\n        '&': '&amp;',\\r\\n        '<': '&lt;',\\r\\n        '>': '&gt;',\\r\\n        '\\\"': '&quot;',\\r\\n        \\\"'\\\": '&#39;'\\r\\n    };\\r\\n\\r\\n    /** Used to map HTML entities to characters. */\\r\\n    var htmlUnescapes = {\\r\\n        '&amp;': '&',\\r\\n        '&lt;': '<',\\r\\n        '&gt;': '>',\\r\\n        '&quot;': '\\\"',\\r\\n        '&#39;': \\\"'\\\"\\r\\n    };\\r\\n\\r\\n    /** Built-in method references without a dependency on `root`. */\\r\\n    var freeParseFloat = parseFloat,\\r\\n        freeParseInt = parseInt;\\r\\n\\r\\n    /** Detect free variable `global` from Node.js. */\\r\\n    var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\\r\\n\\r\\n    /** Detect free variable `self`. */\\r\\n    var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\\r\\n\\r\\n    /** Used as a reference to the global object. */\\r\\n    var root = freeGlobal || freeSelf || Function('return this')();\\r\\n\\r\\n    /** Detect free variable `exports`. */\\r\\n    var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\\r\\n\\r\\n    /** Detect free variable `module`. */\\r\\n    var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\\r\\n\\r\\n    /** Detect the popular CommonJS extension `module.exports`. */\\r\\n    var moduleExports = freeModule && freeModule.exports === freeExports;\\r\\n\\r\\n    /** Detect free variable `process` from Node.js. */\\r\\n    var freeProcess = moduleExports && freeGlobal.process;\\r\\n\\r\\n    /** Used to access faster Node.js helpers. */\\r\\n    var nodeUtil = (function() {\\r\\n        try {\\r\\n            return freeProcess && freeProcess.binding && freeProcess.binding('util');\\r\\n        } catch (e) {}\\r\\n    }());\\r\\n\\r\\n    /* Node.js helper references. */\\r\\n    var nodeIsDate = nodeUtil && nodeUtil.isDate,\\r\\n        nodeIsMap = nodeUtil && nodeUtil.isMap,\\r\\n        nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\\r\\n        nodeIsSet = nodeUtil && nodeUtil.isSet,\\r\\n        nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\\r\\n\\r\\n    /*--------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * A faster alternative to `Function#apply`, this function invokes `func`\\r\\n     * with the `this` binding of `thisArg` and the arguments of `args`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to invoke.\\r\\n     * @param {*} thisArg The `this` binding of `func`.\\r\\n     * @param {Array} args The arguments to invoke `func` with.\\r\\n     * @returns {*} Returns the result of `func`.\\r\\n     */\\r\\n    function apply(func, thisArg, args) {\\r\\n        switch (args.length) {\\r\\n            case 0: return func.call(thisArg);\\r\\n            case 1: return func.call(thisArg, args[0]);\\r\\n            case 2: return func.call(thisArg, args[0], args[1]);\\r\\n            case 3: return func.call(thisArg, args[0], args[1], args[2]);\\r\\n        }\\r\\n        return func.apply(thisArg, args);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `baseAggregator` for arrays.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} [array] The array to iterate over.\\r\\n     * @param {Function} setter The function to set `accumulator` values.\\r\\n     * @param {Function} iteratee The iteratee to transform keys.\\r\\n     * @param {Object} accumulator The initial aggregated object.\\r\\n     * @returns {Function} Returns `accumulator`.\\r\\n     */\\r\\n    function arrayAggregator(array, setter, iteratee, accumulator) {\\r\\n        var index = -1,\\r\\n            length = array == null ? 0 : array.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            var value = array[index];\\r\\n            setter(accumulator, value, iteratee(value), array);\\r\\n        }\\r\\n        return accumulator;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `_.forEach` for arrays without support for\\r\\n     * iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} [array] The array to iterate over.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @returns {Array} Returns `array`.\\r\\n     */\\r\\n    function arrayEach(array, iteratee) {\\r\\n        var index = -1,\\r\\n            length = array == null ? 0 : array.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            if (iteratee(array[index], index, array) === false) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return array;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `_.every` for arrays without support for\\r\\n     * iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} [array] The array to iterate over.\\r\\n     * @param {Function} predicate The function invoked per iteration.\\r\\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\\r\\n     *  else `false`.\\r\\n     */\\r\\n    function arrayEvery(array, predicate) {\\r\\n        var index = -1,\\r\\n            length = array == null ? 0 : array.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            if (!predicate(array[index], index, array)) {\\r\\n                return false;\\r\\n            }\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `_.filter` for arrays without support for\\r\\n     * iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} [array] The array to iterate over.\\r\\n     * @param {Function} predicate The function invoked per iteration.\\r\\n     * @returns {Array} Returns the new filtered array.\\r\\n     */\\r\\n    function arrayFilter(array, predicate) {\\r\\n        var index = -1,\\r\\n            length = array == null ? 0 : array.length,\\r\\n            resIndex = 0,\\r\\n            result = [];\\r\\n\\r\\n        while (++index < length) {\\r\\n            var value = array[index];\\r\\n            if (predicate(value, index, array)) {\\r\\n                result[resIndex++] = value;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `_.includes` for arrays without support for\\r\\n     * specifying an index to search from.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} [array] The array to inspect.\\r\\n     * @param {*} target The value to search for.\\r\\n     * @returns {boolean} Returns `true` if `target` is found, else `false`.\\r\\n     */\\r\\n    function arrayIncludes(array, value) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        return !!length && baseIndexOf(array, value, 0) > -1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This function is like `arrayIncludes` except that it accepts a comparator.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} [array] The array to inspect.\\r\\n     * @param {*} target The value to search for.\\r\\n     * @param {Function} comparator The comparator invoked per element.\\r\\n     * @returns {boolean} Returns `true` if `target` is found, else `false`.\\r\\n     */\\r\\n    function arrayIncludesWith(array, value, comparator) {\\r\\n        var index = -1,\\r\\n            length = array == null ? 0 : array.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            if (comparator(value, array[index])) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `_.map` for arrays without support for iteratee\\r\\n     * shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} [array] The array to iterate over.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @returns {Array} Returns the new mapped array.\\r\\n     */\\r\\n    function arrayMap(array, iteratee) {\\r\\n        var index = -1,\\r\\n            length = array == null ? 0 : array.length,\\r\\n            result = Array(length);\\r\\n\\r\\n        while (++index < length) {\\r\\n            result[index] = iteratee(array[index], index, array);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Appends the elements of `values` to `array`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to modify.\\r\\n     * @param {Array} values The values to append.\\r\\n     * @returns {Array} Returns `array`.\\r\\n     */\\r\\n    function arrayPush(array, values) {\\r\\n        var index = -1,\\r\\n            length = values.length,\\r\\n            offset = array.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            array[offset + index] = values[index];\\r\\n        }\\r\\n        return array;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `_.reduce` for arrays without support for\\r\\n     * iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} [array] The array to iterate over.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @param {*} [accumulator] The initial value.\\r\\n     * @param {boolean} [initAccum] Specify using the first element of `array` as\\r\\n     *  the initial value.\\r\\n     * @returns {*} Returns the accumulated value.\\r\\n     */\\r\\n    function arrayReduce(array, iteratee, accumulator, initAccum) {\\r\\n        var index = -1,\\r\\n            length = array == null ? 0 : array.length;\\r\\n\\r\\n        if (initAccum && length) {\\r\\n            accumulator = array[++index];\\r\\n        }\\r\\n        while (++index < length) {\\r\\n            accumulator = iteratee(accumulator, array[index], index, array);\\r\\n        }\\r\\n        return accumulator;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `_.some` for arrays without support for iteratee\\r\\n     * shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} [array] The array to iterate over.\\r\\n     * @param {Function} predicate The function invoked per iteration.\\r\\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\\r\\n     *  else `false`.\\r\\n     */\\r\\n    function arraySome(array, predicate) {\\r\\n        var index = -1,\\r\\n            length = array == null ? 0 : array.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            if (predicate(array[index], index, array)) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the size of an ASCII `string`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} string The string inspect.\\r\\n     * @returns {number} Returns the string size.\\r\\n     */\\r\\n    var asciiSize = baseProperty('length');\\r\\n\\r\\n    /**\\r\\n     * Converts an ASCII `string` to an array.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} string The string to convert.\\r\\n     * @returns {Array} Returns the converted array.\\r\\n     */\\r\\n    function asciiToArray(string) {\\r\\n        return string.split('');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of methods like `_.findKey` and `_.findLastKey`,\\r\\n     * without support for iteratee shorthands, which iterates over `collection`\\r\\n     * using `eachFunc`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array|Object} collection The collection to inspect.\\r\\n     * @param {Function} predicate The function invoked per iteration.\\r\\n     * @param {Function} eachFunc The function to iterate over `collection`.\\r\\n     * @returns {*} Returns the found element or its key, else `undefined`.\\r\\n     */\\r\\n    function baseFindKey(collection, predicate, eachFunc) {\\r\\n        var result;\\r\\n        eachFunc(collection, function(value, key, collection) {\\r\\n            if (predicate(value, key, collection)) {\\r\\n                result = key;\\r\\n                return false;\\r\\n            }\\r\\n        });\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\\r\\n     * support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {Function} predicate The function invoked per iteration.\\r\\n     * @param {number} fromIndex The index to search from.\\r\\n     * @param {boolean} [fromRight] Specify iterating from right to left.\\r\\n     * @returns {number} Returns the index of the matched value, else `-1`.\\r\\n     */\\r\\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\\r\\n        var length = array.length,\\r\\n            index = fromIndex + (fromRight ? 1 : -1);\\r\\n\\r\\n        while ((fromRight ? index-- : ++index < length)) {\\r\\n            if (predicate(array[index], index, array)) {\\r\\n                return index;\\r\\n            }\\r\\n        }\\r\\n        return -1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {*} value The value to search for.\\r\\n     * @param {number} fromIndex The index to search from.\\r\\n     * @returns {number} Returns the index of the matched value, else `-1`.\\r\\n     */\\r\\n    function baseIndexOf(array, value, fromIndex) {\\r\\n        return value === value\\r\\n            ? strictIndexOf(array, value, fromIndex)\\r\\n            : baseFindIndex(array, baseIsNaN, fromIndex);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.isNaN` without support for number objects.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\\r\\n     */\\r\\n    function baseIsNaN(value) {\\r\\n        return value !== value;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.property` without support for deep paths.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} key The key of the property to get.\\r\\n     * @returns {Function} Returns the new accessor function.\\r\\n     */\\r\\n    function baseProperty(key) {\\r\\n        return function(object) {\\r\\n            return object == null ? undefined : object[key];\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.propertyOf` without support for deep paths.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Function} Returns the new accessor function.\\r\\n     */\\r\\n    function basePropertyOf(object) {\\r\\n        return function(key) {\\r\\n            return object == null ? undefined : object[key];\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.reduce` and `_.reduceRight`, without support\\r\\n     * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @param {*} accumulator The initial value.\\r\\n     * @param {boolean} initAccum Specify using the first or last element of\\r\\n     *  `collection` as the initial value.\\r\\n     * @param {Function} eachFunc The function to iterate over `collection`.\\r\\n     * @returns {*} Returns the accumulated value.\\r\\n     */\\r\\n    function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\\r\\n        eachFunc(collection, function(value, index, collection) {\\r\\n            accumulator = initAccum\\r\\n                ? (initAccum = false, value)\\r\\n                : iteratee(accumulator, value, index, collection);\\r\\n        });\\r\\n        return accumulator;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.sortBy` which uses `comparer` to define the\\r\\n     * sort order of `array` and replaces criteria objects with their corresponding\\r\\n     * values.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to sort.\\r\\n     * @param {Function} comparer The function to define sort order.\\r\\n     * @returns {Array} Returns `array`.\\r\\n     */\\r\\n    function baseSortBy(array, comparer) {\\r\\n        var length = array.length;\\r\\n\\r\\n        array.sort(comparer);\\r\\n        while (length--) {\\r\\n            array[length] = array[length].value;\\r\\n        }\\r\\n        return array;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.times` without support for iteratee shorthands\\r\\n     * or max array length checks.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {number} n The number of times to invoke `iteratee`.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @returns {Array} Returns the array of results.\\r\\n     */\\r\\n    function baseTimes(n, iteratee) {\\r\\n        var index = -1,\\r\\n            result = Array(n);\\r\\n\\r\\n        while (++index < n) {\\r\\n            result[index] = iteratee(index);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.unary` without support for storing metadata.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to cap arguments for.\\r\\n     * @returns {Function} Returns the new capped function.\\r\\n     */\\r\\n    function baseUnary(func) {\\r\\n        return function(value) {\\r\\n            return func(value);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\\r\\n     * array of `object` property values corresponding to the property names\\r\\n     * of `props`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {Array} props The property names to get values for.\\r\\n     * @returns {Object} Returns the array of property values.\\r\\n     */\\r\\n    function baseValues(object, props) {\\r\\n        return arrayMap(props, function(key) {\\r\\n            return object[key];\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if a `cache` value for `key` exists.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} cache The cache to query.\\r\\n     * @param {string} key The key of the entry to check.\\r\\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\r\\n     */\\r\\n    function cacheHas(cache, key) {\\r\\n        return cache.has(key);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\\r\\n     * that is not found in the character symbols.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} strSymbols The string symbols to inspect.\\r\\n     * @param {Array} chrSymbols The character symbols to find.\\r\\n     * @returns {number} Returns the index of the first unmatched string symbol.\\r\\n     */\\r\\n    function charsStartIndex(strSymbols, chrSymbols) {\\r\\n        var index = -1,\\r\\n            length = strSymbols.length;\\r\\n\\r\\n        while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\\r\\n        return index;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\\r\\n     * that is not found in the character symbols.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} strSymbols The string symbols to inspect.\\r\\n     * @param {Array} chrSymbols The character symbols to find.\\r\\n     * @returns {number} Returns the index of the last unmatched string symbol.\\r\\n     */\\r\\n    function charsEndIndex(strSymbols, chrSymbols) {\\r\\n        var index = strSymbols.length;\\r\\n\\r\\n        while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\\r\\n        return index;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the number of `placeholder` occurrences in `array`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {*} placeholder The placeholder to search for.\\r\\n     * @returns {number} Returns the placeholder count.\\r\\n     */\\r\\n    function countHolders(array, placeholder) {\\r\\n        var length = array.length,\\r\\n            result = 0;\\r\\n\\r\\n        while (length--) {\\r\\n            if (array[length] === placeholder) {\\r\\n                ++result;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Used by `_.escape` to convert characters to HTML entities.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} chr The matched character to escape.\\r\\n     * @returns {string} Returns the escaped character.\\r\\n     */\\r\\n    var escapeHtmlChar = basePropertyOf(htmlEscapes);\\r\\n\\r\\n    /**\\r\\n     * Gets the value at `key` of `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} [object] The object to query.\\r\\n     * @param {string} key The key of the property to get.\\r\\n     * @returns {*} Returns the property value.\\r\\n     */\\r\\n    function getValue(object, key) {\\r\\n        return object == null ? undefined : object[key];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `string` contains Unicode symbols.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} string The string to inspect.\\r\\n     * @returns {boolean} Returns `true` if a symbol is found, else `false`.\\r\\n     */\\r\\n    function hasUnicode(string) {\\r\\n        return reHasUnicode.test(string);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `iterator` to an array.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} iterator The iterator to convert.\\r\\n     * @returns {Array} Returns the converted array.\\r\\n     */\\r\\n    function iteratorToArray(iterator) {\\r\\n        var data,\\r\\n            result = [];\\r\\n\\r\\n        while (!(data = iterator.next()).done) {\\r\\n            result.push(data.value);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `map` to its key-value pairs.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} map The map to convert.\\r\\n     * @returns {Array} Returns the key-value pairs.\\r\\n     */\\r\\n    function mapToArray(map) {\\r\\n        var index = -1,\\r\\n            result = Array(map.size);\\r\\n\\r\\n        map.forEach(function(value, key) {\\r\\n            result[++index] = [key, value];\\r\\n        });\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a unary function that invokes `func` with its argument transformed.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to wrap.\\r\\n     * @param {Function} transform The argument transform.\\r\\n     * @returns {Function} Returns the new function.\\r\\n     */\\r\\n    function overArg(func, transform) {\\r\\n        return function(arg) {\\r\\n            return func(transform(arg));\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Replaces all `placeholder` elements in `array` with an internal placeholder\\r\\n     * and returns an array of their indexes.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to modify.\\r\\n     * @param {*} placeholder The placeholder to replace.\\r\\n     * @returns {Array} Returns the new array of placeholder indexes.\\r\\n     */\\r\\n    function replaceHolders(array, placeholder) {\\r\\n        var index = -1,\\r\\n            length = array.length,\\r\\n            resIndex = 0,\\r\\n            result = [];\\r\\n\\r\\n        while (++index < length) {\\r\\n            var value = array[index];\\r\\n            if (value === placeholder || value === PLACEHOLDER) {\\r\\n                array[index] = PLACEHOLDER;\\r\\n                result[resIndex++] = index;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the value at `key`, unless `key` is \\\"__proto__\\\".\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {string} key The key of the property to get.\\r\\n     * @returns {*} Returns the property value.\\r\\n     */\\r\\n    function safeGet(object, key) {\\r\\n        return key == '__proto__'\\r\\n            ? undefined\\r\\n            : object[key];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `set` to an array of its values.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} set The set to convert.\\r\\n     * @returns {Array} Returns the values.\\r\\n     */\\r\\n    function setToArray(set) {\\r\\n        var index = -1,\\r\\n            result = Array(set.size);\\r\\n\\r\\n        set.forEach(function(value) {\\r\\n            result[++index] = value;\\r\\n        });\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `_.indexOf` which performs strict equality\\r\\n     * comparisons of values, i.e. `===`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {*} value The value to search for.\\r\\n     * @param {number} fromIndex The index to search from.\\r\\n     * @returns {number} Returns the index of the matched value, else `-1`.\\r\\n     */\\r\\n    function strictIndexOf(array, value, fromIndex) {\\r\\n        var index = fromIndex - 1,\\r\\n            length = array.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            if (array[index] === value) {\\r\\n                return index;\\r\\n            }\\r\\n        }\\r\\n        return -1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the number of symbols in `string`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} string The string to inspect.\\r\\n     * @returns {number} Returns the string size.\\r\\n     */\\r\\n    function stringSize(string) {\\r\\n        return hasUnicode(string)\\r\\n            ? unicodeSize(string)\\r\\n            : asciiSize(string);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `string` to an array.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} string The string to convert.\\r\\n     * @returns {Array} Returns the converted array.\\r\\n     */\\r\\n    function stringToArray(string) {\\r\\n        return hasUnicode(string)\\r\\n            ? unicodeToArray(string)\\r\\n            : asciiToArray(string);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Used by `_.unescape` to convert HTML entities to characters.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} chr The matched character to unescape.\\r\\n     * @returns {string} Returns the unescaped character.\\r\\n     */\\r\\n    var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\\r\\n\\r\\n    /**\\r\\n     * Gets the size of a Unicode `string`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} string The string inspect.\\r\\n     * @returns {number} Returns the string size.\\r\\n     */\\r\\n    function unicodeSize(string) {\\r\\n        var result = reUnicode.lastIndex = 0;\\r\\n        while (reUnicode.test(string)) {\\r\\n            ++result;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts a Unicode `string` to an array.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} string The string to convert.\\r\\n     * @returns {Array} Returns the converted array.\\r\\n     */\\r\\n    function unicodeToArray(string) {\\r\\n        return string.match(reUnicode) || [];\\r\\n    }\\r\\n\\r\\n    /*--------------------------------------------------------------------------*/\\r\\n\\r\\n    /** Used for built-in method references. */\\r\\n    var arrayProto = Array.prototype,\\r\\n        funcProto = Function.prototype,\\r\\n        objectProto = Object.prototype;\\r\\n\\r\\n    /** Used to detect overreaching core-js shims. */\\r\\n    var coreJsData = root['__core-js_shared__'];\\r\\n\\r\\n    /** Used to resolve the decompiled source of functions. */\\r\\n    var funcToString = funcProto.toString;\\r\\n\\r\\n    /** Used to check objects for own properties. */\\r\\n    var hasOwnProperty = objectProto.hasOwnProperty;\\r\\n\\r\\n    /** Used to generate unique IDs. */\\r\\n    var idCounter = 0;\\r\\n\\r\\n    /** Used to detect methods masquerading as native. */\\r\\n    var maskSrcKey = (function() {\\r\\n        var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\\r\\n        return uid ? ('Symbol(src)_1.' + uid) : '';\\r\\n    }());\\r\\n\\r\\n    /**\\r\\n     * Used to resolve the\\r\\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\\r\\n     * of values.\\r\\n     */\\r\\n    var nativeObjectToString = objectProto.toString;\\r\\n\\r\\n    /** Used to infer the `Object` constructor. */\\r\\n    var objectCtorString = funcToString.call(Object);\\r\\n\\r\\n    /** Used to restore the original `_` reference in `_.noConflict`. */\\r\\n    var oldDash = root._;\\r\\n\\r\\n    /** Used to detect if a method is native. */\\r\\n    var reIsNative = RegExp('^' +\\r\\n        funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\\\\\$&')\\r\\n            .replace(/hasOwnProperty|(function).*?(?=\\\\\\\\\\\\()| for .+?(?=\\\\\\\\\\\\])/g, '$1.*?') + '$'\\r\\n    );\\r\\n\\r\\n    /** Built-in value references. */\\r\\n    var Buffer = moduleExports ? root.Buffer : undefined,\\r\\n        Symbol = root.Symbol,\\r\\n        Uint8Array = root.Uint8Array,\\r\\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\\r\\n        getPrototype = overArg(Object.getPrototypeOf, Object),\\r\\n        objectCreate = Object.create,\\r\\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\\r\\n        splice = arrayProto.splice,\\r\\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\\r\\n        symIterator = Symbol ? Symbol.iterator : undefined,\\r\\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\\r\\n\\r\\n    var defineProperty = (function() {\\r\\n        try {\\r\\n            var func = getNative(Object, 'defineProperty');\\r\\n            func({}, '', {});\\r\\n            return func;\\r\\n        } catch (e) {}\\r\\n    }());\\r\\n\\r\\n    /* Built-in method references for those with the same name as other `lodash` methods. */\\r\\n    var nativeCeil = Math.ceil,\\r\\n        nativeFloor = Math.floor,\\r\\n        nativeGetSymbols = Object.getOwnPropertySymbols,\\r\\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\\r\\n        nativeIsFinite = root.isFinite,\\r\\n        nativeKeys = overArg(Object.keys, Object),\\r\\n        nativeMax = Math.max,\\r\\n        nativeMin = Math.min,\\r\\n        nativeNow = Date.now,\\r\\n        nativeRandom = Math.random,\\r\\n        nativeReverse = arrayProto.reverse;\\r\\n\\r\\n    /* Built-in method references that are verified to be native. */\\r\\n    var DataView = getNative(root, 'DataView'),\\r\\n        Map = getNative(root, 'Map'),\\r\\n        Promise = getNative(root, 'Promise'),\\r\\n        Set = getNative(root, 'Set'),\\r\\n        WeakMap = getNative(root, 'WeakMap'),\\r\\n        nativeCreate = getNative(Object, 'create');\\r\\n\\r\\n    /** Used to store function metadata. */\\r\\n    var metaMap = WeakMap && new WeakMap;\\r\\n\\r\\n    /** Used to lookup unminified function names. */\\r\\n    var realNames = {};\\r\\n\\r\\n    /** Used to detect maps, sets, and weakmaps. */\\r\\n    var dataViewCtorString = toSource(DataView),\\r\\n        mapCtorString = toSource(Map),\\r\\n        promiseCtorString = toSource(Promise),\\r\\n        setCtorString = toSource(Set),\\r\\n        weakMapCtorString = toSource(WeakMap);\\r\\n\\r\\n    /** Used to convert symbols to primitives and strings. */\\r\\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\\r\\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\\r\\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates a `lodash` object which wraps `value` to enable implicit method\\r\\n     * chain sequences. Methods that operate on and return arrays, collections,\\r\\n     * and functions can be chained together. Methods that retrieve a single value\\r\\n     * or may return a primitive value will automatically end the chain sequence\\r\\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\\r\\n     * with `_#value`.\\r\\n     *\\r\\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\\r\\n     * enabled using `_.chain`.\\r\\n     *\\r\\n     * The execution of chained methods is lazy, that is, it's deferred until\\r\\n     * `_#value` is implicitly or explicitly called.\\r\\n     *\\r\\n     * Lazy evaluation allows several methods to support shortcut fusion.\\r\\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\\r\\n     * the creation of intermediate arrays and can greatly reduce the number of\\r\\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\\r\\n     * fusion if the section is applied to an array and iteratees accept only\\r\\n     * one argument. The heuristic for whether a section qualifies for shortcut\\r\\n     * fusion is subject to change.\\r\\n     *\\r\\n     * Chaining is supported in custom builds as long as the `_#value` method is\\r\\n     * directly or indirectly included in the build.\\r\\n     *\\r\\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\\r\\n     *\\r\\n     * The wrapper `Array` methods are:\\r\\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\\r\\n     *\\r\\n     * The wrapper `String` methods are:\\r\\n     * `replace` and `split`\\r\\n     *\\r\\n     * The wrapper methods that support shortcut fusion are:\\r\\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\\r\\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\\r\\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\\r\\n     *\\r\\n     * The chainable wrapper methods are:\\r\\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\\r\\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\\r\\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\\r\\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\\r\\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\\r\\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\\r\\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\\r\\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\\r\\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\\r\\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\\r\\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\\r\\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\\r\\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\\r\\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\\r\\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\\r\\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\\r\\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\\r\\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\\r\\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\\r\\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\\r\\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\\r\\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\\r\\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\\r\\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\\r\\n     *\\r\\n     * The wrapper methods that are **not** chainable by default are:\\r\\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\\r\\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\\r\\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\\r\\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\\r\\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\\r\\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\\r\\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\\r\\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\\r\\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\\r\\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\\r\\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\\r\\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\\r\\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\\r\\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\\r\\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\\r\\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\\r\\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\\r\\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\\r\\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\\r\\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\\r\\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\\r\\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\\r\\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\\r\\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\\r\\n     * `upperFirst`, `value`, and `words`\\r\\n     *\\r\\n     * @name _\\r\\n     * @constructor\\r\\n     * @category Seq\\r\\n     * @param {*} value The value to wrap in a `lodash` instance.\\r\\n     * @returns {Object} Returns the new `lodash` wrapper instance.\\r\\n     * @example\\r\\n     *\\r\\n     * function square(n) {\\r\\n     *   return n * n;\\r\\n     * }\\r\\n     *\\r\\n     * var wrapped = _([1, 2, 3]);\\r\\n     *\\r\\n     * // Returns an unwrapped value.\\r\\n     * wrapped.reduce(_.add);\\r\\n     * // => 6\\r\\n     *\\r\\n     * // Returns a wrapped value.\\r\\n     * var squares = wrapped.map(square);\\r\\n     *\\r\\n     * _.isArray(squares);\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isArray(squares.value());\\r\\n     * // => true\\r\\n     */\\r\\n    function lodash(value) {\\r\\n        if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\\r\\n            if (value instanceof LodashWrapper) {\\r\\n                return value;\\r\\n            }\\r\\n            if (hasOwnProperty.call(value, '__wrapped__')) {\\r\\n                return wrapperClone(value);\\r\\n            }\\r\\n        }\\r\\n        return new LodashWrapper(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.create` without support for assigning\\r\\n     * properties to the created object.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} proto The object to inherit from.\\r\\n     * @returns {Object} Returns the new object.\\r\\n     */\\r\\n    var baseCreate = (function() {\\r\\n        function object() {}\\r\\n        return function(proto) {\\r\\n            if (!isObject(proto)) {\\r\\n                return {};\\r\\n            }\\r\\n            if (objectCreate) {\\r\\n                return objectCreate(proto);\\r\\n            }\\r\\n            object.prototype = proto;\\r\\n            var result = new object;\\r\\n            object.prototype = undefined;\\r\\n            return result;\\r\\n        };\\r\\n    }());\\r\\n\\r\\n    /**\\r\\n     * The function whose prototype chain sequence wrappers inherit from.\\r\\n     *\\r\\n     * @private\\r\\n     */\\r\\n    function baseLodash() {\\r\\n        // No operation performed.\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base constructor for creating `lodash` wrapper objects.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to wrap.\\r\\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\\r\\n     */\\r\\n    function LodashWrapper(value, chainAll) {\\r\\n        this.__wrapped__ = value;\\r\\n        this.__actions__ = [];\\r\\n        this.__chain__ = !!chainAll;\\r\\n        this.__index__ = 0;\\r\\n        this.__values__ = undefined;\\r\\n    }\\r\\n\\r\\n    // Ensure wrappers are instances of `baseLodash`.\\r\\n    lodash.prototype = baseLodash.prototype;\\r\\n    lodash.prototype.constructor = lodash;\\r\\n\\r\\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\\r\\n    LodashWrapper.prototype.constructor = LodashWrapper;\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\\r\\n     *\\r\\n     * @private\\r\\n     * @constructor\\r\\n     * @param {*} value The value to wrap.\\r\\n     */\\r\\n    function LazyWrapper(value) {\\r\\n        this.__wrapped__ = value;\\r\\n        this.__actions__ = [];\\r\\n        this.__dir__ = 1;\\r\\n        this.__filtered__ = false;\\r\\n        this.__iteratees__ = [];\\r\\n        this.__takeCount__ = MAX_ARRAY_LENGTH;\\r\\n        this.__views__ = [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a clone of the lazy wrapper object.\\r\\n     *\\r\\n     * @private\\r\\n     * @name clone\\r\\n     * @memberOf LazyWrapper\\r\\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\\r\\n     */\\r\\n    function lazyClone() {\\r\\n        var result = new LazyWrapper(this.__wrapped__);\\r\\n        result.__actions__ = copyArray(this.__actions__);\\r\\n        result.__dir__ = this.__dir__;\\r\\n        result.__filtered__ = this.__filtered__;\\r\\n        result.__iteratees__ = copyArray(this.__iteratees__);\\r\\n        result.__takeCount__ = this.__takeCount__;\\r\\n        result.__views__ = copyArray(this.__views__);\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reverses the direction of lazy iteration.\\r\\n     *\\r\\n     * @private\\r\\n     * @name reverse\\r\\n     * @memberOf LazyWrapper\\r\\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\\r\\n     */\\r\\n    function lazyReverse() {\\r\\n        if (this.__filtered__) {\\r\\n            var result = new LazyWrapper(this);\\r\\n            result.__dir__ = -1;\\r\\n            result.__filtered__ = true;\\r\\n        } else {\\r\\n            result = this.clone();\\r\\n            result.__dir__ *= -1;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Extracts the unwrapped value from its lazy wrapper.\\r\\n     *\\r\\n     * @private\\r\\n     * @name value\\r\\n     * @memberOf LazyWrapper\\r\\n     * @returns {*} Returns the unwrapped value.\\r\\n     */\\r\\n    function lazyValue() {\\r\\n        var array = this.__wrapped__.value(),\\r\\n            dir = this.__dir__,\\r\\n            isArr = isArray(array),\\r\\n            isRight = dir < 0,\\r\\n            arrLength = isArr ? array.length : 0,\\r\\n            view = getView(0, arrLength, this.__views__),\\r\\n            start = view.start,\\r\\n            end = view.end,\\r\\n            length = end - start,\\r\\n            index = isRight ? end : (start - 1),\\r\\n            iteratees = this.__iteratees__,\\r\\n            iterLength = iteratees.length,\\r\\n            resIndex = 0,\\r\\n            takeCount = nativeMin(length, this.__takeCount__);\\r\\n\\r\\n        if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\\r\\n            return baseWrapperValue(array, this.__actions__);\\r\\n        }\\r\\n        var result = [];\\r\\n\\r\\n        outer:\\r\\n            while (length-- && resIndex < takeCount) {\\r\\n                index += dir;\\r\\n\\r\\n                var iterIndex = -1,\\r\\n                    value = array[index];\\r\\n\\r\\n                while (++iterIndex < iterLength) {\\r\\n                    var data = iteratees[iterIndex],\\r\\n                        iteratee = data.iteratee,\\r\\n                        type = data.type,\\r\\n                        computed = iteratee(value);\\r\\n\\r\\n                    if (type == LAZY_MAP_FLAG) {\\r\\n                        value = computed;\\r\\n                    } else if (!computed) {\\r\\n                        if (type == LAZY_FILTER_FLAG) {\\r\\n                            continue outer;\\r\\n                        } else {\\r\\n                            break outer;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                result[resIndex++] = value;\\r\\n            }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\\r\\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\\r\\n    LazyWrapper.prototype.constructor = LazyWrapper;\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates a hash object.\\r\\n     *\\r\\n     * @private\\r\\n     * @constructor\\r\\n     * @param {Array} [entries] The key-value pairs to cache.\\r\\n     */\\r\\n    function Hash(entries) {\\r\\n        var index = -1,\\r\\n            length = entries == null ? 0 : entries.length;\\r\\n\\r\\n        this.clear();\\r\\n        while (++index < length) {\\r\\n            var entry = entries[index];\\r\\n            this.set(entry[0], entry[1]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes all key-value entries from the hash.\\r\\n     *\\r\\n     * @private\\r\\n     * @name clear\\r\\n     * @memberOf Hash\\r\\n     */\\r\\n    function hashClear() {\\r\\n        this.__data__ = nativeCreate ? nativeCreate(null) : {};\\r\\n        this.size = 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes `key` and its value from the hash.\\r\\n     *\\r\\n     * @private\\r\\n     * @name delete\\r\\n     * @memberOf Hash\\r\\n     * @param {Object} hash The hash to modify.\\r\\n     * @param {string} key The key of the value to remove.\\r\\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\r\\n     */\\r\\n    function hashDelete(key) {\\r\\n        var result = this.has(key) && delete this.__data__[key];\\r\\n        this.size -= result ? 1 : 0;\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the hash value for `key`.\\r\\n     *\\r\\n     * @private\\r\\n     * @name get\\r\\n     * @memberOf Hash\\r\\n     * @param {string} key The key of the value to get.\\r\\n     * @returns {*} Returns the entry value.\\r\\n     */\\r\\n    function hashGet(key) {\\r\\n        var data = this.__data__;\\r\\n        if (nativeCreate) {\\r\\n            var result = data[key];\\r\\n            return result === HASH_UNDEFINED ? undefined : result;\\r\\n        }\\r\\n        return hasOwnProperty.call(data, key) ? data[key] : undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if a hash value for `key` exists.\\r\\n     *\\r\\n     * @private\\r\\n     * @name has\\r\\n     * @memberOf Hash\\r\\n     * @param {string} key The key of the entry to check.\\r\\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\r\\n     */\\r\\n    function hashHas(key) {\\r\\n        var data = this.__data__;\\r\\n        return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the hash `key` to `value`.\\r\\n     *\\r\\n     * @private\\r\\n     * @name set\\r\\n     * @memberOf Hash\\r\\n     * @param {string} key The key of the value to set.\\r\\n     * @param {*} value The value to set.\\r\\n     * @returns {Object} Returns the hash instance.\\r\\n     */\\r\\n    function hashSet(key, value) {\\r\\n        var data = this.__data__;\\r\\n        this.size += this.has(key) ? 0 : 1;\\r\\n        data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\\r\\n        return this;\\r\\n    }\\r\\n\\r\\n    // Add methods to `Hash`.\\r\\n    Hash.prototype.clear = hashClear;\\r\\n    Hash.prototype['delete'] = hashDelete;\\r\\n    Hash.prototype.get = hashGet;\\r\\n    Hash.prototype.has = hashHas;\\r\\n    Hash.prototype.set = hashSet;\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates an list cache object.\\r\\n     *\\r\\n     * @private\\r\\n     * @constructor\\r\\n     * @param {Array} [entries] The key-value pairs to cache.\\r\\n     */\\r\\n    function ListCache(entries) {\\r\\n        var index = -1,\\r\\n            length = entries == null ? 0 : entries.length;\\r\\n\\r\\n        this.clear();\\r\\n        while (++index < length) {\\r\\n            var entry = entries[index];\\r\\n            this.set(entry[0], entry[1]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes all key-value entries from the list cache.\\r\\n     *\\r\\n     * @private\\r\\n     * @name clear\\r\\n     * @memberOf ListCache\\r\\n     */\\r\\n    function listCacheClear() {\\r\\n        this.__data__ = [];\\r\\n        this.size = 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes `key` and its value from the list cache.\\r\\n     *\\r\\n     * @private\\r\\n     * @name delete\\r\\n     * @memberOf ListCache\\r\\n     * @param {string} key The key of the value to remove.\\r\\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\r\\n     */\\r\\n    function listCacheDelete(key) {\\r\\n        var data = this.__data__,\\r\\n            index = assocIndexOf(data, key);\\r\\n\\r\\n        if (index < 0) {\\r\\n            return false;\\r\\n        }\\r\\n        var lastIndex = data.length - 1;\\r\\n        if (index == lastIndex) {\\r\\n            data.pop();\\r\\n        } else {\\r\\n            splice.call(data, index, 1);\\r\\n        }\\r\\n        --this.size;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the list cache value for `key`.\\r\\n     *\\r\\n     * @private\\r\\n     * @name get\\r\\n     * @memberOf ListCache\\r\\n     * @param {string} key The key of the value to get.\\r\\n     * @returns {*} Returns the entry value.\\r\\n     */\\r\\n    function listCacheGet(key) {\\r\\n        var data = this.__data__,\\r\\n            index = assocIndexOf(data, key);\\r\\n\\r\\n        return index < 0 ? undefined : data[index][1];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if a list cache value for `key` exists.\\r\\n     *\\r\\n     * @private\\r\\n     * @name has\\r\\n     * @memberOf ListCache\\r\\n     * @param {string} key The key of the entry to check.\\r\\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\r\\n     */\\r\\n    function listCacheHas(key) {\\r\\n        return assocIndexOf(this.__data__, key) > -1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the list cache `key` to `value`.\\r\\n     *\\r\\n     * @private\\r\\n     * @name set\\r\\n     * @memberOf ListCache\\r\\n     * @param {string} key The key of the value to set.\\r\\n     * @param {*} value The value to set.\\r\\n     * @returns {Object} Returns the list cache instance.\\r\\n     */\\r\\n    function listCacheSet(key, value) {\\r\\n        var data = this.__data__,\\r\\n            index = assocIndexOf(data, key);\\r\\n\\r\\n        if (index < 0) {\\r\\n            ++this.size;\\r\\n            data.push([key, value]);\\r\\n        } else {\\r\\n            data[index][1] = value;\\r\\n        }\\r\\n        return this;\\r\\n    }\\r\\n\\r\\n    // Add methods to `ListCache`.\\r\\n    ListCache.prototype.clear = listCacheClear;\\r\\n    ListCache.prototype['delete'] = listCacheDelete;\\r\\n    ListCache.prototype.get = listCacheGet;\\r\\n    ListCache.prototype.has = listCacheHas;\\r\\n    ListCache.prototype.set = listCacheSet;\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates a map cache object to store key-value pairs.\\r\\n     *\\r\\n     * @private\\r\\n     * @constructor\\r\\n     * @param {Array} [entries] The key-value pairs to cache.\\r\\n     */\\r\\n    function MapCache(entries) {\\r\\n        var index = -1,\\r\\n            length = entries == null ? 0 : entries.length;\\r\\n\\r\\n        this.clear();\\r\\n        while (++index < length) {\\r\\n            var entry = entries[index];\\r\\n            this.set(entry[0], entry[1]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes all key-value entries from the map.\\r\\n     *\\r\\n     * @private\\r\\n     * @name clear\\r\\n     * @memberOf MapCache\\r\\n     */\\r\\n    function mapCacheClear() {\\r\\n        this.size = 0;\\r\\n        this.__data__ = {\\r\\n            'hash': new Hash,\\r\\n            'map': new (Map || ListCache),\\r\\n            'string': new Hash\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes `key` and its value from the map.\\r\\n     *\\r\\n     * @private\\r\\n     * @name delete\\r\\n     * @memberOf MapCache\\r\\n     * @param {string} key The key of the value to remove.\\r\\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\r\\n     */\\r\\n    function mapCacheDelete(key) {\\r\\n        var result = getMapData(this, key)['delete'](key);\\r\\n        this.size -= result ? 1 : 0;\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the map value for `key`.\\r\\n     *\\r\\n     * @private\\r\\n     * @name get\\r\\n     * @memberOf MapCache\\r\\n     * @param {string} key The key of the value to get.\\r\\n     * @returns {*} Returns the entry value.\\r\\n     */\\r\\n    function mapCacheGet(key) {\\r\\n        return getMapData(this, key).get(key);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if a map value for `key` exists.\\r\\n     *\\r\\n     * @private\\r\\n     * @name has\\r\\n     * @memberOf MapCache\\r\\n     * @param {string} key The key of the entry to check.\\r\\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\r\\n     */\\r\\n    function mapCacheHas(key) {\\r\\n        return getMapData(this, key).has(key);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the map `key` to `value`.\\r\\n     *\\r\\n     * @private\\r\\n     * @name set\\r\\n     * @memberOf MapCache\\r\\n     * @param {string} key The key of the value to set.\\r\\n     * @param {*} value The value to set.\\r\\n     * @returns {Object} Returns the map cache instance.\\r\\n     */\\r\\n    function mapCacheSet(key, value) {\\r\\n        var data = getMapData(this, key),\\r\\n            size = data.size;\\r\\n\\r\\n        data.set(key, value);\\r\\n        this.size += data.size == size ? 0 : 1;\\r\\n        return this;\\r\\n    }\\r\\n\\r\\n    // Add methods to `MapCache`.\\r\\n    MapCache.prototype.clear = mapCacheClear;\\r\\n    MapCache.prototype['delete'] = mapCacheDelete;\\r\\n    MapCache.prototype.get = mapCacheGet;\\r\\n    MapCache.prototype.has = mapCacheHas;\\r\\n    MapCache.prototype.set = mapCacheSet;\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * Creates an array cache object to store unique values.\\r\\n     *\\r\\n     * @private\\r\\n     * @constructor\\r\\n     * @param {Array} [values] The values to cache.\\r\\n     */\\r\\n    function SetCache(values) {\\r\\n        var index = -1,\\r\\n            length = values == null ? 0 : values.length;\\r\\n\\r\\n        this.__data__ = new MapCache;\\r\\n        while (++index < length) {\\r\\n            this.add(values[index]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds `value` to the array cache.\\r\\n     *\\r\\n     * @private\\r\\n     * @name add\\r\\n     * @memberOf SetCache\\r\\n     * @alias push\\r\\n     * @param {*} value The value to cache.\\r\\n     * @returns {Object} Returns the cache instance.\\r\\n     */\\r\\n    function setCacheAdd(value) {\\r\\n        this.__data__.set(value, HASH_UNDEFINED);\\r\\n        return this;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is in the array cache.\\r\\n     *\\r\\n     * @private\\r\\n     * @name has\\r\\n     * @memberOf SetCache\\r\\n     * @param {*} value The value to search for.\\r\\n     * @returns {number} Returns `true` if `value` is found, else `false`.\\r\\n     */\\r\\n    function setCacheHas(value) {\\r\\n        return this.__data__.has(value);\\r\\n    }\\r\\n\\r\\n    // Add methods to `SetCache`.\\r\\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\\r\\n    SetCache.prototype.has = setCacheHas;\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates a stack cache object to store key-value pairs.\\r\\n     *\\r\\n     * @private\\r\\n     * @constructor\\r\\n     * @param {Array} [entries] The key-value pairs to cache.\\r\\n     */\\r\\n    function Stack(entries) {\\r\\n        var data = this.__data__ = new ListCache(entries);\\r\\n        this.size = data.size;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes all key-value entries from the stack.\\r\\n     *\\r\\n     * @private\\r\\n     * @name clear\\r\\n     * @memberOf Stack\\r\\n     */\\r\\n    function stackClear() {\\r\\n        this.__data__ = new ListCache;\\r\\n        this.size = 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes `key` and its value from the stack.\\r\\n     *\\r\\n     * @private\\r\\n     * @name delete\\r\\n     * @memberOf Stack\\r\\n     * @param {string} key The key of the value to remove.\\r\\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\r\\n     */\\r\\n    function stackDelete(key) {\\r\\n        var data = this.__data__,\\r\\n            result = data['delete'](key);\\r\\n\\r\\n        this.size = data.size;\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the stack value for `key`.\\r\\n     *\\r\\n     * @private\\r\\n     * @name get\\r\\n     * @memberOf Stack\\r\\n     * @param {string} key The key of the value to get.\\r\\n     * @returns {*} Returns the entry value.\\r\\n     */\\r\\n    function stackGet(key) {\\r\\n        return this.__data__.get(key);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if a stack value for `key` exists.\\r\\n     *\\r\\n     * @private\\r\\n     * @name has\\r\\n     * @memberOf Stack\\r\\n     * @param {string} key The key of the entry to check.\\r\\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\r\\n     */\\r\\n    function stackHas(key) {\\r\\n        return this.__data__.has(key);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the stack `key` to `value`.\\r\\n     *\\r\\n     * @private\\r\\n     * @name set\\r\\n     * @memberOf Stack\\r\\n     * @param {string} key The key of the value to set.\\r\\n     * @param {*} value The value to set.\\r\\n     * @returns {Object} Returns the stack cache instance.\\r\\n     */\\r\\n    function stackSet(key, value) {\\r\\n        var data = this.__data__;\\r\\n        if (data instanceof ListCache) {\\r\\n            var pairs = data.__data__;\\r\\n            if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\\r\\n                pairs.push([key, value]);\\r\\n                this.size = ++data.size;\\r\\n                return this;\\r\\n            }\\r\\n            data = this.__data__ = new MapCache(pairs);\\r\\n        }\\r\\n        data.set(key, value);\\r\\n        this.size = data.size;\\r\\n        return this;\\r\\n    }\\r\\n\\r\\n    // Add methods to `Stack`.\\r\\n    Stack.prototype.clear = stackClear;\\r\\n    Stack.prototype['delete'] = stackDelete;\\r\\n    Stack.prototype.get = stackGet;\\r\\n    Stack.prototype.has = stackHas;\\r\\n    Stack.prototype.set = stackSet;\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates an array of the enumerable property names of the array-like `value`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to query.\\r\\n     * @param {boolean} inherited Specify returning inherited property names.\\r\\n     * @returns {Array} Returns the array of property names.\\r\\n     */\\r\\n    function arrayLikeKeys(value, inherited) {\\r\\n        var isArr = isArray(value),\\r\\n            isArg = !isArr && isArguments(value),\\r\\n            isBuff = !isArr && !isArg && isBuffer(value),\\r\\n            isType = !isArr && !isArg && !isBuff && isTypedArray(value),\\r\\n            skipIndexes = isArr || isArg || isBuff || isType,\\r\\n            result = skipIndexes ? baseTimes(value.length, String) : [],\\r\\n            length = result.length;\\r\\n\\r\\n        for (var key in value) {\\r\\n            if ((inherited || hasOwnProperty.call(value, key)) &&\\r\\n                !(skipIndexes && (\\r\\n                    // Safari 9 has enumerable `arguments.length` in strict mode.\\r\\n                    key == 'length' ||\\r\\n                    // Node.js 0.10 has enumerable non-index properties on buffers.\\r\\n                    (isBuff && (key == 'offset' || key == 'parent')) ||\\r\\n                    // PhantomJS 2 has enumerable non-index properties on typed arrays.\\r\\n                    (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\\r\\n                    // Skip index properties.\\r\\n                    isIndex(key, length)\\r\\n                ))) {\\r\\n                result.push(key);\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This function is like `assignValue` except that it doesn't assign\\r\\n     * `undefined` values.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to modify.\\r\\n     * @param {string} key The key of the property to assign.\\r\\n     * @param {*} value The value to assign.\\r\\n     */\\r\\n    function assignMergeValue(object, key, value) {\\r\\n        if ((value !== undefined && !eq(object[key], value)) ||\\r\\n            (value === undefined && !(key in object))) {\\r\\n            baseAssignValue(object, key, value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\\r\\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\r\\n     * for equality comparisons.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to modify.\\r\\n     * @param {string} key The key of the property to assign.\\r\\n     * @param {*} value The value to assign.\\r\\n     */\\r\\n    function assignValue(object, key, value) {\\r\\n        var objValue = object[key];\\r\\n        if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\\r\\n            (value === undefined && !(key in object))) {\\r\\n            baseAssignValue(object, key, value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {*} key The key to search for.\\r\\n     * @returns {number} Returns the index of the matched value, else `-1`.\\r\\n     */\\r\\n    function assocIndexOf(array, key) {\\r\\n        var length = array.length;\\r\\n        while (length--) {\\r\\n            if (eq(array[length][0], key)) {\\r\\n                return length;\\r\\n            }\\r\\n        }\\r\\n        return -1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\\r\\n     * by `iteratee` and values set by `setter`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} setter The function to set `accumulator` values.\\r\\n     * @param {Function} iteratee The iteratee to transform keys.\\r\\n     * @param {Object} accumulator The initial aggregated object.\\r\\n     * @returns {Function} Returns `accumulator`.\\r\\n     */\\r\\n    function baseAggregator(collection, setter, iteratee, accumulator) {\\r\\n        baseEach(collection, function(value, key, collection) {\\r\\n            setter(accumulator, value, iteratee(value), collection);\\r\\n        });\\r\\n        return accumulator;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.assign` without support for multiple sources\\r\\n     * or `customizer` functions.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The destination object.\\r\\n     * @param {Object} source The source object.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     */\\r\\n    function baseAssign(object, source) {\\r\\n        return object && copyObject(source, keys(source), object);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.assignIn` without support for multiple sources\\r\\n     * or `customizer` functions.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The destination object.\\r\\n     * @param {Object} source The source object.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     */\\r\\n    function baseAssignIn(object, source) {\\r\\n        return object && copyObject(source, keysIn(source), object);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `assignValue` and `assignMergeValue` without\\r\\n     * value checks.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to modify.\\r\\n     * @param {string} key The key of the property to assign.\\r\\n     * @param {*} value The value to assign.\\r\\n     */\\r\\n    function baseAssignValue(object, key, value) {\\r\\n        if (key == '__proto__' && defineProperty) {\\r\\n            defineProperty(object, key, {\\r\\n                'configurable': true,\\r\\n                'enumerable': true,\\r\\n                'value': value,\\r\\n                'writable': true\\r\\n            });\\r\\n        } else {\\r\\n            object[key] = value;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.at` without support for individual paths.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to iterate over.\\r\\n     * @param {string[]} paths The property paths to pick.\\r\\n     * @returns {Array} Returns the picked elements.\\r\\n     */\\r\\n    function baseAt(object, paths) {\\r\\n        var index = -1,\\r\\n            length = paths.length,\\r\\n            result = Array(length),\\r\\n            skip = object == null;\\r\\n\\r\\n        while (++index < length) {\\r\\n            result[index] = skip ? undefined : get(object, paths[index]);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {number} number The number to clamp.\\r\\n     * @param {number} [lower] The lower bound.\\r\\n     * @param {number} upper The upper bound.\\r\\n     * @returns {number} Returns the clamped number.\\r\\n     */\\r\\n    function baseClamp(number, lower, upper) {\\r\\n        if (number === number) {\\r\\n            if (upper !== undefined) {\\r\\n                number = number <= upper ? number : upper;\\r\\n            }\\r\\n            if (lower !== undefined) {\\r\\n                number = number >= lower ? number : lower;\\r\\n            }\\r\\n        }\\r\\n        return number;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\\r\\n     * traversed objects.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to clone.\\r\\n     * @param {boolean} bitmask The bitmask flags.\\r\\n     *  1 - Deep clone\\r\\n     *  2 - Flatten inherited properties\\r\\n     *  4 - Clone symbols\\r\\n     * @param {Function} [customizer] The function to customize cloning.\\r\\n     * @param {string} [key] The key of `value`.\\r\\n     * @param {Object} [object] The parent object of `value`.\\r\\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\\r\\n     * @returns {*} Returns the cloned value.\\r\\n     */\\r\\n    function baseClone(value, bitmask, customizer, key, object, stack) {\\r\\n        var result,\\r\\n            isDeep = bitmask & CLONE_DEEP_FLAG,\\r\\n            isFlat = bitmask & CLONE_FLAT_FLAG,\\r\\n            isFull = bitmask & CLONE_SYMBOLS_FLAG;\\r\\n\\r\\n        if (customizer) {\\r\\n            result = object ? customizer(value, key, object, stack) : customizer(value);\\r\\n        }\\r\\n        if (result !== undefined) {\\r\\n            return result;\\r\\n        }\\r\\n        if (!isObject(value)) {\\r\\n            return value;\\r\\n        }\\r\\n        var isArr = isArray(value);\\r\\n        if (isArr) {\\r\\n            result = initCloneArray(value);\\r\\n            if (!isDeep) {\\r\\n                return copyArray(value, result);\\r\\n            }\\r\\n        } else {\\r\\n            var tag = getTag(value),\\r\\n                isFunc = tag == funcTag || tag == genTag;\\r\\n\\r\\n            if (isBuffer(value)) {\\r\\n                return cloneBuffer(value, isDeep);\\r\\n            }\\r\\n            if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\\r\\n                result = (isFlat || isFunc) ? {} : initCloneObject(value);\\r\\n                if (!isDeep) {\\r\\n                    return isFlat\\r\\n                        ? copySymbolsIn(value, baseAssignIn(result, value))\\r\\n                        : copySymbols(value, baseAssign(result, value));\\r\\n                }\\r\\n            } else {\\r\\n                if (!cloneableTags[tag]) {\\r\\n                    return object ? value : {};\\r\\n                }\\r\\n                result = initCloneByTag(value, tag, isDeep);\\r\\n            }\\r\\n        }\\r\\n        // Check for circular references and return its corresponding clone.\\r\\n        stack || (stack = new Stack);\\r\\n        var stacked = stack.get(value);\\r\\n        if (stacked) {\\r\\n            return stacked;\\r\\n        }\\r\\n        stack.set(value, result);\\r\\n\\r\\n        if (isSet(value)) {\\r\\n            value.forEach(function(subValue) {\\r\\n                result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\\r\\n            });\\r\\n\\r\\n            return result;\\r\\n        }\\r\\n\\r\\n        if (isMap(value)) {\\r\\n            value.forEach(function(subValue, key) {\\r\\n                result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\\r\\n            });\\r\\n\\r\\n            return result;\\r\\n        }\\r\\n\\r\\n        var keysFunc = isFull\\r\\n            ? (isFlat ? getAllKeysIn : getAllKeys)\\r\\n            : (isFlat ? keysIn : keys);\\r\\n\\r\\n        var props = isArr ? undefined : keysFunc(value);\\r\\n        arrayEach(props || value, function(subValue, key) {\\r\\n            if (props) {\\r\\n                key = subValue;\\r\\n                subValue = value[key];\\r\\n            }\\r\\n            // Recursively populate clone (susceptible to call stack limits).\\r\\n            assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\\r\\n        });\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\\r\\n     * to provide to `func`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to delay.\\r\\n     * @param {number} wait The number of milliseconds to delay invocation.\\r\\n     * @param {Array} args The arguments to provide to `func`.\\r\\n     * @returns {number|Object} Returns the timer id or timeout object.\\r\\n     */\\r\\n    function baseDelay(func, wait, args) {\\r\\n        if (typeof func != 'function') {\\r\\n            throw new TypeError(FUNC_ERROR_TEXT);\\r\\n        }\\r\\n        return setTimeout(function() { func.apply(undefined, args); }, wait);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of methods like `_.difference` without support\\r\\n     * for excluding multiple arrays or iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {Array} values The values to exclude.\\r\\n     * @param {Function} [iteratee] The iteratee invoked per element.\\r\\n     * @param {Function} [comparator] The comparator invoked per element.\\r\\n     * @returns {Array} Returns the new array of filtered values.\\r\\n     */\\r\\n    function baseDifference(array, values, iteratee, comparator) {\\r\\n        var index = -1,\\r\\n            includes = arrayIncludes,\\r\\n            isCommon = true,\\r\\n            length = array.length,\\r\\n            result = [],\\r\\n            valuesLength = values.length;\\r\\n\\r\\n        if (!length) {\\r\\n            return result;\\r\\n        }\\r\\n        if (iteratee) {\\r\\n            values = arrayMap(values, baseUnary(iteratee));\\r\\n        }\\r\\n        if (comparator) {\\r\\n            includes = arrayIncludesWith;\\r\\n            isCommon = false;\\r\\n        }\\r\\n        else if (values.length >= LARGE_ARRAY_SIZE) {\\r\\n            includes = cacheHas;\\r\\n            isCommon = false;\\r\\n            values = new SetCache(values);\\r\\n        }\\r\\n        outer:\\r\\n            while (++index < length) {\\r\\n                var value = array[index],\\r\\n                    computed = iteratee == null ? value : iteratee(value);\\r\\n\\r\\n                value = (comparator || value !== 0) ? value : 0;\\r\\n                if (isCommon && computed === computed) {\\r\\n                    var valuesIndex = valuesLength;\\r\\n                    while (valuesIndex--) {\\r\\n                        if (values[valuesIndex] === computed) {\\r\\n                            continue outer;\\r\\n                        }\\r\\n                    }\\r\\n                    result.push(value);\\r\\n                }\\r\\n                else if (!includes(values, computed, comparator)) {\\r\\n                    result.push(value);\\r\\n                }\\r\\n            }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @returns {Array|Object} Returns `collection`.\\r\\n     */\\r\\n    var baseEach = createBaseEach(baseForOwn);\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.every` without support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} predicate The function invoked per iteration.\\r\\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\\r\\n     *  else `false`\\r\\n     */\\r\\n    function baseEvery(collection, predicate) {\\r\\n        var result = true;\\r\\n        baseEach(collection, function(value, index, collection) {\\r\\n            result = !!predicate(value, index, collection);\\r\\n            return result;\\r\\n        });\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\\r\\n     * `comparator` to determine the extremum value.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to iterate over.\\r\\n     * @param {Function} iteratee The iteratee invoked per iteration.\\r\\n     * @param {Function} comparator The comparator used to compare values.\\r\\n     * @returns {*} Returns the extremum value.\\r\\n     */\\r\\n    function baseExtremum(array, iteratee, comparator) {\\r\\n        var index = -1,\\r\\n            length = array.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            var value = array[index],\\r\\n                current = iteratee(value);\\r\\n\\r\\n            if (current != null && (computed === undefined\\r\\n                    ? (current === current && !isSymbol(current))\\r\\n                    : comparator(current, computed)\\r\\n            )) {\\r\\n                var computed = current,\\r\\n                    result = value;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.filter` without support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} predicate The function invoked per iteration.\\r\\n     * @returns {Array} Returns the new filtered array.\\r\\n     */\\r\\n    function baseFilter(collection, predicate) {\\r\\n        var result = [];\\r\\n        baseEach(collection, function(value, index, collection) {\\r\\n            if (predicate(value, index, collection)) {\\r\\n                result.push(value);\\r\\n            }\\r\\n        });\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.flatten` with support for restricting flattening.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to flatten.\\r\\n     * @param {number} depth The maximum recursion depth.\\r\\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\\r\\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\\r\\n     * @param {Array} [result=[]] The initial result value.\\r\\n     * @returns {Array} Returns the new flattened array.\\r\\n     */\\r\\n    function baseFlatten(array, depth, predicate, isStrict, result) {\\r\\n        var index = -1,\\r\\n            length = array.length;\\r\\n\\r\\n        predicate || (predicate = isFlattenable);\\r\\n        result || (result = []);\\r\\n\\r\\n        while (++index < length) {\\r\\n            var value = array[index];\\r\\n            if (depth > 0 && predicate(value)) {\\r\\n                if (depth > 1) {\\r\\n                    // Recursively flatten arrays (susceptible to call stack limits).\\r\\n                    baseFlatten(value, depth - 1, predicate, isStrict, result);\\r\\n                } else {\\r\\n                    arrayPush(result, value);\\r\\n                }\\r\\n            } else if (!isStrict) {\\r\\n                result[result.length] = value;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `baseForOwn` which iterates over `object`\\r\\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\\r\\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to iterate over.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @param {Function} keysFunc The function to get the keys of `object`.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     */\\r\\n    var baseFor = createBaseFor();\\r\\n\\r\\n    /**\\r\\n     * This function is like `baseFor` except that it iterates over properties\\r\\n     * in the opposite order.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to iterate over.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @param {Function} keysFunc The function to get the keys of `object`.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     */\\r\\n    var baseForRight = createBaseFor(true);\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to iterate over.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     */\\r\\n    function baseForOwn(object, iteratee) {\\r\\n        return object && baseFor(object, iteratee, keys);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to iterate over.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     */\\r\\n    function baseForOwnRight(object, iteratee) {\\r\\n        return object && baseForRight(object, iteratee, keys);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.functions` which creates an array of\\r\\n     * `object` function property names filtered from `props`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to inspect.\\r\\n     * @param {Array} props The property names to filter.\\r\\n     * @returns {Array} Returns the function names.\\r\\n     */\\r\\n    function baseFunctions(object, props) {\\r\\n        return arrayFilter(props, function(key) {\\r\\n            return isFunction(object[key]);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.get` without support for default values.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {Array|string} path The path of the property to get.\\r\\n     * @returns {*} Returns the resolved value.\\r\\n     */\\r\\n    function baseGet(object, path) {\\r\\n        path = castPath(path, object);\\r\\n\\r\\n        var index = 0,\\r\\n            length = path.length;\\r\\n\\r\\n        while (object != null && index < length) {\\r\\n            object = object[toKey(path[index++])];\\r\\n        }\\r\\n        return (index && index == length) ? object : undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\\r\\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\\r\\n     * symbols of `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {Function} keysFunc The function to get the keys of `object`.\\r\\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\\r\\n     * @returns {Array} Returns the array of property names and symbols.\\r\\n     */\\r\\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\\r\\n        var result = keysFunc(object);\\r\\n        return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `getTag` without fallbacks for buggy environments.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to query.\\r\\n     * @returns {string} Returns the `toStringTag`.\\r\\n     */\\r\\n    function baseGetTag(value) {\\r\\n        if (value == null) {\\r\\n            return value === undefined ? undefinedTag : nullTag;\\r\\n        }\\r\\n        return (symToStringTag && symToStringTag in Object(value))\\r\\n            ? getRawTag(value)\\r\\n            : objectToString(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.gt` which doesn't coerce arguments.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to compare.\\r\\n     * @param {*} other The other value to compare.\\r\\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\\r\\n     *  else `false`.\\r\\n     */\\r\\n    function baseGt(value, other) {\\r\\n        return value > other;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.has` without support for deep paths.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} [object] The object to query.\\r\\n     * @param {Array|string} key The key to check.\\r\\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\\r\\n     */\\r\\n    function baseHas(object, key) {\\r\\n        return object != null && hasOwnProperty.call(object, key);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.hasIn` without support for deep paths.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} [object] The object to query.\\r\\n     * @param {Array|string} key The key to check.\\r\\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\\r\\n     */\\r\\n    function baseHasIn(object, key) {\\r\\n        return object != null && key in Object(object);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of methods like `_.intersection`, without support\\r\\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} arrays The arrays to inspect.\\r\\n     * @param {Function} [iteratee] The iteratee invoked per element.\\r\\n     * @param {Function} [comparator] The comparator invoked per element.\\r\\n     * @returns {Array} Returns the new array of shared values.\\r\\n     */\\r\\n    function baseIntersection(arrays, iteratee, comparator) {\\r\\n        var includes = comparator ? arrayIncludesWith : arrayIncludes,\\r\\n            length = arrays[0].length,\\r\\n            othLength = arrays.length,\\r\\n            othIndex = othLength,\\r\\n            caches = Array(othLength),\\r\\n            maxLength = Infinity,\\r\\n            result = [];\\r\\n\\r\\n        while (othIndex--) {\\r\\n            var array = arrays[othIndex];\\r\\n            if (othIndex && iteratee) {\\r\\n                array = arrayMap(array, baseUnary(iteratee));\\r\\n            }\\r\\n            maxLength = nativeMin(array.length, maxLength);\\r\\n            caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\\r\\n                ? new SetCache(othIndex && array)\\r\\n                : undefined;\\r\\n        }\\r\\n        array = arrays[0];\\r\\n\\r\\n        var index = -1,\\r\\n            seen = caches[0];\\r\\n\\r\\n        outer:\\r\\n            while (++index < length && result.length < maxLength) {\\r\\n                var value = array[index],\\r\\n                    computed = iteratee ? iteratee(value) : value;\\r\\n\\r\\n                value = (comparator || value !== 0) ? value : 0;\\r\\n                if (!(seen\\r\\n                        ? cacheHas(seen, computed)\\r\\n                        : includes(result, computed, comparator)\\r\\n                )) {\\r\\n                    othIndex = othLength;\\r\\n                    while (--othIndex) {\\r\\n                        var cache = caches[othIndex];\\r\\n                        if (!(cache\\r\\n                            ? cacheHas(cache, computed)\\r\\n                            : includes(arrays[othIndex], computed, comparator))\\r\\n                        ) {\\r\\n                            continue outer;\\r\\n                        }\\r\\n                    }\\r\\n                    if (seen) {\\r\\n                        seen.push(computed);\\r\\n                    }\\r\\n                    result.push(value);\\r\\n                }\\r\\n            }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\\r\\n     * `object` with values transformed by `iteratee` and set by `setter`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to iterate over.\\r\\n     * @param {Function} setter The function to set `accumulator` values.\\r\\n     * @param {Function} iteratee The iteratee to transform values.\\r\\n     * @param {Object} accumulator The initial inverted object.\\r\\n     * @returns {Function} Returns `accumulator`.\\r\\n     */\\r\\n    function baseInverter(object, setter, iteratee, accumulator) {\\r\\n        baseForOwn(object, function(value, key, object) {\\r\\n            setter(accumulator, iteratee(value), key, object);\\r\\n        });\\r\\n        return accumulator;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.invoke` without support for individual\\r\\n     * method arguments.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {Array|string} path The path of the method to invoke.\\r\\n     * @param {Array} args The arguments to invoke the method with.\\r\\n     * @returns {*} Returns the result of the invoked method.\\r\\n     */\\r\\n    function baseInvoke(object, path, args) {\\r\\n        path = castPath(path, object);\\r\\n        object = parent(object, path);\\r\\n        var func = object == null ? object : object[toKey(last(path))];\\r\\n        return func == null ? undefined : apply(func, object, args);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.isArguments`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\r\\n     */\\r\\n    function baseIsArguments(value) {\\r\\n        return isObjectLike(value) && baseGetTag(value) == argsTag;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.isDate` without Node.js optimizations.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\\r\\n     */\\r\\n    function baseIsDate(value) {\\r\\n        return isObjectLike(value) && baseGetTag(value) == dateTag;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.isEqual` which supports partial comparisons\\r\\n     * and tracks traversed objects.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to compare.\\r\\n     * @param {*} other The other value to compare.\\r\\n     * @param {boolean} bitmask The bitmask flags.\\r\\n     *  1 - Unordered comparison\\r\\n     *  2 - Partial comparison\\r\\n     * @param {Function} [customizer] The function to customize comparisons.\\r\\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\\r\\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\r\\n     */\\r\\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\\r\\n        if (value === other) {\\r\\n            return true;\\r\\n        }\\r\\n        if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\\r\\n            return value !== value && other !== other;\\r\\n        }\\r\\n        return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\\r\\n     * deep comparisons and tracks traversed objects enabling objects with circular\\r\\n     * references to be compared.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to compare.\\r\\n     * @param {Object} other The other object to compare.\\r\\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\r\\n     * @param {Function} customizer The function to customize comparisons.\\r\\n     * @param {Function} equalFunc The function to determine equivalents of values.\\r\\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\\r\\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\r\\n     */\\r\\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\\r\\n        var objIsArr = isArray(object),\\r\\n            othIsArr = isArray(other),\\r\\n            objTag = objIsArr ? arrayTag : getTag(object),\\r\\n            othTag = othIsArr ? arrayTag : getTag(other);\\r\\n\\r\\n        objTag = objTag == argsTag ? objectTag : objTag;\\r\\n        othTag = othTag == argsTag ? objectTag : othTag;\\r\\n\\r\\n        var objIsObj = objTag == objectTag,\\r\\n            othIsObj = othTag == objectTag,\\r\\n            isSameTag = objTag == othTag;\\r\\n\\r\\n        if (isSameTag && isBuffer(object)) {\\r\\n            if (!isBuffer(other)) {\\r\\n                return false;\\r\\n            }\\r\\n            objIsArr = true;\\r\\n            objIsObj = false;\\r\\n        }\\r\\n        if (isSameTag && !objIsObj) {\\r\\n            stack || (stack = new Stack);\\r\\n            return (objIsArr || isTypedArray(object))\\r\\n                ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\\r\\n                : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\\r\\n        }\\r\\n        if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\\r\\n            var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\\r\\n                othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\\r\\n\\r\\n            if (objIsWrapped || othIsWrapped) {\\r\\n                var objUnwrapped = objIsWrapped ? object.value() : object,\\r\\n                    othUnwrapped = othIsWrapped ? other.value() : other;\\r\\n\\r\\n                stack || (stack = new Stack);\\r\\n                return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\\r\\n            }\\r\\n        }\\r\\n        if (!isSameTag) {\\r\\n            return false;\\r\\n        }\\r\\n        stack || (stack = new Stack);\\r\\n        return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.isMap` without Node.js optimizations.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\\r\\n     */\\r\\n    function baseIsMap(value) {\\r\\n        return isObjectLike(value) && getTag(value) == mapTag;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to inspect.\\r\\n     * @param {Object} source The object of property values to match.\\r\\n     * @param {Array} matchData The property names, values, and compare flags to match.\\r\\n     * @param {Function} [customizer] The function to customize comparisons.\\r\\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\\r\\n     */\\r\\n    function baseIsMatch(object, source, matchData, customizer) {\\r\\n        var index = matchData.length,\\r\\n            length = index,\\r\\n            noCustomizer = !customizer;\\r\\n\\r\\n        if (object == null) {\\r\\n            return !length;\\r\\n        }\\r\\n        object = Object(object);\\r\\n        while (index--) {\\r\\n            var data = matchData[index];\\r\\n            if ((noCustomizer && data[2])\\r\\n                ? data[1] !== object[data[0]]\\r\\n                : !(data[0] in object)\\r\\n            ) {\\r\\n                return false;\\r\\n            }\\r\\n        }\\r\\n        while (++index < length) {\\r\\n            data = matchData[index];\\r\\n            var key = data[0],\\r\\n                objValue = object[key],\\r\\n                srcValue = data[1];\\r\\n\\r\\n            if (noCustomizer && data[2]) {\\r\\n                if (objValue === undefined && !(key in object)) {\\r\\n                    return false;\\r\\n                }\\r\\n            } else {\\r\\n                var stack = new Stack;\\r\\n                if (customizer) {\\r\\n                    var result = customizer(objValue, srcValue, key, object, source, stack);\\r\\n                }\\r\\n                if (!(result === undefined\\r\\n                        ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\\r\\n                        : result\\r\\n                )) {\\r\\n                    return false;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.isNative` without bad shim checks.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a native function,\\r\\n     *  else `false`.\\r\\n     */\\r\\n    function baseIsNative(value) {\\r\\n        if (!isObject(value) || isMasked(value)) {\\r\\n            return false;\\r\\n        }\\r\\n        var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\\r\\n        return pattern.test(toSource(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\\r\\n     */\\r\\n    function baseIsRegExp(value) {\\r\\n        return isObjectLike(value) && baseGetTag(value) == regexpTag;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.isSet` without Node.js optimizations.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\\r\\n     */\\r\\n    function baseIsSet(value) {\\r\\n        return isObjectLike(value) && getTag(value) == setTag;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\r\\n     */\\r\\n    function baseIsTypedArray(value) {\\r\\n        return isObjectLike(value) &&\\r\\n            isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.iteratee`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\\r\\n     * @returns {Function} Returns the iteratee.\\r\\n     */\\r\\n    function baseIteratee(value) {\\r\\n        // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\\r\\n        // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\\r\\n        if (typeof value == 'function') {\\r\\n            return value;\\r\\n        }\\r\\n        if (value == null) {\\r\\n            return identity;\\r\\n        }\\r\\n        if (typeof value == 'object') {\\r\\n            return isArray(value)\\r\\n                ? baseMatchesProperty(value[0], value[1])\\r\\n                : baseMatches(value);\\r\\n        }\\r\\n        return property(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the array of property names.\\r\\n     */\\r\\n    function baseKeys(object) {\\r\\n        if (!isPrototype(object)) {\\r\\n            return nativeKeys(object);\\r\\n        }\\r\\n        var result = [];\\r\\n        for (var key in Object(object)) {\\r\\n            if (hasOwnProperty.call(object, key) && key != 'constructor') {\\r\\n                result.push(key);\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the array of property names.\\r\\n     */\\r\\n    function baseKeysIn(object) {\\r\\n        if (!isObject(object)) {\\r\\n            return nativeKeysIn(object);\\r\\n        }\\r\\n        var isProto = isPrototype(object),\\r\\n            result = [];\\r\\n\\r\\n        for (var key in object) {\\r\\n            if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\\r\\n                result.push(key);\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.lt` which doesn't coerce arguments.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to compare.\\r\\n     * @param {*} other The other value to compare.\\r\\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\\r\\n     *  else `false`.\\r\\n     */\\r\\n    function baseLt(value, other) {\\r\\n        return value < other;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.map` without support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} iteratee The function invoked per iteration.\\r\\n     * @returns {Array} Returns the new mapped array.\\r\\n     */\\r\\n    function baseMap(collection, iteratee) {\\r\\n        var index = -1,\\r\\n            result = isArrayLike(collection) ? Array(collection.length) : [];\\r\\n\\r\\n        baseEach(collection, function(value, key, collection) {\\r\\n            result[++index] = iteratee(value, key, collection);\\r\\n        });\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.matches` which doesn't clone `source`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} source The object of property values to match.\\r\\n     * @returns {Function} Returns the new spec function.\\r\\n     */\\r\\n    function baseMatches(source) {\\r\\n        var matchData = getMatchData(source);\\r\\n        if (matchData.length == 1 && matchData[0][2]) {\\r\\n            return matchesStrictComparable(matchData[0][0], matchData[0][1]);\\r\\n        }\\r\\n        return function(object) {\\r\\n            return object === source || baseIsMatch(object, source, matchData);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} path The path of the property to get.\\r\\n     * @param {*} srcValue The value to match.\\r\\n     * @returns {Function} Returns the new spec function.\\r\\n     */\\r\\n    function baseMatchesProperty(path, srcValue) {\\r\\n        if (isKey(path) && isStrictComparable(srcValue)) {\\r\\n            return matchesStrictComparable(toKey(path), srcValue);\\r\\n        }\\r\\n        return function(object) {\\r\\n            var objValue = get(object, path);\\r\\n            return (objValue === undefined && objValue === srcValue)\\r\\n                ? hasIn(object, path)\\r\\n                : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.merge` without support for multiple sources.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The destination object.\\r\\n     * @param {Object} source The source object.\\r\\n     * @param {number} srcIndex The index of `source`.\\r\\n     * @param {Function} [customizer] The function to customize merged values.\\r\\n     * @param {Object} [stack] Tracks traversed source values and their merged\\r\\n     *  counterparts.\\r\\n     */\\r\\n    function baseMerge(object, source, srcIndex, customizer, stack) {\\r\\n        if (object === source) {\\r\\n            return;\\r\\n        }\\r\\n        baseFor(source, function(srcValue, key) {\\r\\n            if (isObject(srcValue)) {\\r\\n                stack || (stack = new Stack);\\r\\n                baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\\r\\n            }\\r\\n            else {\\r\\n                var newValue = customizer\\r\\n                    ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\\r\\n                    : undefined;\\r\\n\\r\\n                if (newValue === undefined) {\\r\\n                    newValue = srcValue;\\r\\n                }\\r\\n                assignMergeValue(object, key, newValue);\\r\\n            }\\r\\n        }, keysIn);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `baseMerge` for arrays and objects which performs\\r\\n     * deep merges and tracks traversed objects enabling objects with circular\\r\\n     * references to be merged.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The destination object.\\r\\n     * @param {Object} source The source object.\\r\\n     * @param {string} key The key of the value to merge.\\r\\n     * @param {number} srcIndex The index of `source`.\\r\\n     * @param {Function} mergeFunc The function to merge values.\\r\\n     * @param {Function} [customizer] The function to customize assigned values.\\r\\n     * @param {Object} [stack] Tracks traversed source values and their merged\\r\\n     *  counterparts.\\r\\n     */\\r\\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\\r\\n        var objValue = safeGet(object, key),\\r\\n            srcValue = safeGet(source, key),\\r\\n            stacked = stack.get(srcValue);\\r\\n\\r\\n        if (stacked) {\\r\\n            assignMergeValue(object, key, stacked);\\r\\n            return;\\r\\n        }\\r\\n        var newValue = customizer\\r\\n            ? customizer(objValue, srcValue, (key + ''), object, source, stack)\\r\\n            : undefined;\\r\\n\\r\\n        var isCommon = newValue === undefined;\\r\\n\\r\\n        if (isCommon) {\\r\\n            var isArr = isArray(srcValue),\\r\\n                isBuff = !isArr && isBuffer(srcValue),\\r\\n                isTyped = !isArr && !isBuff && isTypedArray(srcValue);\\r\\n\\r\\n            newValue = srcValue;\\r\\n            if (isArr || isBuff || isTyped) {\\r\\n                if (isArray(objValue)) {\\r\\n                    newValue = objValue;\\r\\n                }\\r\\n                else if (isArrayLikeObject(objValue)) {\\r\\n                    newValue = copyArray(objValue);\\r\\n                }\\r\\n                else if (isBuff) {\\r\\n                    isCommon = false;\\r\\n                    newValue = cloneBuffer(srcValue, true);\\r\\n                }\\r\\n                else if (isTyped) {\\r\\n                    isCommon = false;\\r\\n                    newValue = cloneTypedArray(srcValue, true);\\r\\n                }\\r\\n                else {\\r\\n                    newValue = [];\\r\\n                }\\r\\n            }\\r\\n            else if (isPlainObject(srcValue) || isArguments(srcValue)) {\\r\\n                newValue = objValue;\\r\\n                if (isArguments(objValue)) {\\r\\n                    newValue = toPlainObject(objValue);\\r\\n                }\\r\\n                else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\\r\\n                    newValue = initCloneObject(srcValue);\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                isCommon = false;\\r\\n            }\\r\\n        }\\r\\n        if (isCommon) {\\r\\n            // Recursively merge objects and arrays (susceptible to call stack limits).\\r\\n            stack.set(srcValue, newValue);\\r\\n            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\\r\\n            stack['delete'](srcValue);\\r\\n        }\\r\\n        assignMergeValue(object, key, newValue);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.orderBy` without param guards.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\\r\\n     * @param {string[]} orders The sort orders of `iteratees`.\\r\\n     * @returns {Array} Returns the new sorted array.\\r\\n     */\\r\\n    function baseOrderBy(collection, iteratees, orders) {\\r\\n        var index = -1;\\r\\n        iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\\r\\n\\r\\n        var result = baseMap(collection, function(value, key, collection) {\\r\\n            var criteria = arrayMap(iteratees, function(iteratee) {\\r\\n                return iteratee(value);\\r\\n            });\\r\\n            return { 'criteria': criteria, 'index': ++index, 'value': value };\\r\\n        });\\r\\n\\r\\n        return baseSortBy(result, function(object, other) {\\r\\n            return compareMultiple(object, other, orders);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.pick` without support for individual\\r\\n     * property identifiers.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The source object.\\r\\n     * @param {string[]} paths The property paths to pick.\\r\\n     * @returns {Object} Returns the new object.\\r\\n     */\\r\\n    function basePick(object, paths) {\\r\\n        return basePickBy(object, paths, function(value, path) {\\r\\n            return hasIn(object, path);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The source object.\\r\\n     * @param {string[]} paths The property paths to pick.\\r\\n     * @param {Function} predicate The function invoked per property.\\r\\n     * @returns {Object} Returns the new object.\\r\\n     */\\r\\n    function basePickBy(object, paths, predicate) {\\r\\n        var index = -1,\\r\\n            length = paths.length,\\r\\n            result = {};\\r\\n\\r\\n        while (++index < length) {\\r\\n            var path = paths[index],\\r\\n                value = baseGet(object, path);\\r\\n\\r\\n            if (predicate(value, path)) {\\r\\n                baseSet(result, castPath(path, object), value);\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `baseProperty` which supports deep paths.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array|string} path The path of the property to get.\\r\\n     * @returns {Function} Returns the new accessor function.\\r\\n     */\\r\\n    function basePropertyDeep(path) {\\r\\n        return function(object) {\\r\\n            return baseGet(object, path);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.random` without support for returning\\r\\n     * floating-point numbers.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {number} lower The lower bound.\\r\\n     * @param {number} upper The upper bound.\\r\\n     * @returns {number} Returns the random number.\\r\\n     */\\r\\n    function baseRandom(lower, upper) {\\r\\n        return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\\r\\n     * coerce arguments.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {number} start The start of the range.\\r\\n     * @param {number} end The end of the range.\\r\\n     * @param {number} step The value to increment or decrement by.\\r\\n     * @param {boolean} [fromRight] Specify iterating from right to left.\\r\\n     * @returns {Array} Returns the range of numbers.\\r\\n     */\\r\\n    function baseRange(start, end, step, fromRight) {\\r\\n        var index = -1,\\r\\n            length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\\r\\n            result = Array(length);\\r\\n\\r\\n        while (length--) {\\r\\n            result[fromRight ? length : ++index] = start;\\r\\n            start += step;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to apply a rest parameter to.\\r\\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\\r\\n     * @returns {Function} Returns the new function.\\r\\n     */\\r\\n    function baseRest(func, start) {\\r\\n        return setToString(overRest(func, start, identity), func + '');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.set`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to modify.\\r\\n     * @param {Array|string} path The path of the property to set.\\r\\n     * @param {*} value The value to set.\\r\\n     * @param {Function} [customizer] The function to customize path creation.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     */\\r\\n    function baseSet(object, path, value, customizer) {\\r\\n        if (!isObject(object)) {\\r\\n            return object;\\r\\n        }\\r\\n        path = castPath(path, object);\\r\\n\\r\\n        var index = -1,\\r\\n            length = path.length,\\r\\n            lastIndex = length - 1,\\r\\n            nested = object;\\r\\n\\r\\n        while (nested != null && ++index < length) {\\r\\n            var key = toKey(path[index]),\\r\\n                newValue = value;\\r\\n\\r\\n            if (index != lastIndex) {\\r\\n                var objValue = nested[key];\\r\\n                newValue = customizer ? customizer(objValue, key, nested) : undefined;\\r\\n                if (newValue === undefined) {\\r\\n                    newValue = isObject(objValue)\\r\\n                        ? objValue\\r\\n                        : (isIndex(path[index + 1]) ? [] : {});\\r\\n                }\\r\\n            }\\r\\n            assignValue(nested, key, newValue);\\r\\n            nested = nested[key];\\r\\n        }\\r\\n        return object;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `setData` without support for hot loop shorting.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to associate metadata with.\\r\\n     * @param {*} data The metadata.\\r\\n     * @returns {Function} Returns `func`.\\r\\n     */\\r\\n    var baseSetData = !metaMap ? identity : function(func, data) {\\r\\n        metaMap.set(func, data);\\r\\n        return func;\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `setToString` without support for hot loop shorting.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to modify.\\r\\n     * @param {Function} string The `toString` result.\\r\\n     * @returns {Function} Returns `func`.\\r\\n     */\\r\\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\\r\\n        return defineProperty(func, 'toString', {\\r\\n            'configurable': true,\\r\\n            'enumerable': false,\\r\\n            'value': constant(string),\\r\\n            'writable': true\\r\\n        });\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.slice` without an iteratee call guard.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to slice.\\r\\n     * @param {number} [start=0] The start position.\\r\\n     * @param {number} [end=array.length] The end position.\\r\\n     * @returns {Array} Returns the slice of `array`.\\r\\n     */\\r\\n    function baseSlice(array, start, end) {\\r\\n        var index = -1,\\r\\n            length = array.length;\\r\\n\\r\\n        if (start < 0) {\\r\\n            start = -start > length ? 0 : (length + start);\\r\\n        }\\r\\n        end = end > length ? length : end;\\r\\n        if (end < 0) {\\r\\n            end += length;\\r\\n        }\\r\\n        length = start > end ? 0 : ((end - start) >>> 0);\\r\\n        start >>>= 0;\\r\\n\\r\\n        var result = Array(length);\\r\\n        while (++index < length) {\\r\\n            result[index] = array[index + start];\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.some` without support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} predicate The function invoked per iteration.\\r\\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\\r\\n     *  else `false`.\\r\\n     */\\r\\n    function baseSome(collection, predicate) {\\r\\n        var result;\\r\\n\\r\\n        baseEach(collection, function(value, index, collection) {\\r\\n            result = predicate(value, index, collection);\\r\\n            return !result;\\r\\n        });\\r\\n        return !!result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.toString` which doesn't convert nullish\\r\\n     * values to empty strings.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to process.\\r\\n     * @returns {string} Returns the string.\\r\\n     */\\r\\n    function baseToString(value) {\\r\\n        // Exit early for strings to avoid a performance hit in some environments.\\r\\n        if (typeof value == 'string') {\\r\\n            return value;\\r\\n        }\\r\\n        if (isArray(value)) {\\r\\n            // Recursively convert values (susceptible to call stack limits).\\r\\n            return arrayMap(value, baseToString) + '';\\r\\n        }\\r\\n        if (isSymbol(value)) {\\r\\n            return symbolToString ? symbolToString.call(value) : '';\\r\\n        }\\r\\n        var result = (value + '');\\r\\n        return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {Function} [iteratee] The iteratee invoked per element.\\r\\n     * @param {Function} [comparator] The comparator invoked per element.\\r\\n     * @returns {Array} Returns the new duplicate free array.\\r\\n     */\\r\\n    function baseUniq(array, iteratee, comparator) {\\r\\n        var index = -1,\\r\\n            includes = arrayIncludes,\\r\\n            length = array.length,\\r\\n            isCommon = true,\\r\\n            result = [],\\r\\n            seen = result;\\r\\n\\r\\n        if (comparator) {\\r\\n            isCommon = false;\\r\\n            includes = arrayIncludesWith;\\r\\n        }\\r\\n        else if (length >= LARGE_ARRAY_SIZE) {\\r\\n            var set = iteratee ? null : createSet(array);\\r\\n            if (set) {\\r\\n                return setToArray(set);\\r\\n            }\\r\\n            isCommon = false;\\r\\n            includes = cacheHas;\\r\\n            seen = new SetCache;\\r\\n        }\\r\\n        else {\\r\\n            seen = iteratee ? [] : result;\\r\\n        }\\r\\n        outer:\\r\\n            while (++index < length) {\\r\\n                var value = array[index],\\r\\n                    computed = iteratee ? iteratee(value) : value;\\r\\n\\r\\n                value = (comparator || value !== 0) ? value : 0;\\r\\n                if (isCommon && computed === computed) {\\r\\n                    var seenIndex = seen.length;\\r\\n                    while (seenIndex--) {\\r\\n                        if (seen[seenIndex] === computed) {\\r\\n                            continue outer;\\r\\n                        }\\r\\n                    }\\r\\n                    if (iteratee) {\\r\\n                        seen.push(computed);\\r\\n                    }\\r\\n                    result.push(value);\\r\\n                }\\r\\n                else if (!includes(seen, computed, comparator)) {\\r\\n                    if (seen !== result) {\\r\\n                        seen.push(computed);\\r\\n                    }\\r\\n                    result.push(value);\\r\\n                }\\r\\n            }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `_.unset`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to modify.\\r\\n     * @param {Array|string} path The property path to unset.\\r\\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\\r\\n     */\\r\\n    function baseUnset(object, path) {\\r\\n        path = castPath(path, object);\\r\\n        object = parent(object, path);\\r\\n        return object == null || delete object[toKey(last(path))];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The base implementation of `wrapperValue` which returns the result of\\r\\n     * performing a sequence of actions on the unwrapped `value`, where each\\r\\n     * successive action is supplied the return value of the previous.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The unwrapped value.\\r\\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\\r\\n     * @returns {*} Returns the resolved value.\\r\\n     */\\r\\n    function baseWrapperValue(value, actions) {\\r\\n        var result = value;\\r\\n        if (result instanceof LazyWrapper) {\\r\\n            result = result.value();\\r\\n        }\\r\\n        return arrayReduce(actions, function(result, action) {\\r\\n            return action.func.apply(action.thisArg, arrayPush([result], action.args));\\r\\n        }, result);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} props The property identifiers.\\r\\n     * @param {Array} values The property values.\\r\\n     * @param {Function} assignFunc The function to assign values.\\r\\n     * @returns {Object} Returns the new object.\\r\\n     */\\r\\n    function baseZipObject(props, values, assignFunc) {\\r\\n        var index = -1,\\r\\n            length = props.length,\\r\\n            valsLength = values.length,\\r\\n            result = {};\\r\\n\\r\\n        while (++index < length) {\\r\\n            var value = index < valsLength ? values[index] : undefined;\\r\\n            assignFunc(result, props[index], value);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Casts `value` to an empty array if it's not an array like object.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to inspect.\\r\\n     * @returns {Array|Object} Returns the cast array-like object.\\r\\n     */\\r\\n    function castArrayLikeObject(value) {\\r\\n        return isArrayLikeObject(value) ? value : [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Casts `value` to a path array if it's not one.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to inspect.\\r\\n     * @param {Object} [object] The object to query keys on.\\r\\n     * @returns {Array} Returns the cast property path array.\\r\\n     */\\r\\n    function castPath(value, object) {\\r\\n        if (isArray(value)) {\\r\\n            return value;\\r\\n        }\\r\\n        return isKey(value, object) ? [value] : stringToPath(toString(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Casts `array` to a slice if it's needed.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {number} start The start position.\\r\\n     * @param {number} [end=array.length] The end position.\\r\\n     * @returns {Array} Returns the cast slice.\\r\\n     */\\r\\n    function castSlice(array, start, end) {\\r\\n        var length = array.length;\\r\\n        end = end === undefined ? length : end;\\r\\n        return (!start && end >= length) ? array : baseSlice(array, start, end);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a clone of  `buffer`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Buffer} buffer The buffer to clone.\\r\\n     * @param {boolean} [isDeep] Specify a deep clone.\\r\\n     * @returns {Buffer} Returns the cloned buffer.\\r\\n     */\\r\\n    function cloneBuffer(buffer, isDeep) {\\r\\n        if (isDeep) {\\r\\n            return buffer.slice();\\r\\n        }\\r\\n        var length = buffer.length,\\r\\n            result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\\r\\n\\r\\n        buffer.copy(result);\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a clone of `arrayBuffer`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\\r\\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\\r\\n     */\\r\\n    function cloneArrayBuffer(arrayBuffer) {\\r\\n        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\\r\\n        new Uint8Array(result).set(new Uint8Array(arrayBuffer));\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a clone of `dataView`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} dataView The data view to clone.\\r\\n     * @param {boolean} [isDeep] Specify a deep clone.\\r\\n     * @returns {Object} Returns the cloned data view.\\r\\n     */\\r\\n    function cloneDataView(dataView, isDeep) {\\r\\n        var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\\r\\n        return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a clone of `regexp`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} regexp The regexp to clone.\\r\\n     * @returns {Object} Returns the cloned regexp.\\r\\n     */\\r\\n    function cloneRegExp(regexp) {\\r\\n        var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\\r\\n        result.lastIndex = regexp.lastIndex;\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a clone of the `symbol` object.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} symbol The symbol object to clone.\\r\\n     * @returns {Object} Returns the cloned symbol object.\\r\\n     */\\r\\n    function cloneSymbol(symbol) {\\r\\n        return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a clone of `typedArray`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} typedArray The typed array to clone.\\r\\n     * @param {boolean} [isDeep] Specify a deep clone.\\r\\n     * @returns {Object} Returns the cloned typed array.\\r\\n     */\\r\\n    function cloneTypedArray(typedArray, isDeep) {\\r\\n        var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\\r\\n        return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Compares values to sort them in ascending order.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to compare.\\r\\n     * @param {*} other The other value to compare.\\r\\n     * @returns {number} Returns the sort order indicator for `value`.\\r\\n     */\\r\\n    function compareAscending(value, other) {\\r\\n        if (value !== other) {\\r\\n            var valIsDefined = value !== undefined,\\r\\n                valIsNull = value === null,\\r\\n                valIsReflexive = value === value,\\r\\n                valIsSymbol = isSymbol(value);\\r\\n\\r\\n            var othIsDefined = other !== undefined,\\r\\n                othIsNull = other === null,\\r\\n                othIsReflexive = other === other,\\r\\n                othIsSymbol = isSymbol(other);\\r\\n\\r\\n            if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\\r\\n                (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\\r\\n                (valIsNull && othIsDefined && othIsReflexive) ||\\r\\n                (!valIsDefined && othIsReflexive) ||\\r\\n                !valIsReflexive) {\\r\\n                return 1;\\r\\n            }\\r\\n            if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\\r\\n                (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\\r\\n                (othIsNull && valIsDefined && valIsReflexive) ||\\r\\n                (!othIsDefined && valIsReflexive) ||\\r\\n                !othIsReflexive) {\\r\\n                return -1;\\r\\n            }\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Used by `_.orderBy` to compare multiple properties of a value to another\\r\\n     * and stable sort them.\\r\\n     *\\r\\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\\r\\n     * specify an order of \\\"desc\\\" for descending or \\\"asc\\\" for ascending sort order\\r\\n     * of corresponding values.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to compare.\\r\\n     * @param {Object} other The other object to compare.\\r\\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\\r\\n     * @returns {number} Returns the sort order indicator for `object`.\\r\\n     */\\r\\n    function compareMultiple(object, other, orders) {\\r\\n        var index = -1,\\r\\n            objCriteria = object.criteria,\\r\\n            othCriteria = other.criteria,\\r\\n            length = objCriteria.length,\\r\\n            ordersLength = orders.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            var result = compareAscending(objCriteria[index], othCriteria[index]);\\r\\n            if (result) {\\r\\n                if (index >= ordersLength) {\\r\\n                    return result;\\r\\n                }\\r\\n                var order = orders[index];\\r\\n                return result * (order == 'desc' ? -1 : 1);\\r\\n            }\\r\\n        }\\r\\n        // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\\r\\n        // that causes it, under certain circumstances, to provide the same value for\\r\\n        // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\\r\\n        // for more details.\\r\\n        //\\r\\n        // This also ensures a stable sort in V8 and other engines.\\r\\n        // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\\r\\n        return object.index - other.index;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array that is the composition of partially applied arguments,\\r\\n     * placeholders, and provided arguments into a single array of arguments.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} args The provided arguments.\\r\\n     * @param {Array} partials The arguments to prepend to those provided.\\r\\n     * @param {Array} holders The `partials` placeholder indexes.\\r\\n     * @params {boolean} [isCurried] Specify composing for a curried function.\\r\\n     * @returns {Array} Returns the new array of composed arguments.\\r\\n     */\\r\\n    function composeArgs(args, partials, holders, isCurried) {\\r\\n        var argsIndex = -1,\\r\\n            argsLength = args.length,\\r\\n            holdersLength = holders.length,\\r\\n            leftIndex = -1,\\r\\n            leftLength = partials.length,\\r\\n            rangeLength = nativeMax(argsLength - holdersLength, 0),\\r\\n            result = Array(leftLength + rangeLength),\\r\\n            isUncurried = !isCurried;\\r\\n\\r\\n        while (++leftIndex < leftLength) {\\r\\n            result[leftIndex] = partials[leftIndex];\\r\\n        }\\r\\n        while (++argsIndex < holdersLength) {\\r\\n            if (isUncurried || argsIndex < argsLength) {\\r\\n                result[holders[argsIndex]] = args[argsIndex];\\r\\n            }\\r\\n        }\\r\\n        while (rangeLength--) {\\r\\n            result[leftIndex++] = args[argsIndex++];\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This function is like `composeArgs` except that the arguments composition\\r\\n     * is tailored for `_.partialRight`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} args The provided arguments.\\r\\n     * @param {Array} partials The arguments to append to those provided.\\r\\n     * @param {Array} holders The `partials` placeholder indexes.\\r\\n     * @params {boolean} [isCurried] Specify composing for a curried function.\\r\\n     * @returns {Array} Returns the new array of composed arguments.\\r\\n     */\\r\\n    function composeArgsRight(args, partials, holders, isCurried) {\\r\\n        var argsIndex = -1,\\r\\n            argsLength = args.length,\\r\\n            holdersIndex = -1,\\r\\n            holdersLength = holders.length,\\r\\n            rightIndex = -1,\\r\\n            rightLength = partials.length,\\r\\n            rangeLength = nativeMax(argsLength - holdersLength, 0),\\r\\n            result = Array(rangeLength + rightLength),\\r\\n            isUncurried = !isCurried;\\r\\n\\r\\n        while (++argsIndex < rangeLength) {\\r\\n            result[argsIndex] = args[argsIndex];\\r\\n        }\\r\\n        var offset = argsIndex;\\r\\n        while (++rightIndex < rightLength) {\\r\\n            result[offset + rightIndex] = partials[rightIndex];\\r\\n        }\\r\\n        while (++holdersIndex < holdersLength) {\\r\\n            if (isUncurried || argsIndex < argsLength) {\\r\\n                result[offset + holders[holdersIndex]] = args[argsIndex++];\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Copies the values of `source` to `array`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} source The array to copy values from.\\r\\n     * @param {Array} [array=[]] The array to copy values to.\\r\\n     * @returns {Array} Returns `array`.\\r\\n     */\\r\\n    function copyArray(source, array) {\\r\\n        var index = -1,\\r\\n            length = source.length;\\r\\n\\r\\n        array || (array = Array(length));\\r\\n        while (++index < length) {\\r\\n            array[index] = source[index];\\r\\n        }\\r\\n        return array;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Copies properties of `source` to `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} source The object to copy properties from.\\r\\n     * @param {Array} props The property identifiers to copy.\\r\\n     * @param {Object} [object={}] The object to copy properties to.\\r\\n     * @param {Function} [customizer] The function to customize copied values.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     */\\r\\n    function copyObject(source, props, object, customizer) {\\r\\n        var isNew = !object;\\r\\n        object || (object = {});\\r\\n\\r\\n        var index = -1,\\r\\n            length = props.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            var key = props[index];\\r\\n\\r\\n            var newValue = customizer\\r\\n                ? customizer(object[key], source[key], key, object, source)\\r\\n                : undefined;\\r\\n\\r\\n            if (newValue === undefined) {\\r\\n                newValue = source[key];\\r\\n            }\\r\\n            if (isNew) {\\r\\n                baseAssignValue(object, key, newValue);\\r\\n            } else {\\r\\n                assignValue(object, key, newValue);\\r\\n            }\\r\\n        }\\r\\n        return object;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Copies own symbols of `source` to `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} source The object to copy symbols from.\\r\\n     * @param {Object} [object={}] The object to copy symbols to.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     */\\r\\n    function copySymbols(source, object) {\\r\\n        return copyObject(source, getSymbols(source), object);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Copies own and inherited symbols of `source` to `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} source The object to copy symbols from.\\r\\n     * @param {Object} [object={}] The object to copy symbols to.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     */\\r\\n    function copySymbolsIn(source, object) {\\r\\n        return copyObject(source, getSymbolsIn(source), object);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function like `_.groupBy`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} setter The function to set accumulator values.\\r\\n     * @param {Function} [initializer] The accumulator object initializer.\\r\\n     * @returns {Function} Returns the new aggregator function.\\r\\n     */\\r\\n    function createAggregator(setter, initializer) {\\r\\n        return function(collection, iteratee) {\\r\\n            var func = isArray(collection) ? arrayAggregator : baseAggregator,\\r\\n                accumulator = initializer ? initializer() : {};\\r\\n\\r\\n            return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function like `_.assign`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} assigner The function to assign values.\\r\\n     * @returns {Function} Returns the new assigner function.\\r\\n     */\\r\\n    function createAssigner(assigner) {\\r\\n        return baseRest(function(object, sources) {\\r\\n            var index = -1,\\r\\n                length = sources.length,\\r\\n                customizer = length > 1 ? sources[length - 1] : undefined,\\r\\n                guard = length > 2 ? sources[2] : undefined;\\r\\n\\r\\n            customizer = (assigner.length > 3 && typeof customizer == 'function')\\r\\n                ? (length--, customizer)\\r\\n                : undefined;\\r\\n\\r\\n            if (guard && isIterateeCall(sources[0], sources[1], guard)) {\\r\\n                customizer = length < 3 ? undefined : customizer;\\r\\n                length = 1;\\r\\n            }\\r\\n            object = Object(object);\\r\\n            while (++index < length) {\\r\\n                var source = sources[index];\\r\\n                if (source) {\\r\\n                    assigner(object, source, index, customizer);\\r\\n                }\\r\\n            }\\r\\n            return object;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a `baseEach` or `baseEachRight` function.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} eachFunc The function to iterate over a collection.\\r\\n     * @param {boolean} [fromRight] Specify iterating from right to left.\\r\\n     * @returns {Function} Returns the new base function.\\r\\n     */\\r\\n    function createBaseEach(eachFunc, fromRight) {\\r\\n        return function(collection, iteratee) {\\r\\n            if (collection == null) {\\r\\n                return collection;\\r\\n            }\\r\\n            if (!isArrayLike(collection)) {\\r\\n                return eachFunc(collection, iteratee);\\r\\n            }\\r\\n            var length = collection.length,\\r\\n                index = fromRight ? length : -1,\\r\\n                iterable = Object(collection);\\r\\n\\r\\n            while ((fromRight ? index-- : ++index < length)) {\\r\\n                if (iteratee(iterable[index], index, iterable) === false) {\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            return collection;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {boolean} [fromRight] Specify iterating from right to left.\\r\\n     * @returns {Function} Returns the new base function.\\r\\n     */\\r\\n    function createBaseFor(fromRight) {\\r\\n        return function(object, iteratee, keysFunc) {\\r\\n            var index = -1,\\r\\n                iterable = Object(object),\\r\\n                props = keysFunc(object),\\r\\n                length = props.length;\\r\\n\\r\\n            while (length--) {\\r\\n                var key = props[fromRight ? length : ++index];\\r\\n                if (iteratee(iterable[key], key, iterable) === false) {\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            return object;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that wraps `func` to invoke it with the optional `this`\\r\\n     * binding of `thisArg`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to wrap.\\r\\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\r\\n     * @param {*} [thisArg] The `this` binding of `func`.\\r\\n     * @returns {Function} Returns the new wrapped function.\\r\\n     */\\r\\n    function createBind(func, bitmask, thisArg) {\\r\\n        var isBind = bitmask & WRAP_BIND_FLAG,\\r\\n            Ctor = createCtor(func);\\r\\n\\r\\n        function wrapper() {\\r\\n            var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\\r\\n            return fn.apply(isBind ? thisArg : this, arguments);\\r\\n        }\\r\\n        return wrapper;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that produces an instance of `Ctor` regardless of\\r\\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} Ctor The constructor to wrap.\\r\\n     * @returns {Function} Returns the new wrapped function.\\r\\n     */\\r\\n    function createCtor(Ctor) {\\r\\n        return function() {\\r\\n            // Use a `switch` statement to work with class constructors. See\\r\\n            // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\\r\\n            // for more details.\\r\\n            var args = arguments;\\r\\n            switch (args.length) {\\r\\n                case 0: return new Ctor;\\r\\n                case 1: return new Ctor(args[0]);\\r\\n                case 2: return new Ctor(args[0], args[1]);\\r\\n                case 3: return new Ctor(args[0], args[1], args[2]);\\r\\n                case 4: return new Ctor(args[0], args[1], args[2], args[3]);\\r\\n                case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\\r\\n                case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\\r\\n                case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\\r\\n            }\\r\\n            var thisBinding = baseCreate(Ctor.prototype),\\r\\n                result = Ctor.apply(thisBinding, args);\\r\\n\\r\\n            // Mimic the constructor's `return` behavior.\\r\\n            // See https://es5.github.io/#x13.2.2 for more details.\\r\\n            return isObject(result) ? result : thisBinding;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that wraps `func` to enable currying.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to wrap.\\r\\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\r\\n     * @param {number} arity The arity of `func`.\\r\\n     * @returns {Function} Returns the new wrapped function.\\r\\n     */\\r\\n    function createCurry(func, bitmask, arity) {\\r\\n        var Ctor = createCtor(func);\\r\\n\\r\\n        function wrapper() {\\r\\n            var length = arguments.length,\\r\\n                args = Array(length),\\r\\n                index = length,\\r\\n                placeholder = getHolder(wrapper);\\r\\n\\r\\n            while (index--) {\\r\\n                args[index] = arguments[index];\\r\\n            }\\r\\n            var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\\r\\n                ? []\\r\\n                : replaceHolders(args, placeholder);\\r\\n\\r\\n            length -= holders.length;\\r\\n            if (length < arity) {\\r\\n                return createRecurry(\\r\\n                    func, bitmask, createHybrid, wrapper.placeholder, undefined,\\r\\n                    args, holders, undefined, undefined, arity - length);\\r\\n            }\\r\\n            var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\\r\\n            return apply(fn, this, args);\\r\\n        }\\r\\n        return wrapper;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a `_.find` or `_.findLast` function.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} findIndexFunc The function to find the collection index.\\r\\n     * @returns {Function} Returns the new find function.\\r\\n     */\\r\\n    function createFind(findIndexFunc) {\\r\\n        return function(collection, predicate, fromIndex) {\\r\\n            var iterable = Object(collection);\\r\\n            if (!isArrayLike(collection)) {\\r\\n                var iteratee = baseIteratee(predicate, 3);\\r\\n                collection = keys(collection);\\r\\n                predicate = function(key) { return iteratee(iterable[key], key, iterable); };\\r\\n            }\\r\\n            var index = findIndexFunc(collection, predicate, fromIndex);\\r\\n            return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that wraps `func` to invoke it with optional `this`\\r\\n     * binding of `thisArg`, partial application, and currying.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function|string} func The function or method name to wrap.\\r\\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\r\\n     * @param {*} [thisArg] The `this` binding of `func`.\\r\\n     * @param {Array} [partials] The arguments to prepend to those provided to\\r\\n     *  the new function.\\r\\n     * @param {Array} [holders] The `partials` placeholder indexes.\\r\\n     * @param {Array} [partialsRight] The arguments to append to those provided\\r\\n     *  to the new function.\\r\\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\\r\\n     * @param {Array} [argPos] The argument positions of the new function.\\r\\n     * @param {number} [ary] The arity cap of `func`.\\r\\n     * @param {number} [arity] The arity of `func`.\\r\\n     * @returns {Function} Returns the new wrapped function.\\r\\n     */\\r\\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\\r\\n        var isAry = bitmask & WRAP_ARY_FLAG,\\r\\n            isBind = bitmask & WRAP_BIND_FLAG,\\r\\n            isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\\r\\n            isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\\r\\n            isFlip = bitmask & WRAP_FLIP_FLAG,\\r\\n            Ctor = isBindKey ? undefined : createCtor(func);\\r\\n\\r\\n        function wrapper() {\\r\\n            var length = arguments.length,\\r\\n                args = Array(length),\\r\\n                index = length;\\r\\n\\r\\n            while (index--) {\\r\\n                args[index] = arguments[index];\\r\\n            }\\r\\n            if (isCurried) {\\r\\n                var placeholder = getHolder(wrapper),\\r\\n                    holdersCount = countHolders(args, placeholder);\\r\\n            }\\r\\n            if (partials) {\\r\\n                args = composeArgs(args, partials, holders, isCurried);\\r\\n            }\\r\\n            if (partialsRight) {\\r\\n                args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\\r\\n            }\\r\\n            length -= holdersCount;\\r\\n            if (isCurried && length < arity) {\\r\\n                var newHolders = replaceHolders(args, placeholder);\\r\\n                return createRecurry(\\r\\n                    func, bitmask, createHybrid, wrapper.placeholder, thisArg,\\r\\n                    args, newHolders, argPos, ary, arity - length\\r\\n                );\\r\\n            }\\r\\n            var thisBinding = isBind ? thisArg : this,\\r\\n                fn = isBindKey ? thisBinding[func] : func;\\r\\n\\r\\n            length = args.length;\\r\\n            if (argPos) {\\r\\n                args = reorder(args, argPos);\\r\\n            } else if (isFlip && length > 1) {\\r\\n                args.reverse();\\r\\n            }\\r\\n            if (isAry && ary < length) {\\r\\n                args.length = ary;\\r\\n            }\\r\\n            if (this && this !== root && this instanceof wrapper) {\\r\\n                fn = Ctor || createCtor(fn);\\r\\n            }\\r\\n            return fn.apply(thisBinding, args);\\r\\n        }\\r\\n        return wrapper;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function like `_.invertBy`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} setter The function to set accumulator values.\\r\\n     * @param {Function} toIteratee The function to resolve iteratees.\\r\\n     * @returns {Function} Returns the new inverter function.\\r\\n     */\\r\\n    function createInverter(setter, toIteratee) {\\r\\n        return function(object, iteratee) {\\r\\n            return baseInverter(object, setter, toIteratee(iteratee), {});\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that wraps `func` to invoke it with the `this` binding\\r\\n     * of `thisArg` and `partials` prepended to the arguments it receives.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to wrap.\\r\\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\r\\n     * @param {*} thisArg The `this` binding of `func`.\\r\\n     * @param {Array} partials The arguments to prepend to those provided to\\r\\n     *  the new function.\\r\\n     * @returns {Function} Returns the new wrapped function.\\r\\n     */\\r\\n    function createPartial(func, bitmask, thisArg, partials) {\\r\\n        var isBind = bitmask & WRAP_BIND_FLAG,\\r\\n            Ctor = createCtor(func);\\r\\n\\r\\n        function wrapper() {\\r\\n            var argsIndex = -1,\\r\\n                argsLength = arguments.length,\\r\\n                leftIndex = -1,\\r\\n                leftLength = partials.length,\\r\\n                args = Array(leftLength + argsLength),\\r\\n                fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\\r\\n\\r\\n            while (++leftIndex < leftLength) {\\r\\n                args[leftIndex] = partials[leftIndex];\\r\\n            }\\r\\n            while (argsLength--) {\\r\\n                args[leftIndex++] = arguments[++argsIndex];\\r\\n            }\\r\\n            return apply(fn, isBind ? thisArg : this, args);\\r\\n        }\\r\\n        return wrapper;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a `_.range` or `_.rangeRight` function.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {boolean} [fromRight] Specify iterating from right to left.\\r\\n     * @returns {Function} Returns the new range function.\\r\\n     */\\r\\n    function createRange(fromRight) {\\r\\n        return function(start, end, step) {\\r\\n            if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\\r\\n                end = step = undefined;\\r\\n            }\\r\\n            // Ensure the sign of `-0` is preserved.\\r\\n            start = toFinite(start);\\r\\n            if (end === undefined) {\\r\\n                end = start;\\r\\n                start = 0;\\r\\n            } else {\\r\\n                end = toFinite(end);\\r\\n            }\\r\\n            step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\\r\\n            return baseRange(start, end, step, fromRight);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that wraps `func` to continue currying.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to wrap.\\r\\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\r\\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\\r\\n     * @param {*} placeholder The placeholder value.\\r\\n     * @param {*} [thisArg] The `this` binding of `func`.\\r\\n     * @param {Array} [partials] The arguments to prepend to those provided to\\r\\n     *  the new function.\\r\\n     * @param {Array} [holders] The `partials` placeholder indexes.\\r\\n     * @param {Array} [argPos] The argument positions of the new function.\\r\\n     * @param {number} [ary] The arity cap of `func`.\\r\\n     * @param {number} [arity] The arity of `func`.\\r\\n     * @returns {Function} Returns the new wrapped function.\\r\\n     */\\r\\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\\r\\n        var isCurry = bitmask & WRAP_CURRY_FLAG,\\r\\n            newHolders = isCurry ? holders : undefined,\\r\\n            newHoldersRight = isCurry ? undefined : holders,\\r\\n            newPartials = isCurry ? partials : undefined,\\r\\n            newPartialsRight = isCurry ? undefined : partials;\\r\\n\\r\\n        bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\\r\\n        bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\\r\\n\\r\\n        if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\\r\\n            bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\\r\\n        }\\r\\n        var newData = [\\r\\n            func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\\r\\n            newHoldersRight, argPos, ary, arity\\r\\n        ];\\r\\n\\r\\n        var result = wrapFunc.apply(undefined, newData);\\r\\n        if (isLaziable(func)) {\\r\\n            setData(result, newData);\\r\\n        }\\r\\n        result.placeholder = placeholder;\\r\\n        return setWrapToString(result, func, bitmask);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a set object of `values`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} values The values to add to the set.\\r\\n     * @returns {Object} Returns the new set.\\r\\n     */\\r\\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\\r\\n        return new Set(values);\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * Creates a function that either curries or invokes `func` with optional\\r\\n     * `this` binding and partially applied arguments.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function|string} func The function or method name to wrap.\\r\\n     * @param {number} bitmask The bitmask flags.\\r\\n     *    1 - `_.bind`\\r\\n     *    2 - `_.bindKey`\\r\\n     *    4 - `_.curry` or `_.curryRight` of a bound function\\r\\n     *    8 - `_.curry`\\r\\n     *   16 - `_.curryRight`\\r\\n     *   32 - `_.partial`\\r\\n     *   64 - `_.partialRight`\\r\\n     *  128 - `_.rearg`\\r\\n     *  256 - `_.ary`\\r\\n     *  512 - `_.flip`\\r\\n     * @param {*} [thisArg] The `this` binding of `func`.\\r\\n     * @param {Array} [partials] The arguments to be partially applied.\\r\\n     * @param {Array} [holders] The `partials` placeholder indexes.\\r\\n     * @param {Array} [argPos] The argument positions of the new function.\\r\\n     * @param {number} [ary] The arity cap of `func`.\\r\\n     * @param {number} [arity] The arity of `func`.\\r\\n     * @returns {Function} Returns the new wrapped function.\\r\\n     */\\r\\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\\r\\n        var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\\r\\n        if (!isBindKey && typeof func != 'function') {\\r\\n            throw new TypeError(FUNC_ERROR_TEXT);\\r\\n        }\\r\\n        var length = partials ? partials.length : 0;\\r\\n        if (!length) {\\r\\n            bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\\r\\n            partials = holders = undefined;\\r\\n        }\\r\\n        ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\\r\\n        arity = arity === undefined ? arity : toInteger(arity);\\r\\n        length -= holders ? holders.length : 0;\\r\\n\\r\\n        if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\\r\\n            var partialsRight = partials,\\r\\n                holdersRight = holders;\\r\\n\\r\\n            partials = holders = undefined;\\r\\n        }\\r\\n        var data = isBindKey ? undefined : getData(func);\\r\\n\\r\\n        var newData = [\\r\\n            func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\\r\\n            argPos, ary, arity\\r\\n        ];\\r\\n\\r\\n        if (data) {\\r\\n            mergeData(newData, data);\\r\\n        }\\r\\n        func = newData[0];\\r\\n        bitmask = newData[1];\\r\\n        thisArg = newData[2];\\r\\n        partials = newData[3];\\r\\n        holders = newData[4];\\r\\n        arity = newData[9] = newData[9] === undefined\\r\\n            ? (isBindKey ? 0 : func.length)\\r\\n            : nativeMax(newData[9] - length, 0);\\r\\n\\r\\n        if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\\r\\n            bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\\r\\n        }\\r\\n        if (!bitmask || bitmask == WRAP_BIND_FLAG) {\\r\\n            var result = createBind(func, bitmask, thisArg);\\r\\n        } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\\r\\n            result = createCurry(func, bitmask, arity);\\r\\n        } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\\r\\n            result = createPartial(func, bitmask, thisArg, partials);\\r\\n        } else {\\r\\n            result = createHybrid.apply(undefined, newData);\\r\\n        }\\r\\n        var setter = data ? baseSetData : setData;\\r\\n        return setWrapToString(setter(result, newData), func, bitmask);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\\r\\n     * objects into destination objects that are passed thru.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} objValue The destination value.\\r\\n     * @param {*} srcValue The source value.\\r\\n     * @param {string} key The key of the property to merge.\\r\\n     * @param {Object} object The parent object of `objValue`.\\r\\n     * @param {Object} source The parent object of `srcValue`.\\r\\n     * @param {Object} [stack] Tracks traversed source values and their merged\\r\\n     *  counterparts.\\r\\n     * @returns {*} Returns the value to assign.\\r\\n     */\\r\\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\\r\\n        if (isObject(objValue) && isObject(srcValue)) {\\r\\n            // Recursively merge objects and arrays (susceptible to call stack limits).\\r\\n            stack.set(srcValue, objValue);\\r\\n            baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\\r\\n            stack['delete'](srcValue);\\r\\n        }\\r\\n        return objValue;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\\r\\n     * objects.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to inspect.\\r\\n     * @param {string} key The key of the property to inspect.\\r\\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\\r\\n     */\\r\\n    function customOmitClone(value) {\\r\\n        return isPlainObject(value) ? undefined : value;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\\r\\n     * partial deep comparisons.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to compare.\\r\\n     * @param {Array} other The other array to compare.\\r\\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\r\\n     * @param {Function} customizer The function to customize comparisons.\\r\\n     * @param {Function} equalFunc The function to determine equivalents of values.\\r\\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\\r\\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\\r\\n     */\\r\\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\\r\\n        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\\r\\n            arrLength = array.length,\\r\\n            othLength = other.length;\\r\\n\\r\\n        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\\r\\n            return false;\\r\\n        }\\r\\n        // Assume cyclic values are equal.\\r\\n        var stacked = stack.get(array);\\r\\n        if (stacked && stack.get(other)) {\\r\\n            return stacked == other;\\r\\n        }\\r\\n        var index = -1,\\r\\n            result = true,\\r\\n            seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\\r\\n\\r\\n        stack.set(array, other);\\r\\n        stack.set(other, array);\\r\\n\\r\\n        // Ignore non-index properties.\\r\\n        while (++index < arrLength) {\\r\\n            var arrValue = array[index],\\r\\n                othValue = other[index];\\r\\n\\r\\n            if (customizer) {\\r\\n                var compared = isPartial\\r\\n                    ? customizer(othValue, arrValue, index, other, array, stack)\\r\\n                    : customizer(arrValue, othValue, index, array, other, stack);\\r\\n            }\\r\\n            if (compared !== undefined) {\\r\\n                if (compared) {\\r\\n                    continue;\\r\\n                }\\r\\n                result = false;\\r\\n                break;\\r\\n            }\\r\\n            // Recursively compare arrays (susceptible to call stack limits).\\r\\n            if (seen) {\\r\\n                if (!arraySome(other, function(othValue, othIndex) {\\r\\n                    if (!cacheHas(seen, othIndex) &&\\r\\n                        (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\\r\\n                        return seen.push(othIndex);\\r\\n                    }\\r\\n                })) {\\r\\n                    result = false;\\r\\n                    break;\\r\\n                }\\r\\n            } else if (!(\\r\\n                arrValue === othValue ||\\r\\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\\r\\n            )) {\\r\\n                result = false;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        stack['delete'](array);\\r\\n        stack['delete'](other);\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\\r\\n     * the same `toStringTag`.\\r\\n     *\\r\\n     * **Note:** This function only supports comparing values with tags of\\r\\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to compare.\\r\\n     * @param {Object} other The other object to compare.\\r\\n     * @param {string} tag The `toStringTag` of the objects to compare.\\r\\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\r\\n     * @param {Function} customizer The function to customize comparisons.\\r\\n     * @param {Function} equalFunc The function to determine equivalents of values.\\r\\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\\r\\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\r\\n     */\\r\\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\\r\\n        switch (tag) {\\r\\n            case dataViewTag:\\r\\n                if ((object.byteLength != other.byteLength) ||\\r\\n                    (object.byteOffset != other.byteOffset)) {\\r\\n                    return false;\\r\\n                }\\r\\n                object = object.buffer;\\r\\n                other = other.buffer;\\r\\n\\r\\n            case arrayBufferTag:\\r\\n                if ((object.byteLength != other.byteLength) ||\\r\\n                    !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\\r\\n                    return false;\\r\\n                }\\r\\n                return true;\\r\\n\\r\\n            case boolTag:\\r\\n            case dateTag:\\r\\n            case numberTag:\\r\\n                // Coerce booleans to `1` or `0` and dates to milliseconds.\\r\\n                // Invalid dates are coerced to `NaN`.\\r\\n                return eq(+object, +other);\\r\\n\\r\\n            case errorTag:\\r\\n                return object.name == other.name && object.message == other.message;\\r\\n\\r\\n            case regexpTag:\\r\\n            case stringTag:\\r\\n                // Coerce regexes to strings and treat strings, primitives and objects,\\r\\n                // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\\r\\n                // for more details.\\r\\n                return object == (other + '');\\r\\n\\r\\n            case mapTag:\\r\\n                var convert = mapToArray;\\r\\n\\r\\n            case setTag:\\r\\n                var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\\r\\n                convert || (convert = setToArray);\\r\\n\\r\\n                if (object.size != other.size && !isPartial) {\\r\\n                    return false;\\r\\n                }\\r\\n                // Assume cyclic values are equal.\\r\\n                var stacked = stack.get(object);\\r\\n                if (stacked) {\\r\\n                    return stacked == other;\\r\\n                }\\r\\n                bitmask |= COMPARE_UNORDERED_FLAG;\\r\\n\\r\\n                // Recursively compare objects (susceptible to call stack limits).\\r\\n                stack.set(object, other);\\r\\n                var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\\r\\n                stack['delete'](object);\\r\\n                return result;\\r\\n\\r\\n            case symbolTag:\\r\\n                if (symbolValueOf) {\\r\\n                    return symbolValueOf.call(object) == symbolValueOf.call(other);\\r\\n                }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `baseIsEqualDeep` for objects with support for\\r\\n     * partial deep comparisons.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to compare.\\r\\n     * @param {Object} other The other object to compare.\\r\\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\r\\n     * @param {Function} customizer The function to customize comparisons.\\r\\n     * @param {Function} equalFunc The function to determine equivalents of values.\\r\\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\\r\\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\r\\n     */\\r\\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\\r\\n        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\\r\\n            objProps = getAllKeys(object),\\r\\n            objLength = objProps.length,\\r\\n            othProps = getAllKeys(other),\\r\\n            othLength = othProps.length;\\r\\n\\r\\n        if (objLength != othLength && !isPartial) {\\r\\n            return false;\\r\\n        }\\r\\n        var index = objLength;\\r\\n        while (index--) {\\r\\n            var key = objProps[index];\\r\\n            if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\\r\\n                return false;\\r\\n            }\\r\\n        }\\r\\n        // Assume cyclic values are equal.\\r\\n        var stacked = stack.get(object);\\r\\n        if (stacked && stack.get(other)) {\\r\\n            return stacked == other;\\r\\n        }\\r\\n        var result = true;\\r\\n        stack.set(object, other);\\r\\n        stack.set(other, object);\\r\\n\\r\\n        var skipCtor = isPartial;\\r\\n        while (++index < objLength) {\\r\\n            key = objProps[index];\\r\\n            var objValue = object[key],\\r\\n                othValue = other[key];\\r\\n\\r\\n            if (customizer) {\\r\\n                var compared = isPartial\\r\\n                    ? customizer(othValue, objValue, key, other, object, stack)\\r\\n                    : customizer(objValue, othValue, key, object, other, stack);\\r\\n            }\\r\\n            // Recursively compare objects (susceptible to call stack limits).\\r\\n            if (!(compared === undefined\\r\\n                    ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\\r\\n                    : compared\\r\\n            )) {\\r\\n                result = false;\\r\\n                break;\\r\\n            }\\r\\n            skipCtor || (skipCtor = key == 'constructor');\\r\\n        }\\r\\n        if (result && !skipCtor) {\\r\\n            var objCtor = object.constructor,\\r\\n                othCtor = other.constructor;\\r\\n\\r\\n            // Non `Object` object instances with different constructors are not equal.\\r\\n            if (objCtor != othCtor &&\\r\\n                ('constructor' in object && 'constructor' in other) &&\\r\\n                !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\\r\\n                    typeof othCtor == 'function' && othCtor instanceof othCtor)) {\\r\\n                result = false;\\r\\n            }\\r\\n        }\\r\\n        stack['delete'](object);\\r\\n        stack['delete'](other);\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `baseRest` which flattens the rest array.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to apply a rest parameter to.\\r\\n     * @returns {Function} Returns the new function.\\r\\n     */\\r\\n    function flatRest(func) {\\r\\n        return setToString(overRest(func, undefined, flatten), func + '');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array of own enumerable property names and symbols of `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the array of property names and symbols.\\r\\n     */\\r\\n    function getAllKeys(object) {\\r\\n        return baseGetAllKeys(object, keys, getSymbols);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array of own and inherited enumerable property names and\\r\\n     * symbols of `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the array of property names and symbols.\\r\\n     */\\r\\n    function getAllKeysIn(object) {\\r\\n        return baseGetAllKeys(object, keysIn, getSymbolsIn);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets metadata for `func`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to query.\\r\\n     * @returns {*} Returns the metadata for `func`.\\r\\n     */\\r\\n    var getData = !metaMap ? noop : function(func) {\\r\\n        return metaMap.get(func);\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * Gets the name of `func`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to query.\\r\\n     * @returns {string} Returns the function name.\\r\\n     */\\r\\n    function getFuncName(func) {\\r\\n        var result = (func.name + ''),\\r\\n            array = realNames[result],\\r\\n            length = hasOwnProperty.call(realNames, result) ? array.length : 0;\\r\\n\\r\\n        while (length--) {\\r\\n            var data = array[length],\\r\\n                otherFunc = data.func;\\r\\n            if (otherFunc == null || otherFunc == func) {\\r\\n                return data.name;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the argument placeholder value for `func`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to inspect.\\r\\n     * @returns {*} Returns the placeholder value.\\r\\n     */\\r\\n    function getHolder(func) {\\r\\n        var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\\r\\n        return object.placeholder;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the data for `map`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} map The map to query.\\r\\n     * @param {string} key The reference key.\\r\\n     * @returns {*} Returns the map data.\\r\\n     */\\r\\n    function getMapData(map, key) {\\r\\n        var data = map.__data__;\\r\\n        return isKeyable(key)\\r\\n            ? data[typeof key == 'string' ? 'string' : 'hash']\\r\\n            : data.map;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the property names, values, and compare flags of `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the match data of `object`.\\r\\n     */\\r\\n    function getMatchData(object) {\\r\\n        var result = keys(object),\\r\\n            length = result.length;\\r\\n\\r\\n        while (length--) {\\r\\n            var key = result[length],\\r\\n                value = object[key];\\r\\n\\r\\n            result[length] = [key, value, isStrictComparable(value)];\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the native function at `key` of `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {string} key The key of the method to get.\\r\\n     * @returns {*} Returns the function if it's native, else `undefined`.\\r\\n     */\\r\\n    function getNative(object, key) {\\r\\n        var value = getValue(object, key);\\r\\n        return baseIsNative(value) ? value : undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to query.\\r\\n     * @returns {string} Returns the raw `toStringTag`.\\r\\n     */\\r\\n    function getRawTag(value) {\\r\\n        var isOwn = hasOwnProperty.call(value, symToStringTag),\\r\\n            tag = value[symToStringTag];\\r\\n\\r\\n        try {\\r\\n            value[symToStringTag] = undefined;\\r\\n            var unmasked = true;\\r\\n        } catch (e) {}\\r\\n\\r\\n        var result = nativeObjectToString.call(value);\\r\\n        if (unmasked) {\\r\\n            if (isOwn) {\\r\\n                value[symToStringTag] = tag;\\r\\n            } else {\\r\\n                delete value[symToStringTag];\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array of the own enumerable symbols of `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the array of symbols.\\r\\n     */\\r\\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\\r\\n        if (object == null) {\\r\\n            return [];\\r\\n        }\\r\\n        object = Object(object);\\r\\n        return arrayFilter(nativeGetSymbols(object), function(symbol) {\\r\\n            return propertyIsEnumerable.call(object, symbol);\\r\\n        });\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * Creates an array of the own and inherited enumerable symbols of `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the array of symbols.\\r\\n     */\\r\\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\\r\\n        var result = [];\\r\\n        while (object) {\\r\\n            arrayPush(result, getSymbols(object));\\r\\n            object = getPrototype(object);\\r\\n        }\\r\\n        return result;\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * Gets the `toStringTag` of `value`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to query.\\r\\n     * @returns {string} Returns the `toStringTag`.\\r\\n     */\\r\\n    var getTag = baseGetTag;\\r\\n\\r\\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\\r\\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\\r\\n        (Map && getTag(new Map) != mapTag) ||\\r\\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\\r\\n        (Set && getTag(new Set) != setTag) ||\\r\\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\\r\\n        getTag = function(value) {\\r\\n            var result = baseGetTag(value),\\r\\n                Ctor = result == objectTag ? value.constructor : undefined,\\r\\n                ctorString = Ctor ? toSource(Ctor) : '';\\r\\n\\r\\n            if (ctorString) {\\r\\n                switch (ctorString) {\\r\\n                    case dataViewCtorString: return dataViewTag;\\r\\n                    case mapCtorString: return mapTag;\\r\\n                    case promiseCtorString: return promiseTag;\\r\\n                    case setCtorString: return setTag;\\r\\n                    case weakMapCtorString: return weakMapTag;\\r\\n                }\\r\\n            }\\r\\n            return result;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {number} start The start of the view.\\r\\n     * @param {number} end The end of the view.\\r\\n     * @param {Array} transforms The transformations to apply to the view.\\r\\n     * @returns {Object} Returns an object containing the `start` and `end`\\r\\n     *  positions of the view.\\r\\n     */\\r\\n    function getView(start, end, transforms) {\\r\\n        var index = -1,\\r\\n            length = transforms.length;\\r\\n\\r\\n        while (++index < length) {\\r\\n            var data = transforms[index],\\r\\n                size = data.size;\\r\\n\\r\\n            switch (data.type) {\\r\\n                case 'drop':      start += size; break;\\r\\n                case 'dropRight': end -= size; break;\\r\\n                case 'take':      end = nativeMin(end, start + size); break;\\r\\n                case 'takeRight': start = nativeMax(start, end - size); break;\\r\\n            }\\r\\n        }\\r\\n        return { 'start': start, 'end': end };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Extracts wrapper details from the `source` body comment.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} source The source to inspect.\\r\\n     * @returns {Array} Returns the wrapper details.\\r\\n     */\\r\\n    function getWrapDetails(source) {\\r\\n        var match = source.match(reWrapDetails);\\r\\n        return match ? match[1].split(reSplitDetails) : [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `path` exists on `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {Array|string} path The path to check.\\r\\n     * @param {Function} hasFunc The function to check properties.\\r\\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\\r\\n     */\\r\\n    function hasPath(object, path, hasFunc) {\\r\\n        path = castPath(path, object);\\r\\n\\r\\n        var index = -1,\\r\\n            length = path.length,\\r\\n            result = false;\\r\\n\\r\\n        while (++index < length) {\\r\\n            var key = toKey(path[index]);\\r\\n            if (!(result = object != null && hasFunc(object, key))) {\\r\\n                break;\\r\\n            }\\r\\n            object = object[key];\\r\\n        }\\r\\n        if (result || ++index != length) {\\r\\n            return result;\\r\\n        }\\r\\n        length = object == null ? 0 : object.length;\\r\\n        return !!length && isLength(length) && isIndex(key, length) &&\\r\\n            (isArray(object) || isArguments(object));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes an array clone.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to clone.\\r\\n     * @returns {Array} Returns the initialized clone.\\r\\n     */\\r\\n    function initCloneArray(array) {\\r\\n        var length = array.length,\\r\\n            result = new array.constructor(length);\\r\\n\\r\\n        // Add properties assigned by `RegExp#exec`.\\r\\n        if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\\r\\n            result.index = array.index;\\r\\n            result.input = array.input;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes an object clone.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to clone.\\r\\n     * @returns {Object} Returns the initialized clone.\\r\\n     */\\r\\n    function initCloneObject(object) {\\r\\n        return (typeof object.constructor == 'function' && !isPrototype(object))\\r\\n            ? baseCreate(getPrototype(object))\\r\\n            : {};\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initializes an object clone based on its `toStringTag`.\\r\\n     *\\r\\n     * **Note:** This function only supports cloning values with tags of\\r\\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to clone.\\r\\n     * @param {string} tag The `toStringTag` of the object to clone.\\r\\n     * @param {boolean} [isDeep] Specify a deep clone.\\r\\n     * @returns {Object} Returns the initialized clone.\\r\\n     */\\r\\n    function initCloneByTag(object, tag, isDeep) {\\r\\n        var Ctor = object.constructor;\\r\\n        switch (tag) {\\r\\n            case arrayBufferTag:\\r\\n                return cloneArrayBuffer(object);\\r\\n\\r\\n            case boolTag:\\r\\n            case dateTag:\\r\\n                return new Ctor(+object);\\r\\n\\r\\n            case dataViewTag:\\r\\n                return cloneDataView(object, isDeep);\\r\\n\\r\\n            case float32Tag: case float64Tag:\\r\\n            case int8Tag: case int16Tag: case int32Tag:\\r\\n            case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\\r\\n                return cloneTypedArray(object, isDeep);\\r\\n\\r\\n            case mapTag:\\r\\n                return new Ctor;\\r\\n\\r\\n            case numberTag:\\r\\n            case stringTag:\\r\\n                return new Ctor(object);\\r\\n\\r\\n            case regexpTag:\\r\\n                return cloneRegExp(object);\\r\\n\\r\\n            case setTag:\\r\\n                return new Ctor;\\r\\n\\r\\n            case symbolTag:\\r\\n                return cloneSymbol(object);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} source The source to modify.\\r\\n     * @returns {Array} details The details to insert.\\r\\n     * @returns {string} Returns the modified source.\\r\\n     */\\r\\n    function insertWrapDetails(source, details) {\\r\\n        var length = details.length;\\r\\n        if (!length) {\\r\\n            return source;\\r\\n        }\\r\\n        var lastIndex = length - 1;\\r\\n        details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\\r\\n        details = details.join(length > 2 ? ', ' : ' ');\\r\\n        return source.replace(reWrapComment, '{\\\\n/* [wrapped with ' + details + '] */\\\\n');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is a flattenable `arguments` object or array.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\\r\\n     */\\r\\n    function isFlattenable(value) {\\r\\n        return isArray(value) || isArguments(value) ||\\r\\n            !!(spreadableSymbol && value && value[spreadableSymbol]);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is a valid array-like index.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\\r\\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\\r\\n     */\\r\\n    function isIndex(value, length) {\\r\\n        var type = typeof value;\\r\\n        length = length == null ? MAX_SAFE_INTEGER : length;\\r\\n\\r\\n        return !!length &&\\r\\n            (type == 'number' ||\\r\\n                (type != 'symbol' && reIsUint.test(value))) &&\\r\\n            (value > -1 && value % 1 == 0 && value < length);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the given arguments are from an iteratee call.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The potential iteratee value argument.\\r\\n     * @param {*} index The potential iteratee index or key argument.\\r\\n     * @param {*} object The potential iteratee object argument.\\r\\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\\r\\n     *  else `false`.\\r\\n     */\\r\\n    function isIterateeCall(value, index, object) {\\r\\n        if (!isObject(object)) {\\r\\n            return false;\\r\\n        }\\r\\n        var type = typeof index;\\r\\n        if (type == 'number'\\r\\n            ? (isArrayLike(object) && isIndex(index, object.length))\\r\\n            : (type == 'string' && index in object)\\r\\n        ) {\\r\\n            return eq(object[index], value);\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is a property name and not a property path.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @param {Object} [object] The object to query keys on.\\r\\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\\r\\n     */\\r\\n    function isKey(value, object) {\\r\\n        if (isArray(value)) {\\r\\n            return false;\\r\\n        }\\r\\n        var type = typeof value;\\r\\n        if (type == 'number' || type == 'symbol' || type == 'boolean' ||\\r\\n            value == null || isSymbol(value)) {\\r\\n            return true;\\r\\n        }\\r\\n        return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\\r\\n            (object != null && value in Object(object));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is suitable for use as unique object key.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\\r\\n     */\\r\\n    function isKeyable(value) {\\r\\n        var type = typeof value;\\r\\n        return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\\r\\n            ? (value !== '__proto__')\\r\\n            : (value === null);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `func` has a lazy counterpart.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to check.\\r\\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\\r\\n     *  else `false`.\\r\\n     */\\r\\n    function isLaziable(func) {\\r\\n        var funcName = getFuncName(func),\\r\\n            other = lodash[funcName];\\r\\n\\r\\n        if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\\r\\n            return false;\\r\\n        }\\r\\n        if (func === other) {\\r\\n            return true;\\r\\n        }\\r\\n        var data = getData(other);\\r\\n        return !!data && func === data[0];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `func` has its source masked.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to check.\\r\\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\\r\\n     */\\r\\n    function isMasked(func) {\\r\\n        return !!maskSrcKey && (maskSrcKey in func);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is likely a prototype object.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\\r\\n     */\\r\\n    function isPrototype(value) {\\r\\n        var Ctor = value && value.constructor,\\r\\n            proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\\r\\n\\r\\n        return value === proto;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\\r\\n     *  equality comparisons, else `false`.\\r\\n     */\\r\\n    function isStrictComparable(value) {\\r\\n        return value === value && !isObject(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `matchesProperty` for source values suitable\\r\\n     * for strict equality comparisons, i.e. `===`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} key The key of the property to get.\\r\\n     * @param {*} srcValue The value to match.\\r\\n     * @returns {Function} Returns the new spec function.\\r\\n     */\\r\\n    function matchesStrictComparable(key, srcValue) {\\r\\n        return function(object) {\\r\\n            if (object == null) {\\r\\n                return false;\\r\\n            }\\r\\n            return object[key] === srcValue &&\\r\\n                (srcValue !== undefined || (key in Object(object)));\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `_.memoize` which clears the memoized function's\\r\\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to have its output memoized.\\r\\n     * @returns {Function} Returns the new memoized function.\\r\\n     */\\r\\n    function memoizeCapped(func) {\\r\\n        var result = memoize(func, function(key) {\\r\\n            if (cache.size === MAX_MEMOIZE_SIZE) {\\r\\n                cache.clear();\\r\\n            }\\r\\n            return key;\\r\\n        });\\r\\n\\r\\n        var cache = result.cache;\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Merges the function metadata of `source` into `data`.\\r\\n     *\\r\\n     * Merging metadata reduces the number of wrappers used to invoke a function.\\r\\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\\r\\n     * may be applied regardless of execution order. Methods like `_.ary` and\\r\\n     * `_.rearg` modify function arguments, making the order in which they are\\r\\n     * executed important, preventing the merging of metadata. However, we make\\r\\n     * an exception for a safe combined case where curried functions have `_.ary`\\r\\n     * and or `_.rearg` applied.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} data The destination metadata.\\r\\n     * @param {Array} source The source metadata.\\r\\n     * @returns {Array} Returns `data`.\\r\\n     */\\r\\n    function mergeData(data, source) {\\r\\n        var bitmask = data[1],\\r\\n            srcBitmask = source[1],\\r\\n            newBitmask = bitmask | srcBitmask,\\r\\n            isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\\r\\n\\r\\n        var isCombo =\\r\\n            ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\\r\\n            ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\\r\\n            ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\\r\\n\\r\\n        // Exit early if metadata can't be merged.\\r\\n        if (!(isCommon || isCombo)) {\\r\\n            return data;\\r\\n        }\\r\\n        // Use source `thisArg` if available.\\r\\n        if (srcBitmask & WRAP_BIND_FLAG) {\\r\\n            data[2] = source[2];\\r\\n            // Set when currying a bound function.\\r\\n            newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\\r\\n        }\\r\\n        // Compose partial arguments.\\r\\n        var value = source[3];\\r\\n        if (value) {\\r\\n            var partials = data[3];\\r\\n            data[3] = partials ? composeArgs(partials, value, source[4]) : value;\\r\\n            data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\\r\\n        }\\r\\n        // Compose partial right arguments.\\r\\n        value = source[5];\\r\\n        if (value) {\\r\\n            partials = data[5];\\r\\n            data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\\r\\n            data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\\r\\n        }\\r\\n        // Use source `argPos` if available.\\r\\n        value = source[7];\\r\\n        if (value) {\\r\\n            data[7] = value;\\r\\n        }\\r\\n        // Use source `ary` if it's smaller.\\r\\n        if (srcBitmask & WRAP_ARY_FLAG) {\\r\\n            data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\\r\\n        }\\r\\n        // Use source `arity` if one is not provided.\\r\\n        if (data[9] == null) {\\r\\n            data[9] = source[9];\\r\\n        }\\r\\n        // Use source `func` and merge bitmasks.\\r\\n        data[0] = source[0];\\r\\n        data[1] = newBitmask;\\r\\n\\r\\n        return data;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This function is like\\r\\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\\r\\n     * except that it includes inherited enumerable properties.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the array of property names.\\r\\n     */\\r\\n    function nativeKeysIn(object) {\\r\\n        var result = [];\\r\\n        if (object != null) {\\r\\n            for (var key in Object(object)) {\\r\\n                result.push(key);\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `value` to a string using `Object.prototype.toString`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to convert.\\r\\n     * @returns {string} Returns the converted string.\\r\\n     */\\r\\n    function objectToString(value) {\\r\\n        return nativeObjectToString.call(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * A specialized version of `baseRest` which transforms the rest array.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to apply a rest parameter to.\\r\\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\\r\\n     * @param {Function} transform The rest array transform.\\r\\n     * @returns {Function} Returns the new function.\\r\\n     */\\r\\n    function overRest(func, start, transform) {\\r\\n        start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\\r\\n        return function() {\\r\\n            var args = arguments,\\r\\n                index = -1,\\r\\n                length = nativeMax(args.length - start, 0),\\r\\n                array = Array(length);\\r\\n\\r\\n            while (++index < length) {\\r\\n                array[index] = args[start + index];\\r\\n            }\\r\\n            index = -1;\\r\\n            var otherArgs = Array(start + 1);\\r\\n            while (++index < start) {\\r\\n                otherArgs[index] = args[index];\\r\\n            }\\r\\n            otherArgs[start] = transform(array);\\r\\n            return apply(func, this, otherArgs);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the parent value at `path` of `object`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {Array} path The path to get the parent value of.\\r\\n     * @returns {*} Returns the parent value.\\r\\n     */\\r\\n    function parent(object, path) {\\r\\n        return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reorder `array` according to the specified indexes where the element at\\r\\n     * the first index is assigned as the first element, the element at\\r\\n     * the second index is assigned as the second element, and so on.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Array} array The array to reorder.\\r\\n     * @param {Array} indexes The arranged array indexes.\\r\\n     * @returns {Array} Returns `array`.\\r\\n     */\\r\\n    function reorder(array, indexes) {\\r\\n        var arrLength = array.length,\\r\\n            length = nativeMin(indexes.length, arrLength),\\r\\n            oldArray = copyArray(array);\\r\\n\\r\\n        while (length--) {\\r\\n            var index = indexes[length];\\r\\n            array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\\r\\n        }\\r\\n        return array;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets metadata for `func`.\\r\\n     *\\r\\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\\r\\n     * period of time, it will trip its breaker and transition to an identity\\r\\n     * function to avoid garbage collection pauses in V8. See\\r\\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\\r\\n     * for more details.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to associate metadata with.\\r\\n     * @param {*} data The metadata.\\r\\n     * @returns {Function} Returns `func`.\\r\\n     */\\r\\n    var setData = shortOut(baseSetData);\\r\\n\\r\\n    /**\\r\\n     * Sets the `toString` method of `func` to return `string`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to modify.\\r\\n     * @param {Function} string The `toString` result.\\r\\n     * @returns {Function} Returns `func`.\\r\\n     */\\r\\n    var setToString = shortOut(baseSetToString);\\r\\n\\r\\n    /**\\r\\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\\r\\n     * with wrapper details in a comment at the top of the source body.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} wrapper The function to modify.\\r\\n     * @param {Function} reference The reference function.\\r\\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\r\\n     * @returns {Function} Returns `wrapper`.\\r\\n     */\\r\\n    function setWrapToString(wrapper, reference, bitmask) {\\r\\n        var source = (reference + '');\\r\\n        return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that'll short out and invoke `identity` instead\\r\\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\\r\\n     * milliseconds.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to restrict.\\r\\n     * @returns {Function} Returns the new shortable function.\\r\\n     */\\r\\n    function shortOut(func) {\\r\\n        var count = 0,\\r\\n            lastCalled = 0;\\r\\n\\r\\n        return function() {\\r\\n            var stamp = nativeNow(),\\r\\n                remaining = HOT_SPAN - (stamp - lastCalled);\\r\\n\\r\\n            lastCalled = stamp;\\r\\n            if (remaining > 0) {\\r\\n                if (++count >= HOT_COUNT) {\\r\\n                    return arguments[0];\\r\\n                }\\r\\n            } else {\\r\\n                count = 0;\\r\\n            }\\r\\n            return func.apply(undefined, arguments);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `string` to a property path array.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {string} string The string to convert.\\r\\n     * @returns {Array} Returns the property path array.\\r\\n     */\\r\\n    var stringToPath = memoizeCapped(function(string) {\\r\\n        var result = [];\\r\\n        if (string.charCodeAt(0) === 46 /* . */) {\\r\\n            result.push('');\\r\\n        }\\r\\n        string.replace(rePropName, function(match, number, quote, subString) {\\r\\n            result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\\r\\n        });\\r\\n        return result;\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Converts `value` to a string key if it's not a string or symbol.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {*} value The value to inspect.\\r\\n     * @returns {string|symbol} Returns the key.\\r\\n     */\\r\\n    function toKey(value) {\\r\\n        if (typeof value == 'string' || isSymbol(value)) {\\r\\n            return value;\\r\\n        }\\r\\n        var result = (value + '');\\r\\n        return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `func` to its source code.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Function} func The function to convert.\\r\\n     * @returns {string} Returns the source code.\\r\\n     */\\r\\n    function toSource(func) {\\r\\n        if (func != null) {\\r\\n            try {\\r\\n                return funcToString.call(func);\\r\\n            } catch (e) {}\\r\\n            try {\\r\\n                return (func + '');\\r\\n            } catch (e) {}\\r\\n        }\\r\\n        return '';\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates wrapper `details` based on `bitmask` flags.\\r\\n     *\\r\\n     * @private\\r\\n     * @returns {Array} details The details to modify.\\r\\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\r\\n     * @returns {Array} Returns `details`.\\r\\n     */\\r\\n    function updateWrapDetails(details, bitmask) {\\r\\n        arrayEach(wrapFlags, function(pair) {\\r\\n            var value = '_.' + pair[0];\\r\\n            if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\\r\\n                details.push(value);\\r\\n            }\\r\\n        });\\r\\n        return details.sort();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a clone of `wrapper`.\\r\\n     *\\r\\n     * @private\\r\\n     * @param {Object} wrapper The wrapper to clone.\\r\\n     * @returns {Object} Returns the cloned wrapper.\\r\\n     */\\r\\n    function wrapperClone(wrapper) {\\r\\n        if (wrapper instanceof LazyWrapper) {\\r\\n            return wrapper.clone();\\r\\n        }\\r\\n        var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\\r\\n        result.__actions__ = copyArray(wrapper.__actions__);\\r\\n        result.__index__  = wrapper.__index__;\\r\\n        result.__values__ = wrapper.__values__;\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates an array of elements split into groups the length of `size`.\\r\\n     * If `array` can't be split evenly, the final chunk will be the remaining\\r\\n     * elements.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to process.\\r\\n     * @param {number} [size=1] The length of each chunk\\r\\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\r\\n     * @returns {Array} Returns the new array of chunks.\\r\\n     * @example\\r\\n     *\\r\\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\\r\\n     * // => [['a', 'b'], ['c', 'd']]\\r\\n     *\\r\\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\\r\\n     * // => [['a', 'b', 'c'], ['d']]\\r\\n     */\\r\\n    function chunk(array, size, guard) {\\r\\n        if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\\r\\n            size = 1;\\r\\n        } else {\\r\\n            size = nativeMax(toInteger(size), 0);\\r\\n        }\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        if (!length || size < 1) {\\r\\n            return [];\\r\\n        }\\r\\n        var index = 0,\\r\\n            resIndex = 0,\\r\\n            result = Array(nativeCeil(length / size));\\r\\n\\r\\n        while (index < length) {\\r\\n            result[resIndex++] = baseSlice(array, index, (index += size));\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array with all falsey values removed. The values `false`, `null`,\\r\\n     * `0`, `\\\"\\\"`, `undefined`, and `NaN` are falsey.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to compact.\\r\\n     * @returns {Array} Returns the new array of filtered values.\\r\\n     * @example\\r\\n     *\\r\\n     * _.compact([0, 1, false, 2, '', 3]);\\r\\n     * // => [1, 2, 3]\\r\\n     */\\r\\n    function compact(array) {\\r\\n        var index = -1,\\r\\n            length = array == null ? 0 : array.length,\\r\\n            resIndex = 0,\\r\\n            result = [];\\r\\n\\r\\n        while (++index < length) {\\r\\n            var value = array[index];\\r\\n            if (value) {\\r\\n                result[resIndex++] = value;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a new array concatenating `array` with any additional arrays\\r\\n     * and/or values.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to concatenate.\\r\\n     * @param {...*} [values] The values to concatenate.\\r\\n     * @returns {Array} Returns the new concatenated array.\\r\\n     * @example\\r\\n     *\\r\\n     * var array = [1];\\r\\n     * var other = _.concat(array, 2, [3], [[4]]);\\r\\n     *\\r\\n     * console.log(other);\\r\\n     * // => [1, 2, 3, [4]]\\r\\n     *\\r\\n     * console.log(array);\\r\\n     * // => [1]\\r\\n     */\\r\\n    function concat() {\\r\\n        var length = arguments.length;\\r\\n        if (!length) {\\r\\n            return [];\\r\\n        }\\r\\n        var args = Array(length - 1),\\r\\n            array = arguments[0],\\r\\n            index = length;\\r\\n\\r\\n        while (index--) {\\r\\n            args[index - 1] = arguments[index];\\r\\n        }\\r\\n        return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array of `array` values not included in the other given arrays\\r\\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\r\\n     * for equality comparisons. The order and references of result values are\\r\\n     * determined by the first array.\\r\\n     *\\r\\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {...Array} [values] The values to exclude.\\r\\n     * @returns {Array} Returns the new array of filtered values.\\r\\n     * @see _.without, _.xor\\r\\n     * @example\\r\\n     *\\r\\n     * _.difference([2, 1], [2, 3]);\\r\\n     * // => [1]\\r\\n     */\\r\\n    var difference = baseRest(function(array, values) {\\r\\n        return isArrayLikeObject(array)\\r\\n            ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\\r\\n            : [];\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.5.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to query.\\r\\n     * @param {number} [n=1] The number of elements to drop.\\r\\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\r\\n     * @returns {Array} Returns the slice of `array`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.drop([1, 2, 3]);\\r\\n     * // => [2, 3]\\r\\n     *\\r\\n     * _.drop([1, 2, 3], 2);\\r\\n     * // => [3]\\r\\n     *\\r\\n     * _.drop([1, 2, 3], 5);\\r\\n     * // => []\\r\\n     *\\r\\n     * _.drop([1, 2, 3], 0);\\r\\n     * // => [1, 2, 3]\\r\\n     */\\r\\n    function drop(array, n, guard) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        if (!length) {\\r\\n            return [];\\r\\n        }\\r\\n        n = (guard || n === undefined) ? 1 : toInteger(n);\\r\\n        return baseSlice(array, n < 0 ? 0 : n, length);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.find` except that it returns the index of the first\\r\\n     * element `predicate` returns truthy for instead of the element itself.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 1.1.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\\r\\n     * @param {number} [fromIndex=0] The index to search from.\\r\\n     * @returns {number} Returns the index of the found element, else `-1`.\\r\\n     * @example\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney',  'active': false },\\r\\n     *   { 'user': 'fred',    'active': false },\\r\\n     *   { 'user': 'pebbles', 'active': true }\\r\\n     * ];\\r\\n     *\\r\\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\\r\\n     * // => 0\\r\\n     *\\r\\n     * // The `_.matches` iteratee shorthand.\\r\\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\\r\\n     * // => 1\\r\\n     *\\r\\n     * // The `_.matchesProperty` iteratee shorthand.\\r\\n     * _.findIndex(users, ['active', false]);\\r\\n     * // => 0\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.findIndex(users, 'active');\\r\\n     * // => 2\\r\\n     */\\r\\n    function findIndex(array, predicate, fromIndex) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        if (!length) {\\r\\n            return -1;\\r\\n        }\\r\\n        var index = fromIndex == null ? 0 : toInteger(fromIndex);\\r\\n        if (index < 0) {\\r\\n            index = nativeMax(length + index, 0);\\r\\n        }\\r\\n        return baseFindIndex(array, baseIteratee(predicate, 3), index);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.findIndex` except that it iterates over elements\\r\\n     * of `collection` from right to left.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 2.0.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\\r\\n     * @param {number} [fromIndex=array.length-1] The index to search from.\\r\\n     * @returns {number} Returns the index of the found element, else `-1`.\\r\\n     * @example\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney',  'active': true },\\r\\n     *   { 'user': 'fred',    'active': false },\\r\\n     *   { 'user': 'pebbles', 'active': false }\\r\\n     * ];\\r\\n     *\\r\\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\\r\\n     * // => 2\\r\\n     *\\r\\n     * // The `_.matches` iteratee shorthand.\\r\\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\\r\\n     * // => 0\\r\\n     *\\r\\n     * // The `_.matchesProperty` iteratee shorthand.\\r\\n     * _.findLastIndex(users, ['active', false]);\\r\\n     * // => 2\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.findLastIndex(users, 'active');\\r\\n     * // => 0\\r\\n     */\\r\\n    function findLastIndex(array, predicate, fromIndex) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        if (!length) {\\r\\n            return -1;\\r\\n        }\\r\\n        var index = length - 1;\\r\\n        if (fromIndex !== undefined) {\\r\\n            index = toInteger(fromIndex);\\r\\n            index = fromIndex < 0\\r\\n                ? nativeMax(length + index, 0)\\r\\n                : nativeMin(index, length - 1);\\r\\n        }\\r\\n        return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Flattens `array` a single level deep.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to flatten.\\r\\n     * @returns {Array} Returns the new flattened array.\\r\\n     * @example\\r\\n     *\\r\\n     * _.flatten([1, [2, [3, [4]], 5]]);\\r\\n     * // => [1, 2, [3, [4]], 5]\\r\\n     */\\r\\n    function flatten(array) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        return length ? baseFlatten(array, 1) : [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Recursively flattens `array`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to flatten.\\r\\n     * @returns {Array} Returns the new flattened array.\\r\\n     * @example\\r\\n     *\\r\\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\\r\\n     * // => [1, 2, 3, 4, 5]\\r\\n     */\\r\\n    function flattenDeep(array) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        return length ? baseFlatten(array, INFINITY) : [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the first element of `array`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @alias first\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to query.\\r\\n     * @returns {*} Returns the first element of `array`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.head([1, 2, 3]);\\r\\n     * // => 1\\r\\n     *\\r\\n     * _.head([]);\\r\\n     * // => undefined\\r\\n     */\\r\\n    function head(array) {\\r\\n        return (array && array.length) ? array[0] : undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the index at which the first occurrence of `value` is found in `array`\\r\\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\r\\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\\r\\n     * offset from the end of `array`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {*} value The value to search for.\\r\\n     * @param {number} [fromIndex=0] The index to search from.\\r\\n     * @returns {number} Returns the index of the matched value, else `-1`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.indexOf([1, 2, 1, 2], 2);\\r\\n     * // => 1\\r\\n     *\\r\\n     * // Search from the `fromIndex`.\\r\\n     * _.indexOf([1, 2, 1, 2], 2, 2);\\r\\n     * // => 3\\r\\n     */\\r\\n    function indexOf(array, value, fromIndex) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        if (!length) {\\r\\n            return -1;\\r\\n        }\\r\\n        var index = fromIndex == null ? 0 : toInteger(fromIndex);\\r\\n        if (index < 0) {\\r\\n            index = nativeMax(length + index, 0);\\r\\n        }\\r\\n        return baseIndexOf(array, value, index);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets all but the last element of `array`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to query.\\r\\n     * @returns {Array} Returns the slice of `array`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.initial([1, 2, 3]);\\r\\n     * // => [1, 2]\\r\\n     */\\r\\n    function initial(array) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        return length ? baseSlice(array, 0, -1) : [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array of unique values that are included in all given arrays\\r\\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\r\\n     * for equality comparisons. The order and references of result values are\\r\\n     * determined by the first array.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {...Array} [arrays] The arrays to inspect.\\r\\n     * @returns {Array} Returns the new array of intersecting values.\\r\\n     * @example\\r\\n     *\\r\\n     * _.intersection([2, 1], [2, 3]);\\r\\n     * // => [2]\\r\\n     */\\r\\n    var intersection = baseRest(function(arrays) {\\r\\n        var mapped = arrayMap(arrays, castArrayLikeObject);\\r\\n        return (mapped.length && mapped[0] === arrays[0])\\r\\n            ? baseIntersection(mapped)\\r\\n            : [];\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Gets the last element of `array`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to query.\\r\\n     * @returns {*} Returns the last element of `array`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.last([1, 2, 3]);\\r\\n     * // => 3\\r\\n     */\\r\\n    function last(array) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        return length ? array[length - 1] : undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reverses `array` so that the first element becomes the last, the second\\r\\n     * element becomes the second to last, and so on.\\r\\n     *\\r\\n     * **Note:** This method mutates `array` and is based on\\r\\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to modify.\\r\\n     * @returns {Array} Returns `array`.\\r\\n     * @example\\r\\n     *\\r\\n     * var array = [1, 2, 3];\\r\\n     *\\r\\n     * _.reverse(array);\\r\\n     * // => [3, 2, 1]\\r\\n     *\\r\\n     * console.log(array);\\r\\n     * // => [3, 2, 1]\\r\\n     */\\r\\n    function reverse(array) {\\r\\n        return array == null ? array : nativeReverse.call(array);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\\r\\n     *\\r\\n     * **Note:** This method is used instead of\\r\\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\\r\\n     * returned.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to slice.\\r\\n     * @param {number} [start=0] The start position.\\r\\n     * @param {number} [end=array.length] The end position.\\r\\n     * @returns {Array} Returns the slice of `array`.\\r\\n     */\\r\\n    function slice(array, start, end) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        if (!length) {\\r\\n            return [];\\r\\n        }\\r\\n        if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\\r\\n            start = 0;\\r\\n            end = length;\\r\\n        }\\r\\n        else {\\r\\n            start = start == null ? 0 : toInteger(start);\\r\\n            end = end === undefined ? length : toInteger(end);\\r\\n        }\\r\\n        return baseSlice(array, start, end);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a slice of `array` with `n` elements taken from the beginning.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to query.\\r\\n     * @param {number} [n=1] The number of elements to take.\\r\\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\r\\n     * @returns {Array} Returns the slice of `array`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.take([1, 2, 3]);\\r\\n     * // => [1]\\r\\n     *\\r\\n     * _.take([1, 2, 3], 2);\\r\\n     * // => [1, 2]\\r\\n     *\\r\\n     * _.take([1, 2, 3], 5);\\r\\n     * // => [1, 2, 3]\\r\\n     *\\r\\n     * _.take([1, 2, 3], 0);\\r\\n     * // => []\\r\\n     */\\r\\n    function take(array, n, guard) {\\r\\n        if (!(array && array.length)) {\\r\\n            return [];\\r\\n        }\\r\\n        n = (guard || n === undefined) ? 1 : toInteger(n);\\r\\n        return baseSlice(array, 0, n < 0 ? 0 : n);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a slice of `array` with `n` elements taken from the end.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to query.\\r\\n     * @param {number} [n=1] The number of elements to take.\\r\\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\r\\n     * @returns {Array} Returns the slice of `array`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.takeRight([1, 2, 3]);\\r\\n     * // => [3]\\r\\n     *\\r\\n     * _.takeRight([1, 2, 3], 2);\\r\\n     * // => [2, 3]\\r\\n     *\\r\\n     * _.takeRight([1, 2, 3], 5);\\r\\n     * // => [1, 2, 3]\\r\\n     *\\r\\n     * _.takeRight([1, 2, 3], 0);\\r\\n     * // => []\\r\\n     */\\r\\n    function takeRight(array, n, guard) {\\r\\n        var length = array == null ? 0 : array.length;\\r\\n        if (!length) {\\r\\n            return [];\\r\\n        }\\r\\n        n = (guard || n === undefined) ? 1 : toInteger(n);\\r\\n        n = length - n;\\r\\n        return baseSlice(array, n < 0 ? 0 : n, length);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array of unique values, in order, from all given arrays using\\r\\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\r\\n     * for equality comparisons.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {...Array} [arrays] The arrays to inspect.\\r\\n     * @returns {Array} Returns the new array of combined values.\\r\\n     * @example\\r\\n     *\\r\\n     * _.union([2], [1, 2]);\\r\\n     * // => [2, 1]\\r\\n     */\\r\\n    var union = baseRest(function(arrays) {\\r\\n        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Creates a duplicate-free version of an array, using\\r\\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\r\\n     * for equality comparisons, in which only the first occurrence of each element\\r\\n     * is kept. The order of result values is determined by the order they occur\\r\\n     * in the array.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @returns {Array} Returns the new duplicate free array.\\r\\n     * @example\\r\\n     *\\r\\n     * _.uniq([2, 1, 2]);\\r\\n     * // => [2, 1]\\r\\n     */\\r\\n    function uniq(array) {\\r\\n        return (array && array.length) ? baseUniq(array) : [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\\r\\n     * invoked for each element in `array` to generate the criterion by which\\r\\n     * uniqueness is computed. The order of result values is determined by the\\r\\n     * order they occur in the array. The iteratee is invoked with one argument:\\r\\n     * (value).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\\r\\n     * @returns {Array} Returns the new duplicate free array.\\r\\n     * @example\\r\\n     *\\r\\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\\r\\n     * // => [2.1, 1.2]\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\\r\\n     * // => [{ 'x': 1 }, { 'x': 2 }]\\r\\n     */\\r\\n    function uniqBy(array, iteratee) {\\r\\n        return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.zip` except that it accepts an array of grouped\\r\\n     * elements and creates an array regrouping the elements to their pre-zip\\r\\n     * configuration.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 1.2.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array of grouped elements to process.\\r\\n     * @returns {Array} Returns the new array of regrouped elements.\\r\\n     * @example\\r\\n     *\\r\\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\\r\\n     * // => [['a', 1, true], ['b', 2, false]]\\r\\n     *\\r\\n     * _.unzip(zipped);\\r\\n     * // => [['a', 'b'], [1, 2], [true, false]]\\r\\n     */\\r\\n    function unzip(array) {\\r\\n        if (!(array && array.length)) {\\r\\n            return [];\\r\\n        }\\r\\n        var length = 0;\\r\\n        array = arrayFilter(array, function(group) {\\r\\n            if (isArrayLikeObject(group)) {\\r\\n                length = nativeMax(group.length, length);\\r\\n                return true;\\r\\n            }\\r\\n        });\\r\\n        return baseTimes(length, function(index) {\\r\\n            return arrayMap(array, baseProperty(index));\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array excluding all given values using\\r\\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\r\\n     * for equality comparisons.\\r\\n     *\\r\\n     * **Note:** Unlike `_.pull`, this method returns a new array.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {Array} array The array to inspect.\\r\\n     * @param {...*} [values] The values to exclude.\\r\\n     * @returns {Array} Returns the new array of filtered values.\\r\\n     * @see _.difference, _.xor\\r\\n     * @example\\r\\n     *\\r\\n     * _.without([2, 1, 2, 3], 1, 2);\\r\\n     * // => [3]\\r\\n     */\\r\\n    var without = baseRest(function(array, values) {\\r\\n        return isArrayLikeObject(array)\\r\\n            ? baseDifference(array, values)\\r\\n            : [];\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Creates an array of grouped elements, the first of which contains the\\r\\n     * first elements of the given arrays, the second of which contains the\\r\\n     * second elements of the given arrays, and so on.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Array\\r\\n     * @param {...Array} [arrays] The arrays to process.\\r\\n     * @returns {Array} Returns the new array of grouped elements.\\r\\n     * @example\\r\\n     *\\r\\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\\r\\n     * // => [['a', 1, true], ['b', 2, false]]\\r\\n     */\\r\\n    var zip = baseRest(unzip);\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.fromPairs` except that it accepts two arrays,\\r\\n     * one of property identifiers and one of corresponding values.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.4.0\\r\\n     * @category Array\\r\\n     * @param {Array} [props=[]] The property identifiers.\\r\\n     * @param {Array} [values=[]] The property values.\\r\\n     * @returns {Object} Returns the new object.\\r\\n     * @example\\r\\n     *\\r\\n     * _.zipObject(['a', 'b'], [1, 2]);\\r\\n     * // => { 'a': 1, 'b': 2 }\\r\\n     */\\r\\n    function zipObject(props, values) {\\r\\n        return baseZipObject(props || [], values || [], assignValue);\\r\\n    }\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\\r\\n     * chain sequences enabled. The result of such sequences must be unwrapped\\r\\n     * with `_#value`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 1.3.0\\r\\n     * @category Seq\\r\\n     * @param {*} value The value to wrap.\\r\\n     * @returns {Object} Returns the new `lodash` wrapper instance.\\r\\n     * @example\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney',  'age': 36 },\\r\\n     *   { 'user': 'fred',    'age': 40 },\\r\\n     *   { 'user': 'pebbles', 'age': 1 }\\r\\n     * ];\\r\\n     *\\r\\n     * var youngest = _\\r\\n     *   .chain(users)\\r\\n     *   .sortBy('age')\\r\\n     *   .map(function(o) {\\r\\n     *     return o.user + ' is ' + o.age;\\r\\n     *   })\\r\\n     *   .head()\\r\\n     *   .value();\\r\\n     * // => 'pebbles is 1'\\r\\n     */\\r\\n    function chain(value) {\\r\\n        var result = lodash(value);\\r\\n        result.__chain__ = true;\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method invokes `interceptor` and returns `value`. The interceptor\\r\\n     * is invoked with one argument; (value). The purpose of this method is to\\r\\n     * \\\"tap into\\\" a method chain sequence in order to modify intermediate results.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Seq\\r\\n     * @param {*} value The value to provide to `interceptor`.\\r\\n     * @param {Function} interceptor The function to invoke.\\r\\n     * @returns {*} Returns `value`.\\r\\n     * @example\\r\\n     *\\r\\n     * _([1, 2, 3])\\r\\n     *  .tap(function(array) {\\r\\n     *    // Mutate input array.\\r\\n     *    array.pop();\\r\\n     *  })\\r\\n     *  .reverse()\\r\\n     *  .value();\\r\\n     * // => [2, 1]\\r\\n     */\\r\\n    function tap(value, interceptor) {\\r\\n        interceptor(value);\\r\\n        return value;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\\r\\n     * The purpose of this method is to \\\"pass thru\\\" values replacing intermediate\\r\\n     * results in a method chain sequence.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Seq\\r\\n     * @param {*} value The value to provide to `interceptor`.\\r\\n     * @param {Function} interceptor The function to invoke.\\r\\n     * @returns {*} Returns the result of `interceptor`.\\r\\n     * @example\\r\\n     *\\r\\n     * _('  abc  ')\\r\\n     *  .chain()\\r\\n     *  .trim()\\r\\n     *  .thru(function(value) {\\r\\n     *    return [value];\\r\\n     *  })\\r\\n     *  .value();\\r\\n     * // => ['abc']\\r\\n     */\\r\\n    function thru(value, interceptor) {\\r\\n        return interceptor(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is the wrapper version of `_.at`.\\r\\n     *\\r\\n     * @name at\\r\\n     * @memberOf _\\r\\n     * @since 1.0.0\\r\\n     * @category Seq\\r\\n     * @param {...(string|string[])} [paths] The property paths to pick.\\r\\n     * @returns {Object} Returns the new `lodash` wrapper instance.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\\r\\n     *\\r\\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\\r\\n     * // => [3, 4]\\r\\n     */\\r\\n    var wrapperAt = flatRest(function(paths) {\\r\\n        var length = paths.length,\\r\\n            start = length ? paths[0] : 0,\\r\\n            value = this.__wrapped__,\\r\\n            interceptor = function(object) { return baseAt(object, paths); };\\r\\n\\r\\n        if (length > 1 || this.__actions__.length ||\\r\\n            !(value instanceof LazyWrapper) || !isIndex(start)) {\\r\\n            return this.thru(interceptor);\\r\\n        }\\r\\n        value = value.slice(start, +start + (length ? 1 : 0));\\r\\n        value.__actions__.push({\\r\\n            'func': thru,\\r\\n            'args': [interceptor],\\r\\n            'thisArg': undefined\\r\\n        });\\r\\n        return new LodashWrapper(value, this.__chain__).thru(function(array) {\\r\\n            if (length && !array.length) {\\r\\n                array.push(undefined);\\r\\n            }\\r\\n            return array;\\r\\n        });\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\\r\\n     *\\r\\n     * @name chain\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Seq\\r\\n     * @returns {Object} Returns the new `lodash` wrapper instance.\\r\\n     * @example\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney', 'age': 36 },\\r\\n     *   { 'user': 'fred',   'age': 40 }\\r\\n     * ];\\r\\n     *\\r\\n     * // A sequence without explicit chaining.\\r\\n     * _(users).head();\\r\\n     * // => { 'user': 'barney', 'age': 36 }\\r\\n     *\\r\\n     * // A sequence with explicit chaining.\\r\\n     * _(users)\\r\\n     *   .chain()\\r\\n     *   .head()\\r\\n     *   .pick('user')\\r\\n     *   .value();\\r\\n     * // => { 'user': 'barney' }\\r\\n     */\\r\\n    function wrapperChain() {\\r\\n        return chain(this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Executes the chain sequence and returns the wrapped result.\\r\\n     *\\r\\n     * @name commit\\r\\n     * @memberOf _\\r\\n     * @since 3.2.0\\r\\n     * @category Seq\\r\\n     * @returns {Object} Returns the new `lodash` wrapper instance.\\r\\n     * @example\\r\\n     *\\r\\n     * var array = [1, 2];\\r\\n     * var wrapped = _(array).push(3);\\r\\n     *\\r\\n     * console.log(array);\\r\\n     * // => [1, 2]\\r\\n     *\\r\\n     * wrapped = wrapped.commit();\\r\\n     * console.log(array);\\r\\n     * // => [1, 2, 3]\\r\\n     *\\r\\n     * wrapped.last();\\r\\n     * // => 3\\r\\n     *\\r\\n     * console.log(array);\\r\\n     * // => [1, 2, 3]\\r\\n     */\\r\\n    function wrapperCommit() {\\r\\n        return new LodashWrapper(this.value(), this.__chain__);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the next value on a wrapped object following the\\r\\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\\r\\n     *\\r\\n     * @name next\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Seq\\r\\n     * @returns {Object} Returns the next iterator value.\\r\\n     * @example\\r\\n     *\\r\\n     * var wrapped = _([1, 2]);\\r\\n     *\\r\\n     * wrapped.next();\\r\\n     * // => { 'done': false, 'value': 1 }\\r\\n     *\\r\\n     * wrapped.next();\\r\\n     * // => { 'done': false, 'value': 2 }\\r\\n     *\\r\\n     * wrapped.next();\\r\\n     * // => { 'done': true, 'value': undefined }\\r\\n     */\\r\\n    function wrapperNext() {\\r\\n        if (this.__values__ === undefined) {\\r\\n            this.__values__ = toArray(this.value());\\r\\n        }\\r\\n        var done = this.__index__ >= this.__values__.length,\\r\\n            value = done ? undefined : this.__values__[this.__index__++];\\r\\n\\r\\n        return { 'done': done, 'value': value };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Enables the wrapper to be iterable.\\r\\n     *\\r\\n     * @name Symbol.iterator\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Seq\\r\\n     * @returns {Object} Returns the wrapper object.\\r\\n     * @example\\r\\n     *\\r\\n     * var wrapped = _([1, 2]);\\r\\n     *\\r\\n     * wrapped[Symbol.iterator]() === wrapped;\\r\\n     * // => true\\r\\n     *\\r\\n     * Array.from(wrapped);\\r\\n     * // => [1, 2]\\r\\n     */\\r\\n    function wrapperToIterator() {\\r\\n        return this;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\\r\\n     *\\r\\n     * @name plant\\r\\n     * @memberOf _\\r\\n     * @since 3.2.0\\r\\n     * @category Seq\\r\\n     * @param {*} value The value to plant.\\r\\n     * @returns {Object} Returns the new `lodash` wrapper instance.\\r\\n     * @example\\r\\n     *\\r\\n     * function square(n) {\\r\\n     *   return n * n;\\r\\n     * }\\r\\n     *\\r\\n     * var wrapped = _([1, 2]).map(square);\\r\\n     * var other = wrapped.plant([3, 4]);\\r\\n     *\\r\\n     * other.value();\\r\\n     * // => [9, 16]\\r\\n     *\\r\\n     * wrapped.value();\\r\\n     * // => [1, 4]\\r\\n     */\\r\\n    function wrapperPlant(value) {\\r\\n        var result,\\r\\n            parent = this;\\r\\n\\r\\n        while (parent instanceof baseLodash) {\\r\\n            var clone = wrapperClone(parent);\\r\\n            clone.__index__ = 0;\\r\\n            clone.__values__ = undefined;\\r\\n            if (result) {\\r\\n                previous.__wrapped__ = clone;\\r\\n            } else {\\r\\n                result = clone;\\r\\n            }\\r\\n            var previous = clone;\\r\\n            parent = parent.__wrapped__;\\r\\n        }\\r\\n        previous.__wrapped__ = value;\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is the wrapper version of `_.reverse`.\\r\\n     *\\r\\n     * **Note:** This method mutates the wrapped array.\\r\\n     *\\r\\n     * @name reverse\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Seq\\r\\n     * @returns {Object} Returns the new `lodash` wrapper instance.\\r\\n     * @example\\r\\n     *\\r\\n     * var array = [1, 2, 3];\\r\\n     *\\r\\n     * _(array).reverse().value()\\r\\n     * // => [3, 2, 1]\\r\\n     *\\r\\n     * console.log(array);\\r\\n     * // => [3, 2, 1]\\r\\n     */\\r\\n    function wrapperReverse() {\\r\\n        var value = this.__wrapped__;\\r\\n        if (value instanceof LazyWrapper) {\\r\\n            var wrapped = value;\\r\\n            if (this.__actions__.length) {\\r\\n                wrapped = new LazyWrapper(this);\\r\\n            }\\r\\n            wrapped = wrapped.reverse();\\r\\n            wrapped.__actions__.push({\\r\\n                'func': thru,\\r\\n                'args': [reverse],\\r\\n                'thisArg': undefined\\r\\n            });\\r\\n            return new LodashWrapper(wrapped, this.__chain__);\\r\\n        }\\r\\n        return this.thru(reverse);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Executes the chain sequence to resolve the unwrapped value.\\r\\n     *\\r\\n     * @name value\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @alias toJSON, valueOf\\r\\n     * @category Seq\\r\\n     * @returns {*} Returns the resolved unwrapped value.\\r\\n     * @example\\r\\n     *\\r\\n     * _([1, 2, 3]).value();\\r\\n     * // => [1, 2, 3]\\r\\n     */\\r\\n    function wrapperValue() {\\r\\n        return baseWrapperValue(this.__wrapped__, this.__actions__);\\r\\n    }\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates an object composed of keys generated from the results of running\\r\\n     * each element of `collection` thru `iteratee`. The corresponding value of\\r\\n     * each key is the number of times the key was returned by `iteratee`. The\\r\\n     * iteratee is invoked with one argument: (value).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.5.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\\r\\n     * @returns {Object} Returns the composed aggregate object.\\r\\n     * @example\\r\\n     *\\r\\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\\r\\n     * // => { '4': 1, '6': 2 }\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.countBy(['one', 'two', 'three'], 'length');\\r\\n     * // => { '3': 2, '5': 1 }\\r\\n     */\\r\\n    var countBy = createAggregator(function(result, value, key) {\\r\\n        if (hasOwnProperty.call(result, key)) {\\r\\n            ++result[key];\\r\\n        } else {\\r\\n            baseAssignValue(result, key, 1);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\\r\\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\\r\\n     * invoked with three arguments: (value, index|key, collection).\\r\\n     *\\r\\n     * **Note:** This method returns `true` for\\r\\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\\r\\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\\r\\n     * elements of empty collections.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\\r\\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\r\\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\\r\\n     *  else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.every([true, 1, null, 'yes'], Boolean);\\r\\n     * // => false\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney', 'age': 36, 'active': false },\\r\\n     *   { 'user': 'fred',   'age': 40, 'active': false }\\r\\n     * ];\\r\\n     *\\r\\n     * // The `_.matches` iteratee shorthand.\\r\\n     * _.every(users, { 'user': 'barney', 'active': false });\\r\\n     * // => false\\r\\n     *\\r\\n     * // The `_.matchesProperty` iteratee shorthand.\\r\\n     * _.every(users, ['active', false]);\\r\\n     * // => true\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.every(users, 'active');\\r\\n     * // => false\\r\\n     */\\r\\n    function every(collection, predicate, guard) {\\r\\n        var func = isArray(collection) ? arrayEvery : baseEvery;\\r\\n        if (guard && isIterateeCall(collection, predicate, guard)) {\\r\\n            predicate = undefined;\\r\\n        }\\r\\n        return func(collection, baseIteratee(predicate, 3));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Iterates over elements of `collection`, returning an array of all elements\\r\\n     * `predicate` returns truthy for. The predicate is invoked with three\\r\\n     * arguments: (value, index|key, collection).\\r\\n     *\\r\\n     * **Note:** Unlike `_.remove`, this method returns a new array.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\\r\\n     * @returns {Array} Returns the new filtered array.\\r\\n     * @see _.reject\\r\\n     * @example\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney', 'age': 36, 'active': true },\\r\\n     *   { 'user': 'fred',   'age': 40, 'active': false }\\r\\n     * ];\\r\\n     *\\r\\n     * _.filter(users, function(o) { return !o.active; });\\r\\n     * // => objects for ['fred']\\r\\n     *\\r\\n     * // The `_.matches` iteratee shorthand.\\r\\n     * _.filter(users, { 'age': 36, 'active': true });\\r\\n     * // => objects for ['barney']\\r\\n     *\\r\\n     * // The `_.matchesProperty` iteratee shorthand.\\r\\n     * _.filter(users, ['active', false]);\\r\\n     * // => objects for ['fred']\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.filter(users, 'active');\\r\\n     * // => objects for ['barney']\\r\\n     */\\r\\n    function filter(collection, predicate) {\\r\\n        var func = isArray(collection) ? arrayFilter : baseFilter;\\r\\n        return func(collection, baseIteratee(predicate, 3));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Iterates over elements of `collection`, returning the first element\\r\\n     * `predicate` returns truthy for. The predicate is invoked with three\\r\\n     * arguments: (value, index|key, collection).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to inspect.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\\r\\n     * @param {number} [fromIndex=0] The index to search from.\\r\\n     * @returns {*} Returns the matched element, else `undefined`.\\r\\n     * @example\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney',  'age': 36, 'active': true },\\r\\n     *   { 'user': 'fred',    'age': 40, 'active': false },\\r\\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\\r\\n     * ];\\r\\n     *\\r\\n     * _.find(users, function(o) { return o.age < 40; });\\r\\n     * // => object for 'barney'\\r\\n     *\\r\\n     * // The `_.matches` iteratee shorthand.\\r\\n     * _.find(users, { 'age': 1, 'active': true });\\r\\n     * // => object for 'pebbles'\\r\\n     *\\r\\n     * // The `_.matchesProperty` iteratee shorthand.\\r\\n     * _.find(users, ['active', false]);\\r\\n     * // => object for 'fred'\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.find(users, 'active');\\r\\n     * // => object for 'barney'\\r\\n     */\\r\\n    var find = createFind(findIndex);\\r\\n\\r\\n    /**\\r\\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\\r\\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\\r\\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\\r\\n     *\\r\\n     * **Note:** As with other \\\"Collections\\\" methods, objects with a \\\"length\\\"\\r\\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\\r\\n     * or `_.forOwn` for object iteration.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @alias each\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\\r\\n     * @returns {Array|Object} Returns `collection`.\\r\\n     * @see _.forEachRight\\r\\n     * @example\\r\\n     *\\r\\n     * _.forEach([1, 2], function(value) {\\r\\n     *   console.log(value);\\r\\n     * });\\r\\n     * // => Logs `1` then `2`.\\r\\n     *\\r\\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\\r\\n     *   console.log(key);\\r\\n     * });\\r\\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\\r\\n     */\\r\\n    function forEach(collection, iteratee) {\\r\\n        var func = isArray(collection) ? arrayEach : baseEach;\\r\\n        return func(collection, baseIteratee(iteratee, 3));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an object composed of keys generated from the results of running\\r\\n     * each element of `collection` thru `iteratee`. The order of grouped values\\r\\n     * is determined by the order they occur in `collection`. The corresponding\\r\\n     * value of each key is an array of elements responsible for generating the\\r\\n     * key. The iteratee is invoked with one argument: (value).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\\r\\n     * @returns {Object} Returns the composed aggregate object.\\r\\n     * @example\\r\\n     *\\r\\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\\r\\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.groupBy(['one', 'two', 'three'], 'length');\\r\\n     * // => { '3': ['one', 'two'], '5': ['three'] }\\r\\n     */\\r\\n    var groupBy = createAggregator(function(result, value, key) {\\r\\n        if (hasOwnProperty.call(result, key)) {\\r\\n            result[key].push(value);\\r\\n        } else {\\r\\n            baseAssignValue(result, key, [value]);\\r\\n        }\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Creates an array of values by running each element in `collection` thru\\r\\n     * `iteratee`. The iteratee is invoked with three arguments:\\r\\n     * (value, index|key, collection).\\r\\n     *\\r\\n     * Many lodash methods are guarded to work as iteratees for methods like\\r\\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\\r\\n     *\\r\\n     * The guarded methods are:\\r\\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\\r\\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\\r\\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\\r\\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\\r\\n     * @returns {Array} Returns the new mapped array.\\r\\n     * @example\\r\\n     *\\r\\n     * function square(n) {\\r\\n     *   return n * n;\\r\\n     * }\\r\\n     *\\r\\n     * _.map([4, 8], square);\\r\\n     * // => [16, 64]\\r\\n     *\\r\\n     * _.map({ 'a': 4, 'b': 8 }, square);\\r\\n     * // => [16, 64] (iteration order is not guaranteed)\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney' },\\r\\n     *   { 'user': 'fred' }\\r\\n     * ];\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.map(users, 'user');\\r\\n     * // => ['barney', 'fred']\\r\\n     */\\r\\n    function map(collection, iteratee) {\\r\\n        var func = isArray(collection) ? arrayMap : baseMap;\\r\\n        return func(collection, baseIteratee(iteratee, 3));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reduces `collection` to a value which is the accumulated result of running\\r\\n     * each element in `collection` thru `iteratee`, where each successive\\r\\n     * invocation is supplied the return value of the previous. If `accumulator`\\r\\n     * is not given, the first element of `collection` is used as the initial\\r\\n     * value. The iteratee is invoked with four arguments:\\r\\n     * (accumulator, value, index|key, collection).\\r\\n     *\\r\\n     * Many lodash methods are guarded to work as iteratees for methods like\\r\\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\\r\\n     *\\r\\n     * The guarded methods are:\\r\\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\\r\\n     * and `sortBy`\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\\r\\n     * @param {*} [accumulator] The initial value.\\r\\n     * @returns {*} Returns the accumulated value.\\r\\n     * @see _.reduceRight\\r\\n     * @example\\r\\n     *\\r\\n     * _.reduce([1, 2], function(sum, n) {\\r\\n     *   return sum + n;\\r\\n     * }, 0);\\r\\n     * // => 3\\r\\n     *\\r\\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\\r\\n     *   (result[value] || (result[value] = [])).push(key);\\r\\n     *   return result;\\r\\n     * }, {});\\r\\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\\r\\n     */\\r\\n    function reduce(collection, iteratee, accumulator) {\\r\\n        var func = isArray(collection) ? arrayReduce : baseReduce,\\r\\n            initAccum = arguments.length < 3;\\r\\n\\r\\n        return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The opposite of `_.filter`; this method returns the elements of `collection`\\r\\n     * that `predicate` does **not** return truthy for.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\\r\\n     * @returns {Array} Returns the new filtered array.\\r\\n     * @see _.filter\\r\\n     * @example\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney', 'age': 36, 'active': false },\\r\\n     *   { 'user': 'fred',   'age': 40, 'active': true }\\r\\n     * ];\\r\\n     *\\r\\n     * _.reject(users, function(o) { return !o.active; });\\r\\n     * // => objects for ['fred']\\r\\n     *\\r\\n     * // The `_.matches` iteratee shorthand.\\r\\n     * _.reject(users, { 'age': 40, 'active': true });\\r\\n     * // => objects for ['barney']\\r\\n     *\\r\\n     * // The `_.matchesProperty` iteratee shorthand.\\r\\n     * _.reject(users, ['active', false]);\\r\\n     * // => objects for ['fred']\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.reject(users, 'active');\\r\\n     * // => objects for ['barney']\\r\\n     */\\r\\n    function reject(collection, predicate) {\\r\\n        var func = isArray(collection) ? arrayFilter : baseFilter;\\r\\n        return func(collection, negate(baseIteratee(predicate, 3)));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the size of `collection` by returning its length for array-like\\r\\n     * values or the number of own enumerable string keyed properties for objects.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object|string} collection The collection to inspect.\\r\\n     * @returns {number} Returns the collection size.\\r\\n     * @example\\r\\n     *\\r\\n     * _.size([1, 2, 3]);\\r\\n     * // => 3\\r\\n     *\\r\\n     * _.size({ 'a': 1, 'b': 2 });\\r\\n     * // => 2\\r\\n     *\\r\\n     * _.size('pebbles');\\r\\n     * // => 7\\r\\n     */\\r\\n    function size(collection) {\\r\\n        if (collection == null) {\\r\\n            return 0;\\r\\n        }\\r\\n        if (isArrayLike(collection)) {\\r\\n            return isString(collection) ? stringSize(collection) : collection.length;\\r\\n        }\\r\\n        var tag = getTag(collection);\\r\\n        if (tag == mapTag || tag == setTag) {\\r\\n            return collection.size;\\r\\n        }\\r\\n        return baseKeys(collection).length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\\r\\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\\r\\n     * invoked with three arguments: (value, index|key, collection).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\\r\\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\r\\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\\r\\n     *  else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.some([null, 0, 'yes', false], Boolean);\\r\\n     * // => true\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney', 'active': true },\\r\\n     *   { 'user': 'fred',   'active': false }\\r\\n     * ];\\r\\n     *\\r\\n     * // The `_.matches` iteratee shorthand.\\r\\n     * _.some(users, { 'user': 'barney', 'active': false });\\r\\n     * // => false\\r\\n     *\\r\\n     * // The `_.matchesProperty` iteratee shorthand.\\r\\n     * _.some(users, ['active', false]);\\r\\n     * // => true\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.some(users, 'active');\\r\\n     * // => true\\r\\n     */\\r\\n    function some(collection, predicate, guard) {\\r\\n        var func = isArray(collection) ? arraySome : baseSome;\\r\\n        if (guard && isIterateeCall(collection, predicate, guard)) {\\r\\n            predicate = undefined;\\r\\n        }\\r\\n        return func(collection, baseIteratee(predicate, 3));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array of elements, sorted in ascending order by the results of\\r\\n     * running each element in a collection thru each iteratee. This method\\r\\n     * performs a stable sort, that is, it preserves the original sort order of\\r\\n     * equal elements. The iteratees are invoked with one argument: (value).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Collection\\r\\n     * @param {Array|Object} collection The collection to iterate over.\\r\\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\\r\\n     *  The iteratees to sort by.\\r\\n     * @returns {Array} Returns the new sorted array.\\r\\n     * @example\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'fred',   'age': 48 },\\r\\n     *   { 'user': 'barney', 'age': 36 },\\r\\n     *   { 'user': 'fred',   'age': 40 },\\r\\n     *   { 'user': 'barney', 'age': 34 }\\r\\n     * ];\\r\\n     *\\r\\n     * _.sortBy(users, [function(o) { return o.user; }]);\\r\\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\\r\\n     *\\r\\n     * _.sortBy(users, ['user', 'age']);\\r\\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\\r\\n     */\\r\\n    var sortBy = baseRest(function(collection, iteratees) {\\r\\n        if (collection == null) {\\r\\n            return [];\\r\\n        }\\r\\n        var length = iteratees.length;\\r\\n        if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\\r\\n            iteratees = [];\\r\\n        } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\\r\\n            iteratees = [iteratees[0]];\\r\\n        }\\r\\n        return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\\r\\n    });\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Gets the timestamp of the number of milliseconds that have elapsed since\\r\\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 2.4.0\\r\\n     * @category Date\\r\\n     * @returns {number} Returns the timestamp.\\r\\n     * @example\\r\\n     *\\r\\n     * _.defer(function(stamp) {\\r\\n     *   console.log(_.now() - stamp);\\r\\n     * }, _.now());\\r\\n     * // => Logs the number of milliseconds it took for the deferred invocation.\\r\\n     */\\r\\n    var now = function() {\\r\\n        return root.Date.now();\\r\\n    };\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * The opposite of `_.before`; this method creates a function that invokes\\r\\n     * `func` once it's called `n` or more times.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Function\\r\\n     * @param {number} n The number of calls before `func` is invoked.\\r\\n     * @param {Function} func The function to restrict.\\r\\n     * @returns {Function} Returns the new restricted function.\\r\\n     * @example\\r\\n     *\\r\\n     * var saves = ['profile', 'settings'];\\r\\n     *\\r\\n     * var done = _.after(saves.length, function() {\\r\\n     *   console.log('done saving!');\\r\\n     * });\\r\\n     *\\r\\n     * _.forEach(saves, function(type) {\\r\\n     *   asyncSave({ 'type': type, 'complete': done });\\r\\n     * });\\r\\n     * // => Logs 'done saving!' after the two async saves have completed.\\r\\n     */\\r\\n    function after(n, func) {\\r\\n        if (typeof func != 'function') {\\r\\n            throw new TypeError(FUNC_ERROR_TEXT);\\r\\n        }\\r\\n        n = toInteger(n);\\r\\n        return function() {\\r\\n            if (--n < 1) {\\r\\n                return func.apply(this, arguments);\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that invokes `func`, with the `this` binding and arguments\\r\\n     * of the created function, while it's called less than `n` times. Subsequent\\r\\n     * calls to the created function return the result of the last `func` invocation.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Function\\r\\n     * @param {number} n The number of calls at which `func` is no longer invoked.\\r\\n     * @param {Function} func The function to restrict.\\r\\n     * @returns {Function} Returns the new restricted function.\\r\\n     * @example\\r\\n     *\\r\\n     * jQuery(element).on('click', _.before(5, addContactToList));\\r\\n     * // => Allows adding up to 4 contacts to the list.\\r\\n     */\\r\\n    function before(n, func) {\\r\\n        var result;\\r\\n        if (typeof func != 'function') {\\r\\n            throw new TypeError(FUNC_ERROR_TEXT);\\r\\n        }\\r\\n        n = toInteger(n);\\r\\n        return function() {\\r\\n            if (--n > 0) {\\r\\n                result = func.apply(this, arguments);\\r\\n            }\\r\\n            if (n <= 1) {\\r\\n                func = undefined;\\r\\n            }\\r\\n            return result;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\\r\\n     * and `partials` prepended to the arguments it receives.\\r\\n     *\\r\\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\\r\\n     * may be used as a placeholder for partially applied arguments.\\r\\n     *\\r\\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \\\"length\\\"\\r\\n     * property of bound functions.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Function\\r\\n     * @param {Function} func The function to bind.\\r\\n     * @param {*} thisArg The `this` binding of `func`.\\r\\n     * @param {...*} [partials] The arguments to be partially applied.\\r\\n     * @returns {Function} Returns the new bound function.\\r\\n     * @example\\r\\n     *\\r\\n     * function greet(greeting, punctuation) {\\r\\n     *   return greeting + ' ' + this.user + punctuation;\\r\\n     * }\\r\\n     *\\r\\n     * var object = { 'user': 'fred' };\\r\\n     *\\r\\n     * var bound = _.bind(greet, object, 'hi');\\r\\n     * bound('!');\\r\\n     * // => 'hi fred!'\\r\\n     *\\r\\n     * // Bound with placeholders.\\r\\n     * var bound = _.bind(greet, object, _, '!');\\r\\n     * bound('hi');\\r\\n     * // => 'hi fred!'\\r\\n     */\\r\\n    var bind = baseRest(function(func, thisArg, partials) {\\r\\n        var bitmask = WRAP_BIND_FLAG;\\r\\n        if (partials.length) {\\r\\n            var holders = replaceHolders(partials, getHolder(bind));\\r\\n            bitmask |= WRAP_PARTIAL_FLAG;\\r\\n        }\\r\\n        return createWrap(func, bitmask, thisArg, partials, holders);\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Creates a debounced function that delays invoking `func` until after `wait`\\r\\n     * milliseconds have elapsed since the last time the debounced function was\\r\\n     * invoked. The debounced function comes with a `cancel` method to cancel\\r\\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\\r\\n     * Provide `options` to indicate whether `func` should be invoked on the\\r\\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\\r\\n     * with the last arguments provided to the debounced function. Subsequent\\r\\n     * calls to the debounced function return the result of the last `func`\\r\\n     * invocation.\\r\\n     *\\r\\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\\r\\n     * invoked on the trailing edge of the timeout only if the debounced function\\r\\n     * is invoked more than once during the `wait` timeout.\\r\\n     *\\r\\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\\r\\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\\r\\n     *\\r\\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\\r\\n     * for details over the differences between `_.debounce` and `_.throttle`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Function\\r\\n     * @param {Function} func The function to debounce.\\r\\n     * @param {number} [wait=0] The number of milliseconds to delay.\\r\\n     * @param {Object} [options={}] The options object.\\r\\n     * @param {boolean} [options.leading=false]\\r\\n     *  Specify invoking on the leading edge of the timeout.\\r\\n     * @param {number} [options.maxWait]\\r\\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\\r\\n     * @param {boolean} [options.trailing=true]\\r\\n     *  Specify invoking on the trailing edge of the timeout.\\r\\n     * @returns {Function} Returns the new debounced function.\\r\\n     * @example\\r\\n     *\\r\\n     * // Avoid costly calculations while the window size is in flux.\\r\\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\\r\\n     *\\r\\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\\r\\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\\r\\n     *   'leading': true,\\r\\n     *   'trailing': false\\r\\n     * }));\\r\\n     *\\r\\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\\r\\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\\r\\n     * var source = new EventSource('/stream');\\r\\n     * jQuery(source).on('message', debounced);\\r\\n     *\\r\\n     * // Cancel the trailing debounced invocation.\\r\\n     * jQuery(window).on('popstate', debounced.cancel);\\r\\n     */\\r\\n    function debounce(func, wait, options) {\\r\\n        var lastArgs,\\r\\n            lastThis,\\r\\n            maxWait,\\r\\n            result,\\r\\n            timerId,\\r\\n            lastCallTime,\\r\\n            lastInvokeTime = 0,\\r\\n            leading = false,\\r\\n            maxing = false,\\r\\n            trailing = true;\\r\\n\\r\\n        if (typeof func != 'function') {\\r\\n            throw new TypeError(FUNC_ERROR_TEXT);\\r\\n        }\\r\\n        wait = toNumber(wait) || 0;\\r\\n        if (isObject(options)) {\\r\\n            leading = !!options.leading;\\r\\n            maxing = 'maxWait' in options;\\r\\n            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\\r\\n            trailing = 'trailing' in options ? !!options.trailing : trailing;\\r\\n        }\\r\\n\\r\\n        function invokeFunc(time) {\\r\\n            var args = lastArgs,\\r\\n                thisArg = lastThis;\\r\\n\\r\\n            lastArgs = lastThis = undefined;\\r\\n            lastInvokeTime = time;\\r\\n            result = func.apply(thisArg, args);\\r\\n            return result;\\r\\n        }\\r\\n\\r\\n        function leadingEdge(time) {\\r\\n            // Reset any `maxWait` timer.\\r\\n            lastInvokeTime = time;\\r\\n            // Start the timer for the trailing edge.\\r\\n            timerId = setTimeout(timerExpired, wait);\\r\\n            // Invoke the leading edge.\\r\\n            return leading ? invokeFunc(time) : result;\\r\\n        }\\r\\n\\r\\n        function remainingWait(time) {\\r\\n            var timeSinceLastCall = time - lastCallTime,\\r\\n                timeSinceLastInvoke = time - lastInvokeTime,\\r\\n                timeWaiting = wait - timeSinceLastCall;\\r\\n\\r\\n            return maxing\\r\\n                ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\\r\\n                : timeWaiting;\\r\\n        }\\r\\n\\r\\n        function shouldInvoke(time) {\\r\\n            var timeSinceLastCall = time - lastCallTime,\\r\\n                timeSinceLastInvoke = time - lastInvokeTime;\\r\\n\\r\\n            // Either this is the first call, activity has stopped and we're at the\\r\\n            // trailing edge, the system time has gone backwards and we're treating\\r\\n            // it as the trailing edge, or we've hit the `maxWait` limit.\\r\\n            return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\\r\\n                (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\\r\\n        }\\r\\n\\r\\n        function timerExpired() {\\r\\n            var time = now();\\r\\n            if (shouldInvoke(time)) {\\r\\n                return trailingEdge(time);\\r\\n            }\\r\\n            // Restart the timer.\\r\\n            timerId = setTimeout(timerExpired, remainingWait(time));\\r\\n        }\\r\\n\\r\\n        function trailingEdge(time) {\\r\\n            timerId = undefined;\\r\\n\\r\\n            // Only invoke if we have `lastArgs` which means `func` has been\\r\\n            // debounced at least once.\\r\\n            if (trailing && lastArgs) {\\r\\n                return invokeFunc(time);\\r\\n            }\\r\\n            lastArgs = lastThis = undefined;\\r\\n            return result;\\r\\n        }\\r\\n\\r\\n        function cancel() {\\r\\n            if (timerId !== undefined) {\\r\\n                clearTimeout(timerId);\\r\\n            }\\r\\n            lastInvokeTime = 0;\\r\\n            lastArgs = lastCallTime = lastThis = timerId = undefined;\\r\\n        }\\r\\n\\r\\n        function flush() {\\r\\n            return timerId === undefined ? result : trailingEdge(now());\\r\\n        }\\r\\n\\r\\n        function debounced() {\\r\\n            var time = now(),\\r\\n                isInvoking = shouldInvoke(time);\\r\\n\\r\\n            lastArgs = arguments;\\r\\n            lastThis = this;\\r\\n            lastCallTime = time;\\r\\n\\r\\n            if (isInvoking) {\\r\\n                if (timerId === undefined) {\\r\\n                    return leadingEdge(lastCallTime);\\r\\n                }\\r\\n                if (maxing) {\\r\\n                    // Handle invocations in a tight loop.\\r\\n                    timerId = setTimeout(timerExpired, wait);\\r\\n                    return invokeFunc(lastCallTime);\\r\\n                }\\r\\n            }\\r\\n            if (timerId === undefined) {\\r\\n                timerId = setTimeout(timerExpired, wait);\\r\\n            }\\r\\n            return result;\\r\\n        }\\r\\n        debounced.cancel = cancel;\\r\\n        debounced.flush = flush;\\r\\n        return debounced;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Defers invoking the `func` until the current call stack has cleared. Any\\r\\n     * additional arguments are provided to `func` when it's invoked.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Function\\r\\n     * @param {Function} func The function to defer.\\r\\n     * @param {...*} [args] The arguments to invoke `func` with.\\r\\n     * @returns {number} Returns the timer id.\\r\\n     * @example\\r\\n     *\\r\\n     * _.defer(function(text) {\\r\\n     *   console.log(text);\\r\\n     * }, 'deferred');\\r\\n     * // => Logs 'deferred' after one millisecond.\\r\\n     */\\r\\n    var defer = baseRest(function(func, args) {\\r\\n        return baseDelay(func, 1, args);\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\\r\\n     * provided to `func` when it's invoked.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Function\\r\\n     * @param {Function} func The function to delay.\\r\\n     * @param {number} wait The number of milliseconds to delay invocation.\\r\\n     * @param {...*} [args] The arguments to invoke `func` with.\\r\\n     * @returns {number} Returns the timer id.\\r\\n     * @example\\r\\n     *\\r\\n     * _.delay(function(text) {\\r\\n     *   console.log(text);\\r\\n     * }, 1000, 'later');\\r\\n     * // => Logs 'later' after one second.\\r\\n     */\\r\\n    var delay = baseRest(function(func, wait, args) {\\r\\n        return baseDelay(func, toNumber(wait) || 0, args);\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Creates a function that memoizes the result of `func`. If `resolver` is\\r\\n     * provided, it determines the cache key for storing the result based on the\\r\\n     * arguments provided to the memoized function. By default, the first argument\\r\\n     * provided to the memoized function is used as the map cache key. The `func`\\r\\n     * is invoked with the `this` binding of the memoized function.\\r\\n     *\\r\\n     * **Note:** The cache is exposed as the `cache` property on the memoized\\r\\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\\r\\n     * constructor with one whose instances implement the\\r\\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\\r\\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Function\\r\\n     * @param {Function} func The function to have its output memoized.\\r\\n     * @param {Function} [resolver] The function to resolve the cache key.\\r\\n     * @returns {Function} Returns the new memoized function.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': 1, 'b': 2 };\\r\\n     * var other = { 'c': 3, 'd': 4 };\\r\\n     *\\r\\n     * var values = _.memoize(_.values);\\r\\n     * values(object);\\r\\n     * // => [1, 2]\\r\\n     *\\r\\n     * values(other);\\r\\n     * // => [3, 4]\\r\\n     *\\r\\n     * object.a = 2;\\r\\n     * values(object);\\r\\n     * // => [1, 2]\\r\\n     *\\r\\n     * // Modify the result cache.\\r\\n     * values.cache.set(object, ['a', 'b']);\\r\\n     * values(object);\\r\\n     * // => ['a', 'b']\\r\\n     *\\r\\n     * // Replace `_.memoize.Cache`.\\r\\n     * _.memoize.Cache = WeakMap;\\r\\n     */\\r\\n    function memoize(func, resolver) {\\r\\n        if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\\r\\n            throw new TypeError(FUNC_ERROR_TEXT);\\r\\n        }\\r\\n        var memoized = function() {\\r\\n            var args = arguments,\\r\\n                key = resolver ? resolver.apply(this, args) : args[0],\\r\\n                cache = memoized.cache;\\r\\n\\r\\n            if (cache.has(key)) {\\r\\n                return cache.get(key);\\r\\n            }\\r\\n            var result = func.apply(this, args);\\r\\n            memoized.cache = cache.set(key, result) || cache;\\r\\n            return result;\\r\\n        };\\r\\n        memoized.cache = new (memoize.Cache || MapCache);\\r\\n        return memoized;\\r\\n    }\\r\\n\\r\\n    // Expose `MapCache`.\\r\\n    memoize.Cache = MapCache;\\r\\n\\r\\n    /**\\r\\n     * Creates a function that negates the result of the predicate `func`. The\\r\\n     * `func` predicate is invoked with the `this` binding and arguments of the\\r\\n     * created function.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Function\\r\\n     * @param {Function} predicate The predicate to negate.\\r\\n     * @returns {Function} Returns the new negated function.\\r\\n     * @example\\r\\n     *\\r\\n     * function isEven(n) {\\r\\n     *   return n % 2 == 0;\\r\\n     * }\\r\\n     *\\r\\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\\r\\n     * // => [1, 3, 5]\\r\\n     */\\r\\n    function negate(predicate) {\\r\\n        if (typeof predicate != 'function') {\\r\\n            throw new TypeError(FUNC_ERROR_TEXT);\\r\\n        }\\r\\n        return function() {\\r\\n            var args = arguments;\\r\\n            switch (args.length) {\\r\\n                case 0: return !predicate.call(this);\\r\\n                case 1: return !predicate.call(this, args[0]);\\r\\n                case 2: return !predicate.call(this, args[0], args[1]);\\r\\n                case 3: return !predicate.call(this, args[0], args[1], args[2]);\\r\\n            }\\r\\n            return !predicate.apply(this, args);\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\\r\\n     * to the function return the value of the first invocation. The `func` is\\r\\n     * invoked with the `this` binding and arguments of the created function.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Function\\r\\n     * @param {Function} func The function to restrict.\\r\\n     * @returns {Function} Returns the new restricted function.\\r\\n     * @example\\r\\n     *\\r\\n     * var initialize = _.once(createApplication);\\r\\n     * initialize();\\r\\n     * initialize();\\r\\n     * // => `createApplication` is invoked once\\r\\n     */\\r\\n    function once(func) {\\r\\n        return before(2, func);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that invokes `func` with the `this` binding of the\\r\\n     * created function and arguments from `start` and beyond provided as\\r\\n     * an array.\\r\\n     *\\r\\n     * **Note:** This method is based on the\\r\\n     * [rest parameter](https://mdn.io/rest_parameters).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Function\\r\\n     * @param {Function} func The function to apply a rest parameter to.\\r\\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\\r\\n     * @returns {Function} Returns the new function.\\r\\n     * @example\\r\\n     *\\r\\n     * var say = _.rest(function(what, names) {\\r\\n     *   return what + ' ' + _.initial(names).join(', ') +\\r\\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\\r\\n     * });\\r\\n     *\\r\\n     * say('hello', 'fred', 'barney', 'pebbles');\\r\\n     * // => 'hello fred, barney, & pebbles'\\r\\n     */\\r\\n    function rest(func, start) {\\r\\n        if (typeof func != 'function') {\\r\\n            throw new TypeError(FUNC_ERROR_TEXT);\\r\\n        }\\r\\n        start = start === undefined ? start : toInteger(start);\\r\\n        return baseRest(func, start);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a throttled function that only invokes `func` at most once per\\r\\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\\r\\n     * method to cancel delayed `func` invocations and a `flush` method to\\r\\n     * immediately invoke them. Provide `options` to indicate whether `func`\\r\\n     * should be invoked on the leading and/or trailing edge of the `wait`\\r\\n     * timeout. The `func` is invoked with the last arguments provided to the\\r\\n     * throttled function. Subsequent calls to the throttled function return the\\r\\n     * result of the last `func` invocation.\\r\\n     *\\r\\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\\r\\n     * invoked on the trailing edge of the timeout only if the throttled function\\r\\n     * is invoked more than once during the `wait` timeout.\\r\\n     *\\r\\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\\r\\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\\r\\n     *\\r\\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\\r\\n     * for details over the differences between `_.throttle` and `_.debounce`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Function\\r\\n     * @param {Function} func The function to throttle.\\r\\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\\r\\n     * @param {Object} [options={}] The options object.\\r\\n     * @param {boolean} [options.leading=true]\\r\\n     *  Specify invoking on the leading edge of the timeout.\\r\\n     * @param {boolean} [options.trailing=true]\\r\\n     *  Specify invoking on the trailing edge of the timeout.\\r\\n     * @returns {Function} Returns the new throttled function.\\r\\n     * @example\\r\\n     *\\r\\n     * // Avoid excessively updating the position while scrolling.\\r\\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\\r\\n     *\\r\\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\\r\\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\\r\\n     * jQuery(element).on('click', throttled);\\r\\n     *\\r\\n     * // Cancel the trailing throttled invocation.\\r\\n     * jQuery(window).on('popstate', throttled.cancel);\\r\\n     */\\r\\n    function throttle(func, wait, options) {\\r\\n        var leading = true,\\r\\n            trailing = true;\\r\\n\\r\\n        if (typeof func != 'function') {\\r\\n            throw new TypeError(FUNC_ERROR_TEXT);\\r\\n        }\\r\\n        if (isObject(options)) {\\r\\n            leading = 'leading' in options ? !!options.leading : leading;\\r\\n            trailing = 'trailing' in options ? !!options.trailing : trailing;\\r\\n        }\\r\\n        return debounce(func, wait, {\\r\\n            'leading': leading,\\r\\n            'maxWait': wait,\\r\\n            'trailing': trailing\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates a shallow clone of `value`.\\r\\n     *\\r\\n     * **Note:** This method is loosely based on the\\r\\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\\r\\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\\r\\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\\r\\n     * arrays. The own enumerable properties of `arguments` objects are cloned\\r\\n     * as plain objects. An empty object is returned for uncloneable values such\\r\\n     * as error objects, functions, DOM nodes, and WeakMaps.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to clone.\\r\\n     * @returns {*} Returns the cloned value.\\r\\n     * @see _.cloneDeep\\r\\n     * @example\\r\\n     *\\r\\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\\r\\n     *\\r\\n     * var shallow = _.clone(objects);\\r\\n     * console.log(shallow[0] === objects[0]);\\r\\n     * // => true\\r\\n     */\\r\\n    function clone(value) {\\r\\n        return baseClone(value, CLONE_SYMBOLS_FLAG);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.clone` except that it recursively clones `value`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 1.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to recursively clone.\\r\\n     * @returns {*} Returns the deep cloned value.\\r\\n     * @see _.clone\\r\\n     * @example\\r\\n     *\\r\\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\\r\\n     *\\r\\n     * var deep = _.cloneDeep(objects);\\r\\n     * console.log(deep[0] === objects[0]);\\r\\n     * // => false\\r\\n     */\\r\\n    function cloneDeep(value) {\\r\\n        return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Performs a\\r\\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\r\\n     * comparison between two values to determine if they are equivalent.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to compare.\\r\\n     * @param {*} other The other value to compare.\\r\\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': 1 };\\r\\n     * var other = { 'a': 1 };\\r\\n     *\\r\\n     * _.eq(object, object);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.eq(object, other);\\r\\n     * // => false\\r\\n     *\\r\\n     * _.eq('a', 'a');\\r\\n     * // => true\\r\\n     *\\r\\n     * _.eq('a', Object('a'));\\r\\n     * // => false\\r\\n     *\\r\\n     * _.eq(NaN, NaN);\\r\\n     * // => true\\r\\n     */\\r\\n    function eq(value, other) {\\r\\n        return value === other || (value !== value && other !== other);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is likely an `arguments` object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\r\\n     *  else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isArguments(function() { return arguments; }());\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isArguments([1, 2, 3]);\\r\\n     * // => false\\r\\n     */\\r\\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\\r\\n        return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\\r\\n            !propertyIsEnumerable.call(value, 'callee');\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as an `Array` object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isArray([1, 2, 3]);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isArray(document.body.children);\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isArray('abc');\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isArray(_.noop);\\r\\n     * // => false\\r\\n     */\\r\\n    var isArray = Array.isArray;\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is array-like. A value is considered array-like if it's\\r\\n     * not a function and has a `value.length` that's an integer greater than or\\r\\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isArrayLike([1, 2, 3]);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isArrayLike(document.body.children);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isArrayLike('abc');\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isArrayLike(_.noop);\\r\\n     * // => false\\r\\n     */\\r\\n    function isArrayLike(value) {\\r\\n        return value != null && isLength(value.length) && !isFunction(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.isArrayLike` except that it also checks if `value`\\r\\n     * is an object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\\r\\n     *  else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isArrayLikeObject([1, 2, 3]);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isArrayLikeObject(document.body.children);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isArrayLikeObject('abc');\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isArrayLikeObject(_.noop);\\r\\n     * // => false\\r\\n     */\\r\\n    function isArrayLikeObject(value) {\\r\\n        return isObjectLike(value) && isArrayLike(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as a boolean primitive or object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isBoolean(false);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isBoolean(null);\\r\\n     * // => false\\r\\n     */\\r\\n    function isBoolean(value) {\\r\\n        return value === true || value === false ||\\r\\n            (isObjectLike(value) && baseGetTag(value) == boolTag);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is a buffer.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.3.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isBuffer(new Buffer(2));\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isBuffer(new Uint8Array(2));\\r\\n     * // => false\\r\\n     */\\r\\n    var isBuffer = nativeIsBuffer || stubFalse;\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as a `Date` object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isDate(new Date);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isDate('Mon April 23 2012');\\r\\n     * // => false\\r\\n     */\\r\\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is an empty object, collection, map, or set.\\r\\n     *\\r\\n     * Objects are considered empty if they have no own enumerable string keyed\\r\\n     * properties.\\r\\n     *\\r\\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\\r\\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\\r\\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isEmpty(null);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isEmpty(true);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isEmpty(1);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isEmpty([1, 2, 3]);\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isEmpty({ 'a': 1 });\\r\\n     * // => false\\r\\n     */\\r\\n    function isEmpty(value) {\\r\\n        if (value == null) {\\r\\n            return true;\\r\\n        }\\r\\n        if (isArrayLike(value) &&\\r\\n            (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\\r\\n                isBuffer(value) || isTypedArray(value) || isArguments(value))) {\\r\\n            return !value.length;\\r\\n        }\\r\\n        var tag = getTag(value);\\r\\n        if (tag == mapTag || tag == setTag) {\\r\\n            return !value.size;\\r\\n        }\\r\\n        if (isPrototype(value)) {\\r\\n            return !baseKeys(value).length;\\r\\n        }\\r\\n        for (var key in value) {\\r\\n            if (hasOwnProperty.call(value, key)) {\\r\\n                return false;\\r\\n            }\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Performs a deep comparison between two values to determine if they are\\r\\n     * equivalent.\\r\\n     *\\r\\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\\r\\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\\r\\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\\r\\n     * by their own, not inherited, enumerable properties. Functions and DOM\\r\\n     * nodes are compared by strict equality, i.e. `===`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to compare.\\r\\n     * @param {*} other The other value to compare.\\r\\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': 1 };\\r\\n     * var other = { 'a': 1 };\\r\\n     *\\r\\n     * _.isEqual(object, other);\\r\\n     * // => true\\r\\n     *\\r\\n     * object === other;\\r\\n     * // => false\\r\\n     */\\r\\n    function isEqual(value, other) {\\r\\n        return baseIsEqual(value, other);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is a finite primitive number.\\r\\n     *\\r\\n     * **Note:** This method is based on\\r\\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isFinite(3);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isFinite(Number.MIN_VALUE);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isFinite(Infinity);\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isFinite('3');\\r\\n     * // => false\\r\\n     */\\r\\n    function isFinite(value) {\\r\\n        return typeof value == 'number' && nativeIsFinite(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as a `Function` object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isFunction(_);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isFunction(/abc/);\\r\\n     * // => false\\r\\n     */\\r\\n    function isFunction(value) {\\r\\n        if (!isObject(value)) {\\r\\n            return false;\\r\\n        }\\r\\n        // The use of `Object#toString` avoids issues with the `typeof` operator\\r\\n        // in Safari 9 which returns 'object' for typed arrays and other constructors.\\r\\n        var tag = baseGetTag(value);\\r\\n        return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is a valid array-like length.\\r\\n     *\\r\\n     * **Note:** This method is loosely based on\\r\\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isLength(3);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isLength(Number.MIN_VALUE);\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isLength(Infinity);\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isLength('3');\\r\\n     * // => false\\r\\n     */\\r\\n    function isLength(value) {\\r\\n        return typeof value == 'number' &&\\r\\n            value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is the\\r\\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\\r\\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isObject({});\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isObject([1, 2, 3]);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isObject(_.noop);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isObject(null);\\r\\n     * // => false\\r\\n     */\\r\\n    function isObject(value) {\\r\\n        var type = typeof value;\\r\\n        return value != null && (type == 'object' || type == 'function');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\\r\\n     * and has a `typeof` result of \\\"object\\\".\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isObjectLike({});\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isObjectLike([1, 2, 3]);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isObjectLike(_.noop);\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isObjectLike(null);\\r\\n     * // => false\\r\\n     */\\r\\n    function isObjectLike(value) {\\r\\n        return value != null && typeof value == 'object';\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as a `Map` object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.3.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isMap(new Map);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isMap(new WeakMap);\\r\\n     * // => false\\r\\n     */\\r\\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is `NaN`.\\r\\n     *\\r\\n     * **Note:** This method is based on\\r\\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\\r\\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\\r\\n     * `undefined` and other non-number values.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isNaN(NaN);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isNaN(new Number(NaN));\\r\\n     * // => true\\r\\n     *\\r\\n     * isNaN(undefined);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isNaN(undefined);\\r\\n     * // => false\\r\\n     */\\r\\n    function isNaN(value) {\\r\\n        // An `NaN` primitive is the only value that is not equal to itself.\\r\\n        // Perform the `toStringTag` check first to avoid errors with some\\r\\n        // ActiveX objects in IE.\\r\\n        return isNumber(value) && value != +value;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is `null`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isNull(null);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isNull(void 0);\\r\\n     * // => false\\r\\n     */\\r\\n    function isNull(value) {\\r\\n        return value === null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as a `Number` primitive or object.\\r\\n     *\\r\\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\\r\\n     * classified as numbers, use the `_.isFinite` method.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isNumber(3);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isNumber(Number.MIN_VALUE);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isNumber(Infinity);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isNumber('3');\\r\\n     * // => false\\r\\n     */\\r\\n    function isNumber(value) {\\r\\n        return typeof value == 'number' ||\\r\\n            (isObjectLike(value) && baseGetTag(value) == numberTag);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is a plain object, that is, an object created by the\\r\\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.8.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * function Foo() {\\r\\n     *   this.a = 1;\\r\\n     * }\\r\\n     *\\r\\n     * _.isPlainObject(new Foo);\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isPlainObject([1, 2, 3]);\\r\\n     * // => false\\r\\n     *\\r\\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isPlainObject(Object.create(null));\\r\\n     * // => true\\r\\n     */\\r\\n    function isPlainObject(value) {\\r\\n        if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\\r\\n            return false;\\r\\n        }\\r\\n        var proto = getPrototype(value);\\r\\n        if (proto === null) {\\r\\n            return true;\\r\\n        }\\r\\n        var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\\r\\n        return typeof Ctor == 'function' && Ctor instanceof Ctor &&\\r\\n            funcToString.call(Ctor) == objectCtorString;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as a `RegExp` object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.1.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isRegExp(/abc/);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isRegExp('/abc/');\\r\\n     * // => false\\r\\n     */\\r\\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as a `Set` object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.3.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isSet(new Set);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isSet(new WeakSet);\\r\\n     * // => false\\r\\n     */\\r\\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as a `String` primitive or object.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isString('abc');\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isString(1);\\r\\n     * // => false\\r\\n     */\\r\\n    function isString(value) {\\r\\n        return typeof value == 'string' ||\\r\\n            (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as a `Symbol` primitive or object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isSymbol(Symbol.iterator);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isSymbol('abc');\\r\\n     * // => false\\r\\n     */\\r\\n    function isSymbol(value) {\\r\\n        return typeof value == 'symbol' ||\\r\\n            (isObjectLike(value) && baseGetTag(value) == symbolTag);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is classified as a typed array.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isTypedArray(new Uint8Array);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isTypedArray([]);\\r\\n     * // => false\\r\\n     */\\r\\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\\r\\n\\r\\n    /**\\r\\n     * Checks if `value` is `undefined`.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to check.\\r\\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.isUndefined(void 0);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.isUndefined(null);\\r\\n     * // => false\\r\\n     */\\r\\n    function isUndefined(value) {\\r\\n        return value === undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `value` to an array.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to convert.\\r\\n     * @returns {Array} Returns the converted array.\\r\\n     * @example\\r\\n     *\\r\\n     * _.toArray({ 'a': 1, 'b': 2 });\\r\\n     * // => [1, 2]\\r\\n     *\\r\\n     * _.toArray('abc');\\r\\n     * // => ['a', 'b', 'c']\\r\\n     *\\r\\n     * _.toArray(1);\\r\\n     * // => []\\r\\n     *\\r\\n     * _.toArray(null);\\r\\n     * // => []\\r\\n     */\\r\\n    function toArray(value) {\\r\\n        if (!value) {\\r\\n            return [];\\r\\n        }\\r\\n        if (isArrayLike(value)) {\\r\\n            return isString(value) ? stringToArray(value) : copyArray(value);\\r\\n        }\\r\\n        if (symIterator && value[symIterator]) {\\r\\n            return iteratorToArray(value[symIterator]());\\r\\n        }\\r\\n        var tag = getTag(value),\\r\\n            func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\\r\\n\\r\\n        return func(value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `value` to a finite number.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.12.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to convert.\\r\\n     * @returns {number} Returns the converted number.\\r\\n     * @example\\r\\n     *\\r\\n     * _.toFinite(3.2);\\r\\n     * // => 3.2\\r\\n     *\\r\\n     * _.toFinite(Number.MIN_VALUE);\\r\\n     * // => 5e-324\\r\\n     *\\r\\n     * _.toFinite(Infinity);\\r\\n     * // => 1.7976931348623157e+308\\r\\n     *\\r\\n     * _.toFinite('3.2');\\r\\n     * // => 3.2\\r\\n     */\\r\\n    function toFinite(value) {\\r\\n        if (!value) {\\r\\n            return value === 0 ? value : 0;\\r\\n        }\\r\\n        value = toNumber(value);\\r\\n        if (value === INFINITY || value === -INFINITY) {\\r\\n            var sign = (value < 0 ? -1 : 1);\\r\\n            return sign * MAX_INTEGER;\\r\\n        }\\r\\n        return value === value ? value : 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `value` to an integer.\\r\\n     *\\r\\n     * **Note:** This method is loosely based on\\r\\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to convert.\\r\\n     * @returns {number} Returns the converted integer.\\r\\n     * @example\\r\\n     *\\r\\n     * _.toInteger(3.2);\\r\\n     * // => 3\\r\\n     *\\r\\n     * _.toInteger(Number.MIN_VALUE);\\r\\n     * // => 0\\r\\n     *\\r\\n     * _.toInteger(Infinity);\\r\\n     * // => 1.7976931348623157e+308\\r\\n     *\\r\\n     * _.toInteger('3.2');\\r\\n     * // => 3\\r\\n     */\\r\\n    function toInteger(value) {\\r\\n        var result = toFinite(value),\\r\\n            remainder = result % 1;\\r\\n\\r\\n        return result === result ? (remainder ? result - remainder : result) : 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `value` to a number.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to process.\\r\\n     * @returns {number} Returns the number.\\r\\n     * @example\\r\\n     *\\r\\n     * _.toNumber(3.2);\\r\\n     * // => 3.2\\r\\n     *\\r\\n     * _.toNumber(Number.MIN_VALUE);\\r\\n     * // => 5e-324\\r\\n     *\\r\\n     * _.toNumber(Infinity);\\r\\n     * // => Infinity\\r\\n     *\\r\\n     * _.toNumber('3.2');\\r\\n     * // => 3.2\\r\\n     */\\r\\n    function toNumber(value) {\\r\\n        if (typeof value == 'number') {\\r\\n            return value;\\r\\n        }\\r\\n        if (isSymbol(value)) {\\r\\n            return NAN;\\r\\n        }\\r\\n        if (isObject(value)) {\\r\\n            var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\\r\\n            value = isObject(other) ? (other + '') : other;\\r\\n        }\\r\\n        if (typeof value != 'string') {\\r\\n            return value === 0 ? value : +value;\\r\\n        }\\r\\n        value = value.replace(reTrim, '');\\r\\n        var isBinary = reIsBinary.test(value);\\r\\n        return (isBinary || reIsOctal.test(value))\\r\\n            ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\\r\\n            : (reIsBadHex.test(value) ? NAN : +value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `value` to a plain object flattening inherited enumerable string\\r\\n     * keyed properties of `value` to own properties of the plain object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to convert.\\r\\n     * @returns {Object} Returns the converted plain object.\\r\\n     * @example\\r\\n     *\\r\\n     * function Foo() {\\r\\n     *   this.b = 2;\\r\\n     * }\\r\\n     *\\r\\n     * Foo.prototype.c = 3;\\r\\n     *\\r\\n     * _.assign({ 'a': 1 }, new Foo);\\r\\n     * // => { 'a': 1, 'b': 2 }\\r\\n     *\\r\\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\\r\\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\\r\\n     */\\r\\n    function toPlainObject(value) {\\r\\n        return copyObject(value, keysIn(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Converts `value` to a string. An empty string is returned for `null`\\r\\n     * and `undefined` values. The sign of `-0` is preserved.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Lang\\r\\n     * @param {*} value The value to convert.\\r\\n     * @returns {string} Returns the converted string.\\r\\n     * @example\\r\\n     *\\r\\n     * _.toString(null);\\r\\n     * // => ''\\r\\n     *\\r\\n     * _.toString(-0);\\r\\n     * // => '-0'\\r\\n     *\\r\\n     * _.toString([1, 2, 3]);\\r\\n     * // => '1,2,3'\\r\\n     */\\r\\n    function toString(value) {\\r\\n        return value == null ? '' : baseToString(value);\\r\\n    }\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.assign` except that it iterates over own and\\r\\n     * inherited source properties.\\r\\n     *\\r\\n     * **Note:** This method mutates `object`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @alias extend\\r\\n     * @category Object\\r\\n     * @param {Object} object The destination object.\\r\\n     * @param {...Object} [sources] The source objects.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     * @see _.assign\\r\\n     * @example\\r\\n     *\\r\\n     * function Foo() {\\r\\n     *   this.a = 1;\\r\\n     * }\\r\\n     *\\r\\n     * function Bar() {\\r\\n     *   this.c = 3;\\r\\n     * }\\r\\n     *\\r\\n     * Foo.prototype.b = 2;\\r\\n     * Bar.prototype.d = 4;\\r\\n     *\\r\\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\\r\\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\\r\\n     */\\r\\n    var assignIn = createAssigner(function(object, source) {\\r\\n        copyObject(source, keysIn(source), object);\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Creates an object that inherits from the `prototype` object. If a\\r\\n     * `properties` object is given, its own enumerable string keyed properties\\r\\n     * are assigned to the created object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 2.3.0\\r\\n     * @category Object\\r\\n     * @param {Object} prototype The object to inherit from.\\r\\n     * @param {Object} [properties] The properties to assign to the object.\\r\\n     * @returns {Object} Returns the new object.\\r\\n     * @example\\r\\n     *\\r\\n     * function Shape() {\\r\\n     *   this.x = 0;\\r\\n     *   this.y = 0;\\r\\n     * }\\r\\n     *\\r\\n     * function Circle() {\\r\\n     *   Shape.call(this);\\r\\n     * }\\r\\n     *\\r\\n     * Circle.prototype = _.create(Shape.prototype, {\\r\\n     *   'constructor': Circle\\r\\n     * });\\r\\n     *\\r\\n     * var circle = new Circle;\\r\\n     * circle instanceof Circle;\\r\\n     * // => true\\r\\n     *\\r\\n     * circle instanceof Shape;\\r\\n     * // => true\\r\\n     */\\r\\n    function create(prototype, properties) {\\r\\n        var result = baseCreate(prototype);\\r\\n        return properties == null ? result : baseAssign(result, properties);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Assigns own and inherited enumerable string keyed properties of source\\r\\n     * objects to the destination object for all destination properties that\\r\\n     * resolve to `undefined`. Source objects are applied from left to right.\\r\\n     * Once a property is set, additional values of the same property are ignored.\\r\\n     *\\r\\n     * **Note:** This method mutates `object`.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Object\\r\\n     * @param {Object} object The destination object.\\r\\n     * @param {...Object} [sources] The source objects.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     * @see _.defaultsDeep\\r\\n     * @example\\r\\n     *\\r\\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\\r\\n     * // => { 'a': 1, 'b': 2 }\\r\\n     */\\r\\n    var defaults = baseRest(function(object, sources) {\\r\\n        object = Object(object);\\r\\n\\r\\n        var index = -1;\\r\\n        var length = sources.length;\\r\\n        var guard = length > 2 ? sources[2] : undefined;\\r\\n\\r\\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\\r\\n            length = 1;\\r\\n        }\\r\\n\\r\\n        while (++index < length) {\\r\\n            var source = sources[index];\\r\\n            var props = keysIn(source);\\r\\n            var propsIndex = -1;\\r\\n            var propsLength = props.length;\\r\\n\\r\\n            while (++propsIndex < propsLength) {\\r\\n                var key = props[propsIndex];\\r\\n                var value = object[key];\\r\\n\\r\\n                if (value === undefined ||\\r\\n                    (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\\r\\n                    object[key] = source[key];\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return object;\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.defaults` except that it recursively assigns\\r\\n     * default properties.\\r\\n     *\\r\\n     * **Note:** This method mutates `object`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.10.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The destination object.\\r\\n     * @param {...Object} [sources] The source objects.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     * @see _.defaults\\r\\n     * @example\\r\\n     *\\r\\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\\r\\n     * // => { 'a': { 'b': 2, 'c': 3 } }\\r\\n     */\\r\\n    var defaultsDeep = baseRest(function(args) {\\r\\n        args.push(undefined, customDefaultsMerge);\\r\\n        return apply(mergeWith, undefined, args);\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.find` except that it returns the key of the first\\r\\n     * element `predicate` returns truthy for instead of the element itself.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 1.1.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to inspect.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\\r\\n     * @returns {string|undefined} Returns the key of the matched element,\\r\\n     *  else `undefined`.\\r\\n     * @example\\r\\n     *\\r\\n     * var users = {\\r\\n     *   'barney':  { 'age': 36, 'active': true },\\r\\n     *   'fred':    { 'age': 40, 'active': false },\\r\\n     *   'pebbles': { 'age': 1,  'active': true }\\r\\n     * };\\r\\n     *\\r\\n     * _.findKey(users, function(o) { return o.age < 40; });\\r\\n     * // => 'barney' (iteration order is not guaranteed)\\r\\n     *\\r\\n     * // The `_.matches` iteratee shorthand.\\r\\n     * _.findKey(users, { 'age': 1, 'active': true });\\r\\n     * // => 'pebbles'\\r\\n     *\\r\\n     * // The `_.matchesProperty` iteratee shorthand.\\r\\n     * _.findKey(users, ['active', false]);\\r\\n     * // => 'fred'\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.findKey(users, 'active');\\r\\n     * // => 'barney'\\r\\n     */\\r\\n    function findKey(object, predicate) {\\r\\n        return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.findKey` except that it iterates over elements of\\r\\n     * a collection in the opposite order.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 2.0.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to inspect.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\\r\\n     * @returns {string|undefined} Returns the key of the matched element,\\r\\n     *  else `undefined`.\\r\\n     * @example\\r\\n     *\\r\\n     * var users = {\\r\\n     *   'barney':  { 'age': 36, 'active': true },\\r\\n     *   'fred':    { 'age': 40, 'active': false },\\r\\n     *   'pebbles': { 'age': 1,  'active': true }\\r\\n     * };\\r\\n     *\\r\\n     * _.findLastKey(users, function(o) { return o.age < 40; });\\r\\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\\r\\n     *\\r\\n     * // The `_.matches` iteratee shorthand.\\r\\n     * _.findLastKey(users, { 'age': 36, 'active': true });\\r\\n     * // => 'barney'\\r\\n     *\\r\\n     * // The `_.matchesProperty` iteratee shorthand.\\r\\n     * _.findLastKey(users, ['active', false]);\\r\\n     * // => 'fred'\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.findLastKey(users, 'active');\\r\\n     * // => 'pebbles'\\r\\n     */\\r\\n    function findLastKey(object, predicate) {\\r\\n        return baseFindKey(object, baseIteratee(predicate, 3), baseForOwnRight);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the value at `path` of `object`. If the resolved value is\\r\\n     * `undefined`, the `defaultValue` is returned in its place.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.7.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {Array|string} path The path of the property to get.\\r\\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\\r\\n     * @returns {*} Returns the resolved value.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\\r\\n     *\\r\\n     * _.get(object, 'a[0].b.c');\\r\\n     * // => 3\\r\\n     *\\r\\n     * _.get(object, ['a', '0', 'b', 'c']);\\r\\n     * // => 3\\r\\n     *\\r\\n     * _.get(object, 'a.b.c', 'default');\\r\\n     * // => 'default'\\r\\n     */\\r\\n    function get(object, path, defaultValue) {\\r\\n        var result = object == null ? undefined : baseGet(object, path);\\r\\n        return result === undefined ? defaultValue : result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `path` is a direct property of `object`.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {Array|string} path The path to check.\\r\\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': { 'b': 2 } };\\r\\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\\r\\n     *\\r\\n     * _.has(object, 'a');\\r\\n     * // => true\\r\\n     *\\r\\n     * _.has(object, 'a.b');\\r\\n     * // => true\\r\\n     *\\r\\n     * _.has(object, ['a', 'b']);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.has(other, 'a');\\r\\n     * // => false\\r\\n     */\\r\\n    function has(object, path) {\\r\\n        return object != null && hasPath(object, path, baseHas);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if `path` is a direct or inherited property of `object`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {Array|string} path The path to check.\\r\\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\\r\\n     *\\r\\n     * _.hasIn(object, 'a');\\r\\n     * // => true\\r\\n     *\\r\\n     * _.hasIn(object, 'a.b');\\r\\n     * // => true\\r\\n     *\\r\\n     * _.hasIn(object, ['a', 'b']);\\r\\n     * // => true\\r\\n     *\\r\\n     * _.hasIn(object, 'b');\\r\\n     * // => false\\r\\n     */\\r\\n    function hasIn(object, path) {\\r\\n        return object != null && hasPath(object, path, baseHasIn);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an object composed of the inverted keys and values of `object`.\\r\\n     * If `object` contains duplicate values, subsequent values overwrite\\r\\n     * property assignments of previous values.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.7.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to invert.\\r\\n     * @returns {Object} Returns the new inverted object.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\\r\\n     *\\r\\n     * _.invert(object);\\r\\n     * // => { '1': 'c', '2': 'b' }\\r\\n     */\\r\\n    var invert = createInverter(function(result, value, key) {\\r\\n        if (value != null &&\\r\\n            typeof value.toString != 'function') {\\r\\n            value = nativeObjectToString.call(value);\\r\\n        }\\r\\n\\r\\n        result[value] = key;\\r\\n    }, constant(identity));\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.invert` except that the inverted object is generated\\r\\n     * from the results of running each element of `object` thru `iteratee`. The\\r\\n     * corresponding inverted value of each inverted key is an array of keys\\r\\n     * responsible for generating the inverted value. The iteratee is invoked\\r\\n     * with one argument: (value).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.1.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to invert.\\r\\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\\r\\n     * @returns {Object} Returns the new inverted object.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\\r\\n     *\\r\\n     * _.invertBy(object);\\r\\n     * // => { '1': ['a', 'c'], '2': ['b'] }\\r\\n     *\\r\\n     * _.invertBy(object, function(value) {\\r\\n     *   return 'group' + value;\\r\\n     * });\\r\\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\\r\\n     */\\r\\n    var invertBy = createInverter(function(result, value, key) {\\r\\n        if (value != null &&\\r\\n            typeof value.toString != 'function') {\\r\\n            value = nativeObjectToString.call(value);\\r\\n        }\\r\\n\\r\\n        if (hasOwnProperty.call(result, value)) {\\r\\n            result[value].push(key);\\r\\n        } else {\\r\\n            result[value] = [key];\\r\\n        }\\r\\n    }, baseIteratee);\\r\\n\\r\\n    /**\\r\\n     * Creates an array of the own enumerable property names of `object`.\\r\\n     *\\r\\n     * **Note:** Non-object values are coerced to objects. See the\\r\\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\\r\\n     * for more details.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the array of property names.\\r\\n     * @example\\r\\n     *\\r\\n     * function Foo() {\\r\\n     *   this.a = 1;\\r\\n     *   this.b = 2;\\r\\n     * }\\r\\n     *\\r\\n     * Foo.prototype.c = 3;\\r\\n     *\\r\\n     * _.keys(new Foo);\\r\\n     * // => ['a', 'b'] (iteration order is not guaranteed)\\r\\n     *\\r\\n     * _.keys('hi');\\r\\n     * // => ['0', '1']\\r\\n     */\\r\\n    function keys(object) {\\r\\n        return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array of the own and inherited enumerable property names of `object`.\\r\\n     *\\r\\n     * **Note:** Non-object values are coerced to objects.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the array of property names.\\r\\n     * @example\\r\\n     *\\r\\n     * function Foo() {\\r\\n     *   this.a = 1;\\r\\n     *   this.b = 2;\\r\\n     * }\\r\\n     *\\r\\n     * Foo.prototype.c = 3;\\r\\n     *\\r\\n     * _.keysIn(new Foo);\\r\\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\\r\\n     */\\r\\n    function keysIn(object) {\\r\\n        return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.assign` except that it recursively merges own and\\r\\n     * inherited enumerable string keyed properties of source objects into the\\r\\n     * destination object. Source properties that resolve to `undefined` are\\r\\n     * skipped if a destination value exists. Array and plain object properties\\r\\n     * are merged recursively. Other objects and value types are overridden by\\r\\n     * assignment. Source objects are applied from left to right. Subsequent\\r\\n     * sources overwrite property assignments of previous sources.\\r\\n     *\\r\\n     * **Note:** This method mutates `object`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.5.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The destination object.\\r\\n     * @param {...Object} [sources] The source objects.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = {\\r\\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\\r\\n     * };\\r\\n     *\\r\\n     * var other = {\\r\\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\\r\\n     * };\\r\\n     *\\r\\n     * _.merge(object, other);\\r\\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\\r\\n     */\\r\\n    var merge = createAssigner(function(object, source, srcIndex) {\\r\\n        baseMerge(object, source, srcIndex);\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.merge` except that it accepts `customizer` which\\r\\n     * is invoked to produce the merged values of the destination and source\\r\\n     * properties. If `customizer` returns `undefined`, merging is handled by the\\r\\n     * method instead. The `customizer` is invoked with six arguments:\\r\\n     * (objValue, srcValue, key, object, source, stack).\\r\\n     *\\r\\n     * **Note:** This method mutates `object`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The destination object.\\r\\n     * @param {...Object} sources The source objects.\\r\\n     * @param {Function} customizer The function to customize assigned values.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     * @example\\r\\n     *\\r\\n     * function customizer(objValue, srcValue) {\\r\\n     *   if (_.isArray(objValue)) {\\r\\n     *     return objValue.concat(srcValue);\\r\\n     *   }\\r\\n     * }\\r\\n     *\\r\\n     * var object = { 'a': [1], 'b': [2] };\\r\\n     * var other = { 'a': [3], 'b': [4] };\\r\\n     *\\r\\n     * _.mergeWith(object, other, customizer);\\r\\n     * // => { 'a': [1, 3], 'b': [2, 4] }\\r\\n     */\\r\\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\\r\\n        baseMerge(object, source, srcIndex, customizer);\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * The opposite of `_.pick`; this method creates an object composed of the\\r\\n     * own and inherited enumerable property paths of `object` that are not omitted.\\r\\n     *\\r\\n     * **Note:** This method is considerably slower than `_.pick`.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Object\\r\\n     * @param {Object} object The source object.\\r\\n     * @param {...(string|string[])} [paths] The property paths to omit.\\r\\n     * @returns {Object} Returns the new object.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\\r\\n     *\\r\\n     * _.omit(object, ['a', 'c']);\\r\\n     * // => { 'b': '2' }\\r\\n     */\\r\\n    var omit = flatRest(function(object, paths) {\\r\\n        var result = {};\\r\\n        if (object == null) {\\r\\n            return result;\\r\\n        }\\r\\n        var isDeep = false;\\r\\n        paths = arrayMap(paths, function(path) {\\r\\n            path = castPath(path, object);\\r\\n            isDeep || (isDeep = path.length > 1);\\r\\n            return path;\\r\\n        });\\r\\n        copyObject(object, getAllKeysIn(object), result);\\r\\n        if (isDeep) {\\r\\n            result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\\r\\n        }\\r\\n        var length = paths.length;\\r\\n        while (length--) {\\r\\n            baseUnset(result, paths[length]);\\r\\n        }\\r\\n        return result;\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * The opposite of `_.pickBy`; this method creates an object composed of\\r\\n     * the own and inherited enumerable string keyed properties of `object` that\\r\\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\\r\\n     * arguments: (value, key).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The source object.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per property.\\r\\n     * @returns {Object} Returns the new object.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\\r\\n     *\\r\\n     * _.omitBy(object, _.isNumber);\\r\\n     * // => { 'b': '2' }\\r\\n     */\\r\\n    function omitBy(object, predicate) {\\r\\n        return pickBy(object, negate(baseIteratee(predicate)));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an object composed of the picked `object` properties.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Object\\r\\n     * @param {Object} object The source object.\\r\\n     * @param {...(string|string[])} [paths] The property paths to pick.\\r\\n     * @returns {Object} Returns the new object.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\\r\\n     *\\r\\n     * _.pick(object, ['a', 'c']);\\r\\n     * // => { 'a': 1, 'c': 3 }\\r\\n     */\\r\\n    var pick = flatRest(function(object, paths) {\\r\\n        return object == null ? {} : basePick(object, paths);\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * Creates an object composed of the `object` properties `predicate` returns\\r\\n     * truthy for. The predicate is invoked with two arguments: (value, key).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The source object.\\r\\n     * @param {Function} [predicate=_.identity] The function invoked per property.\\r\\n     * @returns {Object} Returns the new object.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\\r\\n     *\\r\\n     * _.pickBy(object, _.isNumber);\\r\\n     * // => { 'a': 1, 'c': 3 }\\r\\n     */\\r\\n    function pickBy(object, predicate) {\\r\\n        if (object == null) {\\r\\n            return {};\\r\\n        }\\r\\n        var props = arrayMap(getAllKeysIn(object), function(prop) {\\r\\n            return [prop];\\r\\n        });\\r\\n        predicate = baseIteratee(predicate);\\r\\n        return basePickBy(object, props, function(value, path) {\\r\\n            return predicate(value, path[0]);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method is like `_.get` except that if the resolved value is a\\r\\n     * function it's invoked with the `this` binding of its parent object and\\r\\n     * its result is returned.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to query.\\r\\n     * @param {Array|string} path The path of the property to resolve.\\r\\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\\r\\n     * @returns {*} Returns the resolved value.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\\r\\n     *\\r\\n     * _.result(object, 'a[0].b.c1');\\r\\n     * // => 3\\r\\n     *\\r\\n     * _.result(object, 'a[0].b.c2');\\r\\n     * // => 4\\r\\n     *\\r\\n     * _.result(object, 'a[0].b.c3', 'default');\\r\\n     * // => 'default'\\r\\n     *\\r\\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\\r\\n     * // => 'default'\\r\\n     */\\r\\n    function result(object, path, defaultValue) {\\r\\n        path = castPath(path, object);\\r\\n\\r\\n        var index = -1,\\r\\n            length = path.length;\\r\\n\\r\\n        // Ensure the loop is entered when path is empty.\\r\\n        if (!length) {\\r\\n            length = 1;\\r\\n            object = undefined;\\r\\n        }\\r\\n        while (++index < length) {\\r\\n            var value = object == null ? undefined : object[toKey(path[index])];\\r\\n            if (value === undefined) {\\r\\n                index = length;\\r\\n                value = defaultValue;\\r\\n            }\\r\\n            object = isFunction(value) ? value.call(object) : value;\\r\\n        }\\r\\n        return object;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\\r\\n     * it's created. Arrays are created for missing index properties while objects\\r\\n     * are created for all other missing properties. Use `_.setWith` to customize\\r\\n     * `path` creation.\\r\\n     *\\r\\n     * **Note:** This method mutates `object`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.7.0\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to modify.\\r\\n     * @param {Array|string} path The path of the property to set.\\r\\n     * @param {*} value The value to set.\\r\\n     * @returns {Object} Returns `object`.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\\r\\n     *\\r\\n     * _.set(object, 'a[0].b.c', 4);\\r\\n     * console.log(object.a[0].b.c);\\r\\n     * // => 4\\r\\n     *\\r\\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\\r\\n     * console.log(object.x[0].y.z);\\r\\n     * // => 5\\r\\n     */\\r\\n    function set(object, path, value) {\\r\\n        return object == null ? object : baseSet(object, path, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array of the own enumerable string keyed property values of `object`.\\r\\n     *\\r\\n     * **Note:** Non-object values are coerced to objects.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Object\\r\\n     * @param {Object} object The object to query.\\r\\n     * @returns {Array} Returns the array of property values.\\r\\n     * @example\\r\\n     *\\r\\n     * function Foo() {\\r\\n     *   this.a = 1;\\r\\n     *   this.b = 2;\\r\\n     * }\\r\\n     *\\r\\n     * Foo.prototype.c = 3;\\r\\n     *\\r\\n     * _.values(new Foo);\\r\\n     * // => [1, 2] (iteration order is not guaranteed)\\r\\n     *\\r\\n     * _.values('hi');\\r\\n     * // => ['h', 'i']\\r\\n     */\\r\\n    function values(object) {\\r\\n        return object == null ? [] : baseValues(object, keys(object));\\r\\n    }\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.0.0\\r\\n     * @category Number\\r\\n     * @param {number} number The number to clamp.\\r\\n     * @param {number} [lower] The lower bound.\\r\\n     * @param {number} upper The upper bound.\\r\\n     * @returns {number} Returns the clamped number.\\r\\n     * @example\\r\\n     *\\r\\n     * _.clamp(-10, -5, 5);\\r\\n     * // => -5\\r\\n     *\\r\\n     * _.clamp(10, -5, 5);\\r\\n     * // => 5\\r\\n     */\\r\\n    function clamp(number, lower, upper) {\\r\\n        if (upper === undefined) {\\r\\n            upper = lower;\\r\\n            lower = undefined;\\r\\n        }\\r\\n        if (upper !== undefined) {\\r\\n            upper = toNumber(upper);\\r\\n            upper = upper === upper ? upper : 0;\\r\\n        }\\r\\n        if (lower !== undefined) {\\r\\n            lower = toNumber(lower);\\r\\n            lower = lower === lower ? lower : 0;\\r\\n        }\\r\\n        return baseClamp(toNumber(number), lower, upper);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\\r\\n     * If only one argument is provided a number between `0` and the given number\\r\\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\\r\\n     * floats, a floating-point number is returned instead of an integer.\\r\\n     *\\r\\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\\r\\n     * floating-point values which can produce unexpected results.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.7.0\\r\\n     * @category Number\\r\\n     * @param {number} [lower=0] The lower bound.\\r\\n     * @param {number} [upper=1] The upper bound.\\r\\n     * @param {boolean} [floating] Specify returning a floating-point number.\\r\\n     * @returns {number} Returns the random number.\\r\\n     * @example\\r\\n     *\\r\\n     * _.random(0, 5);\\r\\n     * // => an integer between 0 and 5\\r\\n     *\\r\\n     * _.random(5);\\r\\n     * // => also an integer between 0 and 5\\r\\n     *\\r\\n     * _.random(5, true);\\r\\n     * // => a floating-point number between 0 and 5\\r\\n     *\\r\\n     * _.random(1.2, 5.2);\\r\\n     * // => a floating-point number between 1.2 and 5.2\\r\\n     */\\r\\n    function random(lower, upper, floating) {\\r\\n        if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\\r\\n            upper = floating = undefined;\\r\\n        }\\r\\n        if (floating === undefined) {\\r\\n            if (typeof upper == 'boolean') {\\r\\n                floating = upper;\\r\\n                upper = undefined;\\r\\n            }\\r\\n            else if (typeof lower == 'boolean') {\\r\\n                floating = lower;\\r\\n                lower = undefined;\\r\\n            }\\r\\n        }\\r\\n        if (lower === undefined && upper === undefined) {\\r\\n            lower = 0;\\r\\n            upper = 1;\\r\\n        }\\r\\n        else {\\r\\n            lower = toFinite(lower);\\r\\n            if (upper === undefined) {\\r\\n                upper = lower;\\r\\n                lower = 0;\\r\\n            } else {\\r\\n                upper = toFinite(upper);\\r\\n            }\\r\\n        }\\r\\n        if (lower > upper) {\\r\\n            var temp = lower;\\r\\n            lower = upper;\\r\\n            upper = temp;\\r\\n        }\\r\\n        if (floating || lower % 1 || upper % 1) {\\r\\n            var rand = nativeRandom();\\r\\n            return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\\r\\n        }\\r\\n        return baseRandom(lower, upper);\\r\\n    }\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Converts the characters \\\"&\\\", \\\"<\\\", \\\">\\\", '\\\"', and \\\"'\\\" in `string` to their\\r\\n     * corresponding HTML entities.\\r\\n     *\\r\\n     * **Note:** No other characters are escaped. To escape additional\\r\\n     * characters use a third-party library like [_he_](https://mths.be/he).\\r\\n     *\\r\\n     * Though the \\\">\\\" character is escaped for symmetry, characters like\\r\\n     * \\\">\\\" and \\\"/\\\" don't need escaping in HTML and have no special meaning\\r\\n     * unless they're part of a tag or unquoted attribute value. See\\r\\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\\r\\n     * (under \\\"semi-related fun fact\\\") for more details.\\r\\n     *\\r\\n     * When working with HTML you should always\\r\\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\\r\\n     * XSS vectors.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category String\\r\\n     * @param {string} [string=''] The string to escape.\\r\\n     * @returns {string} Returns the escaped string.\\r\\n     * @example\\r\\n     *\\r\\n     * _.escape('fred, barney, & pebbles');\\r\\n     * // => 'fred, barney, &amp; pebbles'\\r\\n     */\\r\\n    function escape(string) {\\r\\n        string = toString(string);\\r\\n        return (string && reHasUnescapedHtml.test(string))\\r\\n            ? string.replace(reUnescapedHtml, escapeHtmlChar)\\r\\n            : string;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes leading and trailing whitespace or specified characters from `string`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category String\\r\\n     * @param {string} [string=''] The string to trim.\\r\\n     * @param {string} [chars=whitespace] The characters to trim.\\r\\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\r\\n     * @returns {string} Returns the trimmed string.\\r\\n     * @example\\r\\n     *\\r\\n     * _.trim('  abc  ');\\r\\n     * // => 'abc'\\r\\n     *\\r\\n     * _.trim('-_-abc-_-', '_-');\\r\\n     * // => 'abc'\\r\\n     *\\r\\n     * _.map(['  foo  ', '  bar  '], _.trim);\\r\\n     * // => ['foo', 'bar']\\r\\n     */\\r\\n    function trim(string, chars, guard) {\\r\\n        string = toString(string);\\r\\n        if (string && (guard || chars === undefined)) {\\r\\n            return string.replace(reTrim, '');\\r\\n        }\\r\\n        if (!string || !(chars = baseToString(chars))) {\\r\\n            return string;\\r\\n        }\\r\\n        var strSymbols = stringToArray(string),\\r\\n            chrSymbols = stringToArray(chars),\\r\\n            start = charsStartIndex(strSymbols, chrSymbols),\\r\\n            end = charsEndIndex(strSymbols, chrSymbols) + 1;\\r\\n\\r\\n        return castSlice(strSymbols, start, end).join('');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * The inverse of `_.escape`; this method converts the HTML entities\\r\\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\\r\\n     * their corresponding characters.\\r\\n     *\\r\\n     * **Note:** No other HTML entities are unescaped. To unescape additional\\r\\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 0.6.0\\r\\n     * @category String\\r\\n     * @param {string} [string=''] The string to unescape.\\r\\n     * @returns {string} Returns the unescaped string.\\r\\n     * @example\\r\\n     *\\r\\n     * _.unescape('fred, barney, &amp; pebbles');\\r\\n     * // => 'fred, barney, & pebbles'\\r\\n     */\\r\\n    function unescape(string) {\\r\\n        string = toString(string);\\r\\n        return (string && reHasEscapedHtml.test(string))\\r\\n            ? string.replace(reEscapedHtml, unescapeHtmlChar)\\r\\n            : string;\\r\\n    }\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Creates a function that returns `value`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 2.4.0\\r\\n     * @category Util\\r\\n     * @param {*} value The value to return from the new function.\\r\\n     * @returns {Function} Returns the new constant function.\\r\\n     * @example\\r\\n     *\\r\\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\\r\\n     *\\r\\n     * console.log(objects);\\r\\n     * // => [{ 'a': 1 }, { 'a': 1 }]\\r\\n     *\\r\\n     * console.log(objects[0] === objects[1]);\\r\\n     * // => true\\r\\n     */\\r\\n    function constant(value) {\\r\\n        return function() {\\r\\n            return value;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method returns the first argument it receives.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Util\\r\\n     * @param {*} value Any value.\\r\\n     * @returns {*} Returns `value`.\\r\\n     * @example\\r\\n     *\\r\\n     * var object = { 'a': 1 };\\r\\n     *\\r\\n     * console.log(_.identity(object) === object);\\r\\n     * // => true\\r\\n     */\\r\\n    function identity(value) {\\r\\n        return value;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that invokes `func` with the arguments of the created\\r\\n     * function. If `func` is a property name, the created function returns the\\r\\n     * property value for a given element. If `func` is an array or object, the\\r\\n     * created function returns `true` for elements that contain the equivalent\\r\\n     * source properties, otherwise it returns `false`.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 4.0.0\\r\\n     * @memberOf _\\r\\n     * @category Util\\r\\n     * @param {*} [func=_.identity] The value to convert to a callback.\\r\\n     * @returns {Function} Returns the callback.\\r\\n     * @example\\r\\n     *\\r\\n     * var users = [\\r\\n     *   { 'user': 'barney', 'age': 36, 'active': true },\\r\\n     *   { 'user': 'fred',   'age': 40, 'active': false }\\r\\n     * ];\\r\\n     *\\r\\n     * // The `_.matches` iteratee shorthand.\\r\\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\\r\\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\\r\\n     *\\r\\n     * // The `_.matchesProperty` iteratee shorthand.\\r\\n     * _.filter(users, _.iteratee(['user', 'fred']));\\r\\n     * // => [{ 'user': 'fred', 'age': 40 }]\\r\\n     *\\r\\n     * // The `_.property` iteratee shorthand.\\r\\n     * _.map(users, _.iteratee('user'));\\r\\n     * // => ['barney', 'fred']\\r\\n     *\\r\\n     * // Create custom iteratee shorthands.\\r\\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\\r\\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\\r\\n     *     return func.test(string);\\r\\n     *   };\\r\\n     * });\\r\\n     *\\r\\n     * _.filter(['abc', 'def'], /ef/);\\r\\n     * // => ['def']\\r\\n     */\\r\\n    function iteratee(func) {\\r\\n        return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that performs a partial deep comparison between a given\\r\\n     * object and `source`, returning `true` if the given object has equivalent\\r\\n     * property values, else `false`.\\r\\n     *\\r\\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\\r\\n     * partially applied.\\r\\n     *\\r\\n     * Partial comparisons will match empty array and empty object `source`\\r\\n     * values against any array or object value, respectively. See `_.isEqual`\\r\\n     * for a list of supported value comparisons.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 3.0.0\\r\\n     * @category Util\\r\\n     * @param {Object} source The object of property values to match.\\r\\n     * @returns {Function} Returns the new spec function.\\r\\n     * @example\\r\\n     *\\r\\n     * var objects = [\\r\\n     *   { 'a': 1, 'b': 2, 'c': 3 },\\r\\n     *   { 'a': 4, 'b': 5, 'c': 6 }\\r\\n     * ];\\r\\n     *\\r\\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\\r\\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\\r\\n     */\\r\\n    function matches(source) {\\r\\n        return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds all own enumerable string keyed function properties of a source\\r\\n     * object to the destination object. If `object` is a function, then methods\\r\\n     * are added to its prototype as well.\\r\\n     *\\r\\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\\r\\n     * avoid conflicts caused by modifying the original.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Util\\r\\n     * @param {Function|Object} [object=lodash] The destination object.\\r\\n     * @param {Object} source The object of functions to add.\\r\\n     * @param {Object} [options={}] The options object.\\r\\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\\r\\n     * @returns {Function|Object} Returns `object`.\\r\\n     * @example\\r\\n     *\\r\\n     * function vowels(string) {\\r\\n     *   return _.filter(string, function(v) {\\r\\n     *     return /[aeiou]/i.test(v);\\r\\n     *   });\\r\\n     * }\\r\\n     *\\r\\n     * _.mixin({ 'vowels': vowels });\\r\\n     * _.vowels('fred');\\r\\n     * // => ['e']\\r\\n     *\\r\\n     * _('fred').vowels().value();\\r\\n     * // => ['e']\\r\\n     *\\r\\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\\r\\n     * _('fred').vowels();\\r\\n     * // => ['e']\\r\\n     */\\r\\n    function mixin(object, source, options) {\\r\\n        var props = keys(source),\\r\\n            methodNames = baseFunctions(source, props);\\r\\n\\r\\n        if (options == null &&\\r\\n            !(isObject(source) && (methodNames.length || !props.length))) {\\r\\n            options = source;\\r\\n            source = object;\\r\\n            object = this;\\r\\n            methodNames = baseFunctions(source, keys(source));\\r\\n        }\\r\\n        var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\\r\\n            isFunc = isFunction(object);\\r\\n\\r\\n        arrayEach(methodNames, function(methodName) {\\r\\n            var func = source[methodName];\\r\\n            object[methodName] = func;\\r\\n            if (isFunc) {\\r\\n                object.prototype[methodName] = function() {\\r\\n                    var chainAll = this.__chain__;\\r\\n                    if (chain || chainAll) {\\r\\n                        var result = object(this.__wrapped__),\\r\\n                            actions = result.__actions__ = copyArray(this.__actions__);\\r\\n\\r\\n                        actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\\r\\n                        result.__chain__ = chainAll;\\r\\n                        return result;\\r\\n                    }\\r\\n                    return func.apply(object, arrayPush([this.value()], arguments));\\r\\n                };\\r\\n            }\\r\\n        });\\r\\n\\r\\n        return object;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Reverts the `_` variable to its previous value and returns a reference to\\r\\n     * the `lodash` function.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Util\\r\\n     * @returns {Function} Returns the `lodash` function.\\r\\n     * @example\\r\\n     *\\r\\n     * var lodash = _.noConflict();\\r\\n     */\\r\\n    function noConflict() {\\r\\n        if (root._ === this) {\\r\\n            root._ = oldDash;\\r\\n        }\\r\\n        return this;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method returns `undefined`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 2.3.0\\r\\n     * @category Util\\r\\n     * @example\\r\\n     *\\r\\n     * _.times(2, _.noop);\\r\\n     * // => [undefined, undefined]\\r\\n     */\\r\\n    function noop() {\\r\\n        // No operation performed.\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates a function that returns the value at `path` of a given object.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 2.4.0\\r\\n     * @category Util\\r\\n     * @param {Array|string} path The path of the property to get.\\r\\n     * @returns {Function} Returns the new accessor function.\\r\\n     * @example\\r\\n     *\\r\\n     * var objects = [\\r\\n     *   { 'a': { 'b': 2 } },\\r\\n     *   { 'a': { 'b': 1 } }\\r\\n     * ];\\r\\n     *\\r\\n     * _.map(objects, _.property('a.b'));\\r\\n     * // => [2, 1]\\r\\n     *\\r\\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\\r\\n     * // => [1, 2]\\r\\n     */\\r\\n    function property(path) {\\r\\n        return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Creates an array of numbers (positive and/or negative) progressing from\\r\\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\\r\\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\\r\\n     * it's set to `start` with `start` then set to `0`.\\r\\n     *\\r\\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\\r\\n     * floating-point values which can produce unexpected results.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Util\\r\\n     * @param {number} [start=0] The start of the range.\\r\\n     * @param {number} end The end of the range.\\r\\n     * @param {number} [step=1] The value to increment or decrement by.\\r\\n     * @returns {Array} Returns the range of numbers.\\r\\n     * @see _.inRange, _.rangeRight\\r\\n     * @example\\r\\n     *\\r\\n     * _.range(4);\\r\\n     * // => [0, 1, 2, 3]\\r\\n     *\\r\\n     * _.range(-4);\\r\\n     * // => [0, -1, -2, -3]\\r\\n     *\\r\\n     * _.range(1, 5);\\r\\n     * // => [1, 2, 3, 4]\\r\\n     *\\r\\n     * _.range(0, 20, 5);\\r\\n     * // => [0, 5, 10, 15]\\r\\n     *\\r\\n     * _.range(0, -4, -1);\\r\\n     * // => [0, -1, -2, -3]\\r\\n     *\\r\\n     * _.range(1, 4, 0);\\r\\n     * // => [1, 1, 1]\\r\\n     *\\r\\n     * _.range(0);\\r\\n     * // => []\\r\\n     */\\r\\n    var range = createRange();\\r\\n\\r\\n    /**\\r\\n     * This method returns a new empty array.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.13.0\\r\\n     * @category Util\\r\\n     * @returns {Array} Returns the new empty array.\\r\\n     * @example\\r\\n     *\\r\\n     * var arrays = _.times(2, _.stubArray);\\r\\n     *\\r\\n     * console.log(arrays);\\r\\n     * // => [[], []]\\r\\n     *\\r\\n     * console.log(arrays[0] === arrays[1]);\\r\\n     * // => false\\r\\n     */\\r\\n    function stubArray() {\\r\\n        return [];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This method returns `false`.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @since 4.13.0\\r\\n     * @category Util\\r\\n     * @returns {boolean} Returns `false`.\\r\\n     * @example\\r\\n     *\\r\\n     * _.times(2, _.stubFalse);\\r\\n     * // => [false, false]\\r\\n     */\\r\\n    function stubFalse() {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Util\\r\\n     * @param {string} [prefix=''] The value to prefix the ID with.\\r\\n     * @returns {string} Returns the unique ID.\\r\\n     * @example\\r\\n     *\\r\\n     * _.uniqueId('contact_');\\r\\n     * // => 'contact_104'\\r\\n     *\\r\\n     * _.uniqueId();\\r\\n     * // => '105'\\r\\n     */\\r\\n    function uniqueId(prefix) {\\r\\n        var id = ++idCounter;\\r\\n        return toString(prefix) + id;\\r\\n    }\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\\r\\n     * `undefined` is returned.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Math\\r\\n     * @param {Array} array The array to iterate over.\\r\\n     * @returns {*} Returns the maximum value.\\r\\n     * @example\\r\\n     *\\r\\n     * _.max([4, 2, 8, 6]);\\r\\n     * // => 8\\r\\n     *\\r\\n     * _.max([]);\\r\\n     * // => undefined\\r\\n     */\\r\\n    function max(array) {\\r\\n        return (array && array.length)\\r\\n            ? baseExtremum(array, identity, baseGt)\\r\\n            : undefined;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\\r\\n     * `undefined` is returned.\\r\\n     *\\r\\n     * @static\\r\\n     * @since 0.1.0\\r\\n     * @memberOf _\\r\\n     * @category Math\\r\\n     * @param {Array} array The array to iterate over.\\r\\n     * @returns {*} Returns the minimum value.\\r\\n     * @example\\r\\n     *\\r\\n     * _.min([4, 2, 8, 6]);\\r\\n     * // => 2\\r\\n     *\\r\\n     * _.min([]);\\r\\n     * // => undefined\\r\\n     */\\r\\n    function min(array) {\\r\\n        return (array && array.length)\\r\\n            ? baseExtremum(array, identity, baseLt)\\r\\n            : undefined;\\r\\n    }\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    // Add methods that return wrapped values in chain sequences.\\r\\n    lodash.after = after;\\r\\n    lodash.assignIn = assignIn;\\r\\n    lodash.before = before;\\r\\n    lodash.bind = bind;\\r\\n    lodash.chain = chain;\\r\\n    lodash.chunk = chunk;\\r\\n    lodash.compact = compact;\\r\\n    lodash.concat = concat;\\r\\n    lodash.countBy = countBy;\\r\\n    lodash.create = create;\\r\\n    lodash.debounce = debounce;\\r\\n    lodash.defaults = defaults;\\r\\n    lodash.defaultsDeep = defaultsDeep;\\r\\n    lodash.defer = defer;\\r\\n    lodash.delay = delay;\\r\\n    lodash.difference = difference;\\r\\n    lodash.drop = drop;\\r\\n    lodash.filter = filter;\\r\\n    lodash.flatten = flatten;\\r\\n    lodash.flattenDeep = flattenDeep;\\r\\n    lodash.groupBy = groupBy;\\r\\n    lodash.initial = initial;\\r\\n    lodash.intersection = intersection;\\r\\n    lodash.invert = invert;\\r\\n    lodash.invertBy = invertBy;\\r\\n    lodash.iteratee = iteratee;\\r\\n    lodash.keys = keys;\\r\\n    lodash.map = map;\\r\\n    lodash.matches = matches;\\r\\n    lodash.merge = merge;\\r\\n    lodash.mixin = mixin;\\r\\n    lodash.negate = negate;\\r\\n    lodash.omit = omit;\\r\\n    lodash.omitBy = omitBy;\\r\\n    lodash.once = once;\\r\\n    lodash.pick = pick;\\r\\n    lodash.pickBy = pickBy;\\r\\n    lodash.range = range;\\r\\n    lodash.reject = reject;\\r\\n    lodash.rest = rest;\\r\\n    lodash.set = set;\\r\\n    lodash.slice = slice;\\r\\n    lodash.sortBy = sortBy;\\r\\n    lodash.take = take;\\r\\n    lodash.takeRight = takeRight;\\r\\n    lodash.tap = tap;\\r\\n    lodash.throttle = throttle;\\r\\n    lodash.thru = thru;\\r\\n    lodash.toArray = toArray;\\r\\n    lodash.union = union;\\r\\n    lodash.uniq = uniq;\\r\\n    lodash.uniqBy = uniqBy;\\r\\n    lodash.unzip = unzip;\\r\\n    lodash.values = values;\\r\\n    lodash.without = without;\\r\\n    lodash.zip = zip;\\r\\n    lodash.zipObject = zipObject;\\r\\n\\r\\n    // Add aliases.\\r\\n    lodash.extend = assignIn;\\r\\n\\r\\n    // Add methods to `lodash.prototype`.\\r\\n    mixin(lodash, lodash);\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    // Add methods that return unwrapped values in chain sequences.\\r\\n    lodash.clamp = clamp;\\r\\n    lodash.clone = clone;\\r\\n    lodash.cloneDeep = cloneDeep;\\r\\n    lodash.escape = escape;\\r\\n    lodash.every = every;\\r\\n    lodash.find = find;\\r\\n    lodash.findIndex = findIndex;\\r\\n    lodash.findKey = findKey;\\r\\n    lodash.findLastIndex = findLastIndex;\\r\\n    lodash.findLastKey = findLastKey;\\r\\n    lodash.forEach = forEach;\\r\\n    lodash.get = get;\\r\\n    lodash.has = has;\\r\\n    lodash.head = head;\\r\\n    lodash.identity = identity;\\r\\n    lodash.indexOf = indexOf;\\r\\n    lodash.isArguments = isArguments;\\r\\n    lodash.isArray = isArray;\\r\\n    lodash.isArrayLike = isArrayLike;\\r\\n    lodash.isBoolean = isBoolean;\\r\\n    lodash.isDate = isDate;\\r\\n    lodash.isEmpty = isEmpty;\\r\\n    lodash.isEqual = isEqual;\\r\\n    lodash.isFinite = isFinite;\\r\\n    lodash.isFunction = isFunction;\\r\\n    lodash.isNaN = isNaN;\\r\\n    lodash.isNull = isNull;\\r\\n    lodash.isNumber = isNumber;\\r\\n    lodash.isObject = isObject;\\r\\n    lodash.isPlainObject = isPlainObject;\\r\\n    lodash.isRegExp = isRegExp;\\r\\n    lodash.isString = isString;\\r\\n    lodash.isUndefined = isUndefined;\\r\\n    lodash.last = last;\\r\\n    lodash.max = max;\\r\\n    lodash.min = min;\\r\\n    lodash.noConflict = noConflict;\\r\\n    lodash.noop = noop;\\r\\n    lodash.random = random;\\r\\n    lodash.reduce = reduce;\\r\\n    lodash.result = result;\\r\\n    lodash.size = size;\\r\\n    lodash.some = some;\\r\\n    lodash.trim = trim;\\r\\n    lodash.unescape = unescape;\\r\\n    lodash.uniqueId = uniqueId;\\r\\n\\r\\n    // Add aliases.\\r\\n    lodash.each = forEach;\\r\\n    lodash.first = head;\\r\\n\\r\\n    mixin(lodash, (function() {\\r\\n        var source = {};\\r\\n        baseForOwn(lodash, function(func, methodName) {\\r\\n            if (!hasOwnProperty.call(lodash.prototype, methodName)) {\\r\\n                source[methodName] = func;\\r\\n            }\\r\\n        });\\r\\n        return source;\\r\\n    }()), { 'chain': false });\\r\\n\\r\\n    /*------------------------------------------------------------------------*/\\r\\n\\r\\n    /**\\r\\n     * The semantic version number.\\r\\n     *\\r\\n     * @static\\r\\n     * @memberOf _\\r\\n     * @type {string}\\r\\n     */\\r\\n    lodash.VERSION = VERSION;\\r\\n\\r\\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\\r\\n    arrayEach(['drop', 'take'], function(methodName, index) {\\r\\n        LazyWrapper.prototype[methodName] = function(n) {\\r\\n            n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\\r\\n\\r\\n            var result = (this.__filtered__ && !index)\\r\\n                ? new LazyWrapper(this)\\r\\n                : this.clone();\\r\\n\\r\\n            if (result.__filtered__) {\\r\\n                result.__takeCount__ = nativeMin(n, result.__takeCount__);\\r\\n            } else {\\r\\n                result.__views__.push({\\r\\n                    'size': nativeMin(n, MAX_ARRAY_LENGTH),\\r\\n                    'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\\r\\n                });\\r\\n            }\\r\\n            return result;\\r\\n        };\\r\\n\\r\\n        LazyWrapper.prototype[methodName + 'Right'] = function(n) {\\r\\n            return this.reverse()[methodName](n).reverse();\\r\\n        };\\r\\n    });\\r\\n\\r\\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\\r\\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\\r\\n        var type = index + 1,\\r\\n            isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\\r\\n\\r\\n        LazyWrapper.prototype[methodName] = function(iteratee) {\\r\\n            var result = this.clone();\\r\\n            result.__iteratees__.push({\\r\\n                'iteratee': getIteratee(iteratee, 3),\\r\\n                'type': type\\r\\n            });\\r\\n            result.__filtered__ = result.__filtered__ || isFilter;\\r\\n            return result;\\r\\n        };\\r\\n    });\\r\\n\\r\\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\\r\\n    arrayEach(['head', 'last'], function(methodName, index) {\\r\\n        var takeName = 'take' + (index ? 'Right' : '');\\r\\n\\r\\n        LazyWrapper.prototype[methodName] = function() {\\r\\n            return this[takeName](1).value()[0];\\r\\n        };\\r\\n    });\\r\\n\\r\\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\\r\\n    arrayEach(['initial', 'tail'], function(methodName, index) {\\r\\n        var dropName = 'drop' + (index ? '' : 'Right');\\r\\n\\r\\n        LazyWrapper.prototype[methodName] = function() {\\r\\n            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\\r\\n        };\\r\\n    });\\r\\n\\r\\n    LazyWrapper.prototype.compact = function() {\\r\\n        return this.filter(identity);\\r\\n    };\\r\\n\\r\\n    LazyWrapper.prototype.find = function(predicate) {\\r\\n        return this.filter(predicate).head();\\r\\n    };\\r\\n\\r\\n    LazyWrapper.prototype.findLast = function(predicate) {\\r\\n        return this.reverse().find(predicate);\\r\\n    };\\r\\n\\r\\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\\r\\n        if (typeof path == 'function') {\\r\\n            return new LazyWrapper(this);\\r\\n        }\\r\\n        return this.map(function(value) {\\r\\n            return baseInvoke(value, path, args);\\r\\n        });\\r\\n    });\\r\\n\\r\\n    LazyWrapper.prototype.reject = function(predicate) {\\r\\n        return this.filter(negate(getIteratee(predicate)));\\r\\n    };\\r\\n\\r\\n    LazyWrapper.prototype.slice = function(start, end) {\\r\\n        start = toInteger(start);\\r\\n\\r\\n        var result = this;\\r\\n        if (result.__filtered__ && (start > 0 || end < 0)) {\\r\\n            return new LazyWrapper(result);\\r\\n        }\\r\\n        if (start < 0) {\\r\\n            result = result.takeRight(-start);\\r\\n        } else if (start) {\\r\\n            result = result.drop(start);\\r\\n        }\\r\\n        if (end !== undefined) {\\r\\n            end = toInteger(end);\\r\\n            result = end < 0 ? result.dropRight(-end) : result.take(end - start);\\r\\n        }\\r\\n        return result;\\r\\n    };\\r\\n\\r\\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\\r\\n        return this.reverse().takeWhile(predicate).reverse();\\r\\n    };\\r\\n\\r\\n    LazyWrapper.prototype.toArray = function() {\\r\\n        return this.take(MAX_ARRAY_LENGTH);\\r\\n    };\\r\\n\\r\\n    // Add `LazyWrapper` methods to `lodash.prototype`.\\r\\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\\r\\n        var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\\r\\n            isTaker = /^(?:head|last)$/.test(methodName),\\r\\n            lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\\r\\n            retUnwrapped = isTaker || /^find/.test(methodName);\\r\\n\\r\\n        if (!lodashFunc) {\\r\\n            return;\\r\\n        }\\r\\n        lodash.prototype[methodName] = function() {\\r\\n            var value = this.__wrapped__,\\r\\n                args = isTaker ? [1] : arguments,\\r\\n                isLazy = value instanceof LazyWrapper,\\r\\n                iteratee = args[0],\\r\\n                useLazy = isLazy || isArray(value);\\r\\n\\r\\n            var interceptor = function(value) {\\r\\n                var result = lodashFunc.apply(lodash, arrayPush([value], args));\\r\\n                return (isTaker && chainAll) ? result[0] : result;\\r\\n            };\\r\\n\\r\\n            if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\\r\\n                // Avoid lazy use if the iteratee has a \\\"length\\\" value other than `1`.\\r\\n                isLazy = useLazy = false;\\r\\n            }\\r\\n            var chainAll = this.__chain__,\\r\\n                isHybrid = !!this.__actions__.length,\\r\\n                isUnwrapped = retUnwrapped && !chainAll,\\r\\n                onlyLazy = isLazy && !isHybrid;\\r\\n\\r\\n            if (!retUnwrapped && useLazy) {\\r\\n                value = onlyLazy ? value : new LazyWrapper(this);\\r\\n                var result = func.apply(value, args);\\r\\n                result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\\r\\n                return new LodashWrapper(result, chainAll);\\r\\n            }\\r\\n            if (isUnwrapped && onlyLazy) {\\r\\n                return func.apply(this, args);\\r\\n            }\\r\\n            result = this.thru(interceptor);\\r\\n            return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\\r\\n        };\\r\\n    });\\r\\n\\r\\n    // Add `Array` methods to `lodash.prototype`.\\r\\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\\r\\n        var func = arrayProto[methodName],\\r\\n            chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\\r\\n            retUnwrapped = /^(?:pop|shift)$/.test(methodName);\\r\\n\\r\\n        lodash.prototype[methodName] = function() {\\r\\n            var args = arguments;\\r\\n            if (retUnwrapped && !this.__chain__) {\\r\\n                var value = this.value();\\r\\n                return func.apply(isArray(value) ? value : [], args);\\r\\n            }\\r\\n            return this[chainName](function(value) {\\r\\n                return func.apply(isArray(value) ? value : [], args);\\r\\n            });\\r\\n        };\\r\\n    });\\r\\n\\r\\n    // Map minified method names to their real names.\\r\\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\\r\\n        var lodashFunc = lodash[methodName];\\r\\n        if (lodashFunc) {\\r\\n            var key = (lodashFunc.name + ''),\\r\\n                names = realNames[key] || (realNames[key] = []);\\r\\n\\r\\n            names.push({ 'name': methodName, 'func': lodashFunc });\\r\\n        }\\r\\n    });\\r\\n\\r\\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\\r\\n        'name': 'wrapper',\\r\\n        'func': undefined\\r\\n    }];\\r\\n\\r\\n    // Add methods to `LazyWrapper`.\\r\\n    LazyWrapper.prototype.clone = lazyClone;\\r\\n    LazyWrapper.prototype.reverse = lazyReverse;\\r\\n    LazyWrapper.prototype.value = lazyValue;\\r\\n\\r\\n    // Add lazy aliases.\\r\\n    lodash.prototype.first = lodash.prototype.head;\\r\\n\\r\\n    if (symIterator) {\\r\\n        lodash.prototype[symIterator] = wrapperToIterator;\\r\\n    }\\r\\n\\r\\n    /*--------------------------------------------------------------------------*/\\r\\n\\r\\n    // Some AMD build optimizers, like r.js, check for condition patterns like:\\r\\n    if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\\r\\n        // Expose Lodash on the global object to prevent errors when Lodash is\\r\\n        // loaded by a script tag in the presence of an AMD loader.\\r\\n        // See http://requirejs.org/docs/errors.html#mismatch for more details.\\r\\n        // Use `_.noConflict` to remove Lodash from the global object.\\r\\n        root._ = lodash;\\r\\n\\r\\n        // Define as an anonymous module so, through path mapping, it can be\\r\\n        // referenced as the \\\"underscore\\\" module.\\r\\n        define(function() {\\r\\n            return lodash;\\r\\n        });\\r\\n    }\\r\\n    // Check for `exports` after `define` in case a build optimizer adds it.\\r\\n    else if (freeModule) {\\r\\n        // Export for Node.js.\\r\\n        (freeModule.exports = lodash)._ = lodash;\\r\\n        // Export for CommonJS support.\\r\\n        freeExports._ = lodash;\\r\\n    }\\r\\n    else {\\r\\n        // Export to the global object.\\r\\n        BI._ = lodash;\\r\\n    }\\r\\n}.call(this));\\r\\n\"","/**\r\n * 基本函数\r\n * Create By GUY 2014\\11\\17\r\n *\r\n */\r\n!(function (undefined) {\r\n    var traverse = function (func, context) {\r\n        return function (value, key, obj) {\r\n            return func.call(context, key, value, obj);\r\n        };\r\n    };\r\n    var _apply = function (name) {\r\n        return function () {\r\n            return BI._[name].apply(BI._, arguments);\r\n        };\r\n    };\r\n    var _applyFunc = function (name) {\r\n        return function () {\r\n            var args = Array.prototype.slice.call(arguments, 0);\r\n            args[1] = BI._.isFunction(args[1]) ? traverse(args[1], args[2]) : args[1];\r\n            return BI._[name].apply(BI._, args);\r\n        };\r\n    };\r\n\r\n    // Utility\r\n    BI._.extend(BI, {\r\n        assert: function (v, is) {\r\n            if (this.isFunction(is)) {\r\n                if (!is(v)) {\r\n                    throw new Error(v + \" error\");\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            if (!this.isArray(is)) {\r\n                is = [is];\r\n            }\r\n            if (!this.deepContains(is, v)) {\r\n                throw new Error(v + \" error\");\r\n            }\r\n            return true;\r\n        },\r\n\r\n        warn: function (message) {\r\n            console.warn(message);\r\n        },\r\n\r\n        UUID: function () {\r\n            var f = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n            var str = \"\";\r\n            for (var i = 0; i < 16; i++) {\r\n                var r = parseInt(f.length * Math.random(), 10);\r\n                str += f[r];\r\n            }\r\n            return str;\r\n        },\r\n\r\n        isWidget: function (widget) {\r\n            return widget instanceof BI.Widget;\r\n        },\r\n\r\n        createWidgets: function (items, options, context) {\r\n            if (!BI.isArray(items)) {\r\n                throw new Error(\"items必须是数组\", items);\r\n            }\r\n            if (BI.isWidget(options)) {\r\n                context = options;\r\n                options = {};\r\n            } else {\r\n                options || (options = {});\r\n            }\r\n            return BI.map(BI.flatten(items), function (i, item) {\r\n                return BI.createWidget(item, BI.deepClone(options), context);\r\n            });\r\n        },\r\n\r\n        createItems: function (data, innerAttr, outerAttr) {\r\n            innerAttr = BI.isArray(innerAttr) ? innerAttr : BI.makeArray(BI.flatten(data).length, innerAttr || {});\r\n            outerAttr = BI.isArray(outerAttr) ? outerAttr : BI.makeArray(BI.flatten(data).length, outerAttr || {});\r\n            return BI.map(data, function (i, item) {\r\n                if (BI.isArray(item)) {\r\n                    return BI.createItems(item, innerAttr, outerAttr);\r\n                }\r\n                if (item instanceof BI.Widget) {\r\n                    return BI.extend({}, innerAttr.shift(), outerAttr.shift(), {\r\n                        type: null,\r\n                        el: item\r\n                    });\r\n                }\r\n                if (innerAttr[0] instanceof BI.Widget) {\r\n                    outerAttr.shift();\r\n                    return BI.extend({}, item, {\r\n                        el: innerAttr.shift()\r\n                    });\r\n                }\r\n                if (item.el instanceof BI.Widget) {\r\n                    innerAttr.shift();\r\n                    return BI.extend({}, outerAttr.shift(), { type: null }, item);\r\n                }\r\n                if (item.el) {\r\n                    return BI.extend({}, outerAttr.shift(), item, {\r\n                        el: BI.extend({}, innerAttr.shift(), item.el)\r\n                    });\r\n                }\r\n                return BI.extend({}, outerAttr.shift(), {\r\n                    el: BI.extend({}, innerAttr.shift(), item)\r\n                });\r\n            });\r\n        },\r\n\r\n        // 用容器包装items\r\n        packageItems: function (items, layouts) {\r\n            for (var i = layouts.length - 1; i >= 0; i--) {\r\n                items = BI.map(items, function (k, it) {\r\n                    return BI.extend({}, layouts[i], {\r\n                        items: [\r\n                            BI.extend({}, layouts[i].el, {\r\n                                el: it\r\n                            })\r\n                        ]\r\n                    });\r\n                });\r\n            }\r\n            return items;\r\n        },\r\n\r\n        formatEL: function (obj) {\r\n            if (obj && !obj.type && obj.el) {\r\n                return obj;\r\n            }\r\n            return {\r\n                el: obj\r\n            };\r\n        },\r\n\r\n        // 剥开EL\r\n        stripEL: function (obj) {\r\n            return obj.type && obj || obj.el || obj;\r\n        },\r\n\r\n        trans2Element: function (widgets) {\r\n            return BI.map(widgets, function (i, wi) {\r\n                return wi.element;\r\n            });\r\n        }\r\n    });\r\n\r\n    // 集合相关方法\r\n    BI._.each([\"where\", \"findWhere\", \"invoke\", \"pluck\", \"shuffle\", \"sample\", \"toArray\", \"size\"], function (name) {\r\n        BI[name] = _apply(name);\r\n    });\r\n    BI._.each([\"get\", \"set\", \"each\", \"map\", \"reduce\", \"reduceRight\", \"find\", \"filter\", \"reject\", \"every\", \"all\", \"some\", \"any\", \"max\", \"min\",\r\n        \"sortBy\", \"groupBy\", \"indexBy\", \"countBy\", \"partition\", \"clamp\"], function (name) {\r\n        if (name === \"any\") {\r\n            BI[name] = _applyFunc(\"some\");\r\n        } else {\r\n            BI[name] = _applyFunc(name);\r\n        }\r\n    });\r\n    BI._.extend(BI, {\r\n        // 数数\r\n        count: function (from, to, predicate) {\r\n            var t;\r\n            if (predicate) {\r\n                for (t = from; t < to; t++) {\r\n                    predicate(t);\r\n                }\r\n            }\r\n            return to - from;\r\n        },\r\n\r\n        // 倒数\r\n        inverse: function (from, to, predicate) {\r\n            return BI.count(to, from, predicate);\r\n        },\r\n\r\n        firstKey: function (obj) {\r\n            var res = undefined;\r\n            BI.any(obj, function (key, value) {\r\n                res = key;\r\n                return true;\r\n            });\r\n            return res;\r\n        },\r\n\r\n        lastKey: function (obj) {\r\n            var res = undefined;\r\n            BI.each(obj, function (key, value) {\r\n                res = key;\r\n                return true;\r\n            });\r\n            return res;\r\n        },\r\n\r\n        firstObject: function (obj) {\r\n            var res = undefined;\r\n            BI.any(obj, function (key, value) {\r\n                res = value;\r\n                return true;\r\n            });\r\n            return res;\r\n        },\r\n\r\n        lastObject: function (obj) {\r\n            var res = undefined;\r\n            BI.each(obj, function (key, value) {\r\n                res = value;\r\n                return true;\r\n            });\r\n            return res;\r\n        },\r\n\r\n        concat: function (obj1, obj2) {\r\n            if (BI.isKey(obj1)) {\r\n                return BI.map([].slice.apply(arguments), function (idx, v) {\r\n                    return v;\r\n                }).join(\"\");\r\n            }\r\n            if (BI.isArray(obj1)) {\r\n                return BI._.concat.apply([], arguments);\r\n            }\r\n            if (BI.isObject(obj1)) {\r\n                return BI._.extend.apply({}, arguments);\r\n            }\r\n        },\r\n\r\n        backEach: function (obj, predicate, context) {\r\n            predicate = BI.iteratee(predicate, context);\r\n            for (var index = obj.length - 1; index >= 0; index--) {\r\n                predicate(index, obj[index], obj);\r\n            }\r\n            return false;\r\n        },\r\n\r\n        backAny: function (obj, predicate, context) {\r\n            predicate = BI.iteratee(predicate, context);\r\n            for (var index = obj.length - 1; index >= 0; index--) {\r\n                if (predicate(index, obj[index], obj)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        backEvery: function (obj, predicate, context) {\r\n            predicate = BI.iteratee(predicate, context);\r\n            for (var index = obj.length - 1; index >= 0; index--) {\r\n                if (!predicate(index, obj[index], obj)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        backFindKey: function (obj, predicate, context) {\r\n            predicate = BI.iteratee(predicate, context);\r\n            var keys = BI._.keys(obj), key;\r\n            for (var i = keys.length - 1; i >= 0; i--) {\r\n                key = keys[i];\r\n                if (predicate(obj[key], key, obj)) {\r\n                    return key;\r\n                }\r\n            }\r\n        },\r\n\r\n        backFind: function (obj, predicate, context) {\r\n            var key;\r\n            if (BI.isArray(obj)) {\r\n                key = BI.findLastIndex(obj, predicate, context);\r\n            } else {\r\n                key = BI.backFindKey(obj, predicate, context);\r\n            }\r\n            if (key !== void 0 && key !== -1) {\r\n                return obj[key];\r\n            }\r\n        },\r\n\r\n        remove: function (obj, target, context) {\r\n            var isFunction = BI.isFunction(target);\r\n            target = isFunction || BI.isArray(target) ? target : [target];\r\n            var i;\r\n            if (BI.isArray(obj)) {\r\n                for (i = 0; i < obj.length; i++) {\r\n                    if ((isFunction && (target === obj[i] || target.apply(context, [i, obj[i]]) === true)) || (!isFunction && BI.contains(target, obj[i]))) {\r\n                        obj.splice(i--, 1);\r\n                    }\r\n                }\r\n            } else {\r\n                BI.each(obj, function (i, v) {\r\n                    if ((isFunction && (target === obj[i] || target.apply(context, [i, obj[i]]) === true)) || (!isFunction && BI.contains(target, obj[i]))) {\r\n                        delete obj[i];\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        removeAt: function (obj, index) {\r\n            index = BI.isArray(index) ? index : [index];\r\n            var isArray = BI.isArray(obj), i;\r\n            for (i = 0; i < index.length; i++) {\r\n                if (isArray) {\r\n                    obj[index[i]] = \"$deleteIndex\";\r\n                } else {\r\n                    delete obj[index[i]];\r\n                }\r\n            }\r\n            if (isArray) {\r\n                BI.remove(obj, \"$deleteIndex\");\r\n            }\r\n        },\r\n\r\n        string2Array: function (str) {\r\n            return str.split(\"&-&\");\r\n        },\r\n\r\n        array2String: function (array) {\r\n            return array.join(\"&-&\");\r\n        },\r\n\r\n        abc2Int: function (str) {\r\n            var idx = 0, start = \"A\", str = str.toUpperCase();\r\n            for (var i = 0, len = str.length; i < len; ++i) {\r\n                idx = str.charAt(i).charCodeAt(0) - start.charCodeAt(0) + 26 * idx + 1;\r\n                if (idx > (2147483646 - str.charAt(i).charCodeAt(0) + start.charCodeAt(0)) / 26) {\r\n                    return 0;\r\n                }\r\n            }\r\n            return idx;\r\n        },\r\n\r\n        int2Abc: function (num) {\r\n            var DIGITS = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\r\n            var idx = num, str = \"\";\r\n            if (num === 0) {\r\n                return \"\";\r\n            }\r\n            while (idx !== 0) {\r\n                var t = idx % 26;\r\n                if (t === 0) {\r\n                    t = 26;\r\n                }\r\n                str = DIGITS[t - 1] + str;\r\n                idx = (idx - t) / 26;\r\n            }\r\n            return str;\r\n        }\r\n    });\r\n\r\n    // 数组相关的方法\r\n    BI._.each([\"first\", \"initial\", \"last\", \"rest\", \"compact\", \"flatten\", \"without\", \"union\", \"intersection\",\r\n        \"difference\", \"zip\", \"unzip\", \"object\", \"indexOf\", \"lastIndexOf\", \"sortedIndex\", \"range\", \"take\", \"takeRight\", \"uniqBy\"], function (name) {\r\n        BI[name] = _apply(name);\r\n    });\r\n    BI._.each([\"findIndex\", \"findLastIndex\"], function (name) {\r\n        BI[name] = _applyFunc(name);\r\n    });\r\n    BI._.extend(BI, {\r\n        // 构建一个长度为length的数组\r\n        makeArray: function (length, value) {\r\n            var res = [];\r\n            for (var i = 0; i < length; i++) {\r\n                if (BI.isNull(value)) {\r\n                    res.push(i);\r\n                } else {\r\n                    res.push(BI.deepClone(value));\r\n                }\r\n            }\r\n            return res;\r\n        },\r\n\r\n        makeObject: function (array, value) {\r\n            var map = {};\r\n            for (var i = 0; i < array.length; i++) {\r\n                if (BI.isNull(value)) {\r\n                    map[array[i]] = array[i];\r\n                } else if (BI.isFunction(value)) {\r\n                    map[array[i]] = value(i, array[i]);\r\n                } else {\r\n                    map[array[i]] = BI.deepClone(value);\r\n                }\r\n            }\r\n            return map;\r\n        },\r\n\r\n        makeArrayByArray: function (array, value) {\r\n            var res = [];\r\n            if (!array) {\r\n                return res;\r\n            }\r\n            for (var i = 0, len = array.length; i < len; i++) {\r\n                if (BI.isArray(array[i])) {\r\n                    res.push(BI.makeArrayByArray(array[i], value));\r\n                } else {\r\n                    res.push(BI.deepClone(value));\r\n                }\r\n            }\r\n            return res;\r\n        },\r\n\r\n        uniq: function (array, isSorted, iteratee, context) {\r\n            if (array == null) {\r\n                return [];\r\n            }\r\n            if (!BI._.isBoolean(isSorted)) {\r\n                context = iteratee;\r\n                iteratee = isSorted;\r\n                isSorted = false;\r\n            }\r\n            iteratee && (iteratee = traverse(iteratee, context));\r\n            return BI._.uniq.call(BI._, array, isSorted, iteratee, context);\r\n        }\r\n    });\r\n\r\n    // 对象相关方法\r\n    BI._.each([\"keys\", \"allKeys\", \"values\", \"pairs\", \"invert\", \"create\", \"functions\", \"extend\", \"extendOwn\",\r\n        \"defaults\", \"clone\", \"property\", \"propertyOf\", \"matcher\", \"isEqual\", \"isMatch\", \"isEmpty\",\r\n        \"isElement\", \"isNumber\", \"isString\", \"isArray\", \"isObject\", \"isPlainObject\", \"isArguments\", \"isFunction\", \"isFinite\",\r\n        \"isBoolean\", \"isDate\", \"isRegExp\", \"isError\", \"isNaN\", \"isUndefined\", \"zipObject\", \"cloneDeep\"], function (name) {\r\n        BI[name] = _apply(name);\r\n    });\r\n    BI._.each([\"mapObject\", \"findKey\", \"pick\", \"omit\", \"tap\"], function (name) {\r\n        BI[name] = _applyFunc(name);\r\n    });\r\n    BI._.extend(BI, {\r\n\r\n        inherit: function (sp, overrides) {\r\n            var sb = function () {\r\n                return sp.apply(this, arguments);\r\n            };\r\n            var F = function () {\r\n            }, spp = sp.prototype;\r\n            F.prototype = spp;\r\n            sb.prototype = new F();\r\n            sb.superclass = spp;\r\n            BI._.extend(sb.prototype, overrides, {\r\n                superclass: sp\r\n            });\r\n            return sb;\r\n        },\r\n\r\n        init: function () {\r\n            // 先把准备环境准备好\r\n            while (BI.prepares && BI.prepares.length > 0) {\r\n                BI.prepares.shift()();\r\n            }\r\n            while (_global.___fineuiExposedFunction && _global.___fineuiExposedFunction.length > 0) {\r\n                _global.___fineuiExposedFunction.shift()();\r\n            }\r\n            BI.initialized = true;\r\n        },\r\n\r\n        has: function (obj, keys) {\r\n            if (BI.isArray(keys)) {\r\n                if (keys.length === 0) {\r\n                    return false;\r\n                }\r\n                return BI.every(keys, function (i, key) {\r\n                    return BI._.has(obj, key);\r\n                });\r\n            }\r\n            return BI._.has.apply(BI._, arguments);\r\n        },\r\n\r\n        freeze: function (value) {\r\n            // 在ES5中，如果这个方法的参数不是一个对象（一个原始值），那么它会导致 TypeError\r\n            // 在ES2015中，非对象参数将被视为要被冻结的普通对象，并被简单地返回\r\n            if (Object.freeze && BI.isObject(value)) {\r\n                return Object.freeze(value);\r\n            }\r\n            return value;\r\n        },\r\n\r\n        // 数字和字符串可以作为key\r\n        isKey: function (key) {\r\n            return BI.isNumber(key) || (BI.isString(key) && key.length > 0);\r\n        },\r\n\r\n        // 忽略大小写的等于\r\n        isCapitalEqual: function (a, b) {\r\n            a = BI.isNull(a) ? a : (\"\" + a).toLowerCase();\r\n            b = BI.isNull(b) ? b : (\"\" + b).toLowerCase();\r\n            return BI.isEqual(a, b);\r\n        },\r\n\r\n        isWidthOrHeight: function (w) {\r\n            if (typeof w === \"number\") {\r\n                return w >= 0;\r\n            } else if (typeof w === \"string\") {\r\n                return /^\\d{1,3}(\\.\\d)?%$/.test(w) || w === \"auto\" || /^\\d+(\\.\\d+)?px$/.test(w) || /^calc/.test(w);\r\n            }\r\n        },\r\n\r\n        isNotNull: function (obj) {\r\n            return !BI.isNull(obj);\r\n        },\r\n\r\n        isNull: function (obj) {\r\n            return typeof obj === \"undefined\" || obj === null;\r\n        },\r\n\r\n        isEmptyArray: function (arr) {\r\n            return BI.isArray(arr) && BI.isEmpty(arr);\r\n        },\r\n\r\n        isNotEmptyArray: function (arr) {\r\n            return BI.isArray(arr) && !BI.isEmpty(arr);\r\n        },\r\n\r\n        isEmptyObject: function (obj) {\r\n            return BI.isEqual(obj, {});\r\n        },\r\n\r\n        isNotEmptyObject: function (obj) {\r\n            return BI.isPlainObject(obj) && !BI.isEmptyObject(obj);\r\n        },\r\n\r\n        isEmptyString: function (obj) {\r\n            return BI.isString(obj) && obj.length === 0;\r\n        },\r\n\r\n        isNotEmptyString: function (obj) {\r\n            return BI.isString(obj) && !BI.isEmptyString(obj);\r\n        },\r\n\r\n        isWindow: function (obj) {\r\n            return obj != null && obj == obj.window;\r\n        },\r\n\r\n        isPromise: function (obj) {\r\n            return !!obj && (BI.isObject(obj) || BI.isFunction(obj)) && BI.isFunction(obj.then);\r\n        }\r\n    });\r\n\r\n    // deep方法\r\n    BI._.extend(BI, {\r\n        deepClone: BI._.cloneDeep,\r\n        deepExtend: BI._.merge,\r\n\r\n        isDeepMatch: function (object, attrs) {\r\n            var keys = BI.keys(attrs), length = keys.length;\r\n            if (object == null) {\r\n                return !length;\r\n            }\r\n            var obj = Object(object);\r\n            for (var i = 0; i < length; i++) {\r\n                var key = keys[i];\r\n                if (!BI.isEqual(attrs[key], obj[key]) || !(key in obj)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        contains: function (obj, target, fromIndex) {\r\n            if (!BI._.isArrayLike(obj)) obj = BI._.values(obj);\r\n            return BI._.indexOf(obj, target, typeof fromIndex === \"number\" && fromIndex) >= 0;\r\n        },\r\n\r\n        deepContains: function (obj, copy) {\r\n            if (BI.isObject(copy)) {\r\n                return BI.any(obj, function (i, v) {\r\n                    if (BI.isEqual(v, copy)) {\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n            return BI.contains(obj, copy);\r\n        },\r\n\r\n        deepIndexOf: function (obj, target) {\r\n            for (var i = 0; i < obj.length; i++) {\r\n                if (BI.isEqual(target, obj[i])) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        },\r\n\r\n        deepRemove: function (obj, target) {\r\n            var done = false;\r\n            var i;\r\n            if (BI.isArray(obj)) {\r\n                for (i = 0; i < obj.length; i++) {\r\n                    if (BI.isEqual(target, obj[i])) {\r\n                        obj.splice(i--, 1);\r\n                        done = true;\r\n                    }\r\n                }\r\n            } else {\r\n                BI.each(obj, function (i, v) {\r\n                    if (BI.isEqual(target, obj[i])) {\r\n                        delete obj[i];\r\n                        done = true;\r\n                    }\r\n                });\r\n            }\r\n            return done;\r\n        },\r\n\r\n        deepWithout: function (obj, target) {\r\n            if (BI.isArray(obj)) {\r\n                var result = [];\r\n                for (var i = 0; i < obj.length; i++) {\r\n                    if (!BI.isEqual(target, obj[i])) {\r\n                        result.push(obj[i]);\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n            var result = {};\r\n            BI.each(obj, function (i, v) {\r\n                if (!BI.isEqual(target, obj[i])) {\r\n                    result[i] = v;\r\n                }\r\n            });\r\n            return result;\r\n\r\n        },\r\n\r\n        deepUnique: function (array) {\r\n            var result = [];\r\n            BI.each(array, function (i, item) {\r\n                if (!BI.deepContains(result, item)) {\r\n                    result.push(item);\r\n                }\r\n            });\r\n            return result;\r\n        },\r\n\r\n        // 比较两个对象得出不一样的key值\r\n        deepDiff: function (object, other) {\r\n            object || (object = {});\r\n            other || (other = {});\r\n            var result = [];\r\n            var used = [];\r\n            for (var b in object) {\r\n                if (this.has(object, b)) {\r\n                    if (!this.isEqual(object[b], other[b])) {\r\n                        result.push(b);\r\n                    }\r\n                    used.push(b);\r\n                }\r\n            }\r\n            for (var b in other) {\r\n                if (this.has(other, b) && !BI.contains(used, b)) {\r\n                    result.push(b);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    });\r\n\r\n    // 通用方法\r\n    BI._.each([\"uniqueId\", \"result\", \"chain\", \"iteratee\", \"escape\", \"unescape\", \"before\", \"after\", \"chunk\"], function (name) {\r\n        BI[name] = function () {\r\n            return BI._[name].apply(BI._, arguments);\r\n        };\r\n    });\r\n\r\n    // 事件相关方法\r\n    BI._.each([\"bind\", \"once\", \"partial\", \"debounce\", \"throttle\", \"delay\", \"defer\", \"wrap\"], function (name) {\r\n        BI[name] = function () {\r\n            return BI._[name].apply(BI._, arguments);\r\n        };\r\n    });\r\n\r\n    BI._.extend(BI, {\r\n        nextTick: (function () {\r\n            var callbacks = [];\r\n            var pending = false;\r\n            var timerFunc = void 0;\r\n\r\n            function nextTickHandler() {\r\n                pending = false;\r\n                var copies = callbacks.slice(0);\r\n                callbacks.length = 0;\r\n                for (var i = 0; i < copies.length; i++) {\r\n                    copies[i]();\r\n                }\r\n            }\r\n\r\n            if (typeof Promise !== \"undefined\") {\r\n                var p = Promise.resolve();\r\n                timerFunc = function timerFunc() {\r\n                    p.then(nextTickHandler);\r\n                };\r\n            } else if (typeof MutationObserver !== \"undefined\") {\r\n                var counter = 1;\r\n                var observer = new MutationObserver(nextTickHandler);\r\n                var textNode = document.createTextNode(String(counter));\r\n                observer.observe(textNode, {\r\n                    characterData: true\r\n                });\r\n                timerFunc = function timerFunc() {\r\n                    counter = (counter + 1) % 2;\r\n                    textNode.data = String(counter);\r\n                };\r\n            } else if (typeof setImmediate !== \"undefined\") {\r\n                timerFunc = function timerFunc() {\r\n                    setImmediate(nextTickHandler);\r\n                };\r\n            } else {\r\n                // Fallback to setTimeout.\r\n                timerFunc = function timerFunc() {\r\n                    setTimeout(nextTickHandler, 0);\r\n                };\r\n            }\r\n\r\n            return function queueNextTick(cb) {\r\n                var _resolve = void 0;\r\n                var args = [].slice.call(arguments, 1);\r\n                callbacks.push(function () {\r\n                    if (cb) {\r\n                        try {\r\n                            cb.apply(null, args);\r\n                        } catch (e) {\r\n                            console.error(e);\r\n                        }\r\n                    } else if (_resolve) {\r\n                        _resolve.apply(null, args);\r\n                    }\r\n                });\r\n                if (!pending) {\r\n                    pending = true;\r\n                    timerFunc();\r\n                }\r\n                // $flow-disable-line\r\n                if (!cb && typeof Promise !== 'undefined') {\r\n                    return new Promise(function (resolve, reject) {\r\n                        _resolve = resolve;\r\n                    });\r\n                }\r\n            };\r\n        })()\r\n    });\r\n\r\n    // 数字相关方法\r\n    BI._.each([\"random\"], function (name) {\r\n        BI[name] = _apply(name);\r\n    });\r\n    BI._.extend(BI, {\r\n\r\n        parseInt: function (number) {\r\n            var radix = 10;\r\n            if (/^0x/g.test(number)) {\r\n                radix = 16;\r\n            }\r\n            try {\r\n                return parseInt(number, radix);\r\n            } catch (e) {\r\n                throw new Error(number + \"parse int error\");\r\n                return NaN;\r\n            }\r\n        },\r\n\r\n        parseSafeInt: function (value) {\r\n            var MAX_SAFE_INTEGER = 9007199254740991;\r\n            return value\r\n                ? this.clamp(this.parseInt(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\r\n                : (value === 0 ? value : 0);\r\n        },\r\n\r\n        parseFloat: function (number) {\r\n            try {\r\n                return parseFloat(number);\r\n            } catch (e) {\r\n                throw new Error(number + \"parse float error\");\r\n                return NaN;\r\n            }\r\n        },\r\n\r\n        isNaturalNumber: function (number) {\r\n            if (/^\\d+$/.test(number)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        isPositiveInteger: function (number) {\r\n            if (/^\\+?[1-9][0-9]*$/.test(number)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        isNegativeInteger: function (number) {\r\n            if (/^\\-[1-9][0-9]*$/.test(number)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        isInteger: function (number) {\r\n            if (/^\\-?\\d+$/.test(number)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        isNumeric: function (number) {\r\n            return !isNaN(parseFloat(number)) && isFinite(number);\r\n        },\r\n\r\n        isFloat: function (number) {\r\n            if (/^([+-]?)\\d*\\.\\d+$/.test(number)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        isOdd: function (number) {\r\n            if (!BI.isInteger(number)) {\r\n                return false;\r\n            }\r\n            return (number & 1) === 1;\r\n        },\r\n\r\n        isEven: function (number) {\r\n            if (!BI.isInteger(number)) {\r\n                return false;\r\n            }\r\n            return (number & 1) === 0;\r\n        },\r\n\r\n        sum: function (array, iteratee, context) {\r\n            var sum = 0;\r\n            BI.each(array, function (i, item) {\r\n                if (iteratee) {\r\n                    sum += Number(iteratee.apply(context, [i, item]));\r\n                } else {\r\n                    sum += Number(item);\r\n                }\r\n            });\r\n            return sum;\r\n        },\r\n\r\n        average: function (array, iteratee, context) {\r\n            var sum = BI.sum(array, iteratee, context);\r\n            return sum / array.length;\r\n        }\r\n    });\r\n\r\n    // 字符串相关方法\r\n    BI._.extend(BI, {\r\n        trim: function () {\r\n            return BI._.trim.apply(BI._, arguments);\r\n        },\r\n\r\n        toUpperCase: function (string) {\r\n            return (string + \"\").toLocaleUpperCase();\r\n        },\r\n\r\n        toLowerCase: function (string) {\r\n            return (string + \"\").toLocaleLowerCase();\r\n        },\r\n\r\n        isEndWithBlank: function (string) {\r\n            return /(\\s|\\u00A0)$/.test(string);\r\n        },\r\n\r\n        isLiteral: function (exp) {\r\n            var literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\r\n            return literalValueRE.test(exp);\r\n        },\r\n\r\n        stripQuotes: function (str) {\r\n            var a = str.charCodeAt(0);\r\n            var b = str.charCodeAt(str.length - 1);\r\n            return a === b && (a === 0x22 || a === 0x27)\r\n                ? str.slice(1, -1)\r\n                : str;\r\n        },\r\n\r\n        // background-color => backgroundColor\r\n        camelize: function (str) {\r\n            return str.replace(/-(.)/g, function (_, character) {\r\n                return character.toUpperCase();\r\n            });\r\n        },\r\n\r\n        // backgroundColor => background-color\r\n        hyphenate: function (str) {\r\n            return str.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n        },\r\n\r\n        isNotEmptyString: function (str) {\r\n            return BI.isString(str) && !BI.isEmpty(str);\r\n        },\r\n\r\n        isEmptyString: function (str) {\r\n            return BI.isString(str) && BI.isEmpty(str);\r\n        },\r\n\r\n        /**\r\n         * 通用加密方法\r\n         */\r\n        encrypt: function (type, text, key) {\r\n            switch (type) {\r\n                case BI.CRYPT_TYPE.AES:\r\n                default:\r\n                    return BI.aesEncrypt(text, key);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 通用解密方法\r\n         * @param type 解密方式\r\n         * @param text 文本\r\n         * @param key 种子\r\n         * @return {*}\r\n         */\r\n        decrypt: function (type, text, key) {\r\n            switch (type) {\r\n                case BI.CRYPT_TYPE.AES:\r\n                default:\r\n                    return BI.aesDecrypt(text, key);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 对字符串中的'和\\做编码处理\r\n         * @static\r\n         * @param {String} string 要做编码处理的字符串\r\n         * @return {String} 编码后的字符串\r\n         */\r\n        escape: function (string) {\r\n            return string.replace(/('|\\\\)/g, \"\\\\$1\");\r\n        },\r\n\r\n        /**\r\n         * 让字符串通过指定字符做补齐的函数\r\n         *\r\n         *      var s = BI.leftPad('123', 5, '0');//s的值为：'00123'\r\n         *\r\n         * @static\r\n         * @param {String} val 原始值\r\n         * @param {Number} size 总共需要的位数\r\n         * @param {String} ch 用于补齐的字符\r\n         * @return {String}  补齐后的字符串\r\n         */\r\n        leftPad: function (val, size, ch) {\r\n            var result = String(val);\r\n            if (!ch) {\r\n                ch = \" \";\r\n            }\r\n            while (result.length < size) {\r\n                result = ch + result;\r\n            }\r\n            return result.toString();\r\n        },\r\n\r\n        /**\r\n         * 对字符串做替换的函数\r\n         *\r\n         *      var cls = 'my-class', text = 'Some text';\r\n         *      var res = BI.format('<div class=\"{0}\">{1}</div>', cls, text);\r\n         *      //res的值为：'<div class=\"my-class\">Some text</div>';\r\n         *\r\n         * @static\r\n         * @param {String} format 要做替换的字符串，替换字符串1，替换字符串2...\r\n         * @return {String} 做了替换后的字符串\r\n         */\r\n        format: function (format) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n            return format.replace(/\\{(\\d+)\\}/g, function (m, i) {\r\n                return args[i];\r\n            });\r\n        }\r\n    });\r\n\r\n    // 日期相关方法\r\n    BI._.extend(BI, {\r\n        /**\r\n         * 是否是闰年\r\n         * @param year\r\n         * @returns {boolean}\r\n         */\r\n        isLeapYear: function (year) {\r\n            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n        },\r\n\r\n        /**\r\n         * 检测是否在有效期\r\n         *\r\n         * @param YY 年\r\n         * @param MM 月\r\n         * @param DD 日\r\n         * @param minDate '1900-01-01'\r\n         * @param maxDate '2099-12-31'\r\n         * @returns {Array} 若无效返回无效状态,数组第一位为无效属性,第二位缺省为超下限,1为超上限\r\n         */\r\n        checkDateVoid: function (YY, MM, DD, minDate, maxDate) {\r\n            var back = [];\r\n            YY = YY | 0;\r\n            MM = MM | 0;\r\n            DD = DD | 0;\r\n            minDate = BI.isString(minDate) ? minDate.match(/\\d+/g) : minDate;\r\n            maxDate = BI.isString(maxDate) ? maxDate.match(/\\d+/g) : maxDate;\r\n            if (YY < minDate[0]) {\r\n                back = [\"y\"];\r\n            } else if (YY > maxDate[0]) {\r\n                back = [\"y\", 1];\r\n            } else if (YY >= minDate[0] && YY <= maxDate[0]) {\r\n                if (YY == minDate[0]) {\r\n                    if (MM < minDate[1]) {\r\n                        back = [\"m\"];\r\n                    } else if (MM == minDate[1]) {\r\n                        if (DD < minDate[2]) {\r\n                            back = [\"d\"];\r\n                        }\r\n                    }\r\n                }\r\n                if (YY == maxDate[0]) {\r\n                    if (MM > maxDate[1]) {\r\n                        back = [\"m\", 1];\r\n                    } else if (MM == maxDate[1]) {\r\n                        if (DD > maxDate[2]) {\r\n                            back = [\"d\", 1];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return back;\r\n        },\r\n\r\n        checkDateLegal: function (str) {\r\n            var ar = str.match(/\\d+/g);\r\n            var YY = ar[0] | 0, MM = ar[1] | 0, DD = ar[2] | 0;\r\n            if (ar.length <= 1) {\r\n                return true;\r\n            }\r\n            if (ar.length <= 2) {\r\n                return MM >= 1 && MM <= 12;\r\n            }\r\n            var MD = BI.Date._MD.slice(0);\r\n            MD[1] = BI.isLeapYear(YY) ? 29 : 28;\r\n            return MM >= 1 && MM <= 12 && DD <= MD[MM - 1];\r\n        },\r\n\r\n        parseDateTime: function (str, fmt) {\r\n            var today = BI.getDate();\r\n            var y = 0;\r\n            var m = 0;\r\n            var d = 1;\r\n            // wei : 对于fmt为‘YYYYMM’或者‘YYYYMMdd’的格式，str的值为类似'201111'的形式，因为年月之间没有分隔符，所以正则表达式分割无效，导致bug7376。\r\n            var a = str.split(/\\W+/);\r\n            if (fmt.toLowerCase() == \"%y%x\" || fmt.toLowerCase() == \"%y%x%d\") {\r\n                var yearlength = 4;\r\n                var otherlength = 2;\r\n                a[0] = str.substring(0, yearlength);\r\n                a[1] = str.substring(yearlength, yearlength + otherlength);\r\n                a[2] = str.substring(yearlength + otherlength, yearlength + otherlength * 2);\r\n            }\r\n            var b = fmt.match(/%./g);\r\n            var i = 0, j = 0;\r\n            var hr = 0;\r\n            var min = 0;\r\n            var sec = 0;\r\n            for (i = 0; i < a.length; ++i) {\r\n                switch (b[i]) {\r\n                    case \"%d\":\r\n                    case \"%e\":\r\n                        d = parseInt(a[i], 10);\r\n                        break;\r\n\r\n                    case \"%X\":\r\n                        m = parseInt(a[i], 10) - 1;\r\n                        break;\r\n                    case \"%x\":\r\n                        m = parseInt(a[i], 10) - 1;\r\n                        break;\r\n\r\n                    case \"%Y\":\r\n                    case \"%y\":\r\n                        y = parseInt(a[i], 10);\r\n                        (y < 100) && (y += (y > 29) ? 1900 : 2000);\r\n                        break;\r\n\r\n                    case \"%b\":\r\n                    case \"%B\":\r\n                        for (j = 0; j < 12; ++j) {\r\n                            if (BI.getMonthName(j).substr(0, a[i].length).toLowerCase() == a[i].toLowerCase()) {\r\n                                m = j;\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    case \"%H\":\r\n                    case \"%I\":\r\n                    case \"%k\":\r\n                    case \"%l\":\r\n                        hr = parseInt(a[i], 10);\r\n                        break;\r\n\r\n                    case \"%P\":\r\n                    case \"%p\":\r\n                        if (/pm/i.test(a[i]) && hr < 12) {\r\n                            hr += 12;\r\n                        } else if (/am/i.test(a[i]) && hr >= 12) {\r\n                            hr -= 12;\r\n                        }\r\n                        break;\r\n                    case \"%Q\":\r\n                    case \"%q\":\r\n                        m = (parseInt(a[i], 10) - 1) * 3;\r\n                        break;\r\n                    case \"%M\":\r\n                        min = parseInt(a[i], 10);\r\n                        break;\r\n                    case \"%S\":\r\n                        sec = parseInt(a[i], 10);\r\n                        break;\r\n                }\r\n            }\r\n            //    if (!a[i]) {\r\n            //        continue;\r\n            //\t}\r\n            if (isNaN(y)) {\r\n                y = today.getFullYear();\r\n            }\r\n            if (isNaN(m)) {\r\n                m = today.getMonth();\r\n            }\r\n            if (isNaN(d)) {\r\n                d = today.getDate();\r\n            }\r\n            if (isNaN(hr)) {\r\n                hr = today.getHours();\r\n            }\r\n            if (isNaN(min)) {\r\n                min = today.getMinutes();\r\n            }\r\n            if (isNaN(sec)) {\r\n                sec = today.getSeconds();\r\n            }\r\n            if (y != 0) {\r\n                return BI.getDate(y, m, d, hr, min, sec);\r\n            }\r\n            y = 0;\r\n            m = -1;\r\n            d = 0;\r\n            for (i = 0; i < a.length; ++i) {\r\n                if (a[i].search(/[a-zA-Z]+/) != -1) {\r\n                    var t = -1;\r\n                    for (j = 0; j < 12; ++j) {\r\n                        if (BI.getMonthName(j).substr(0, a[i].length).toLowerCase() == a[i].toLowerCase()) {\r\n                            t = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (t != -1) {\r\n                        if (m != -1) {\r\n                            d = m + 1;\r\n                        }\r\n                        m = t;\r\n                    }\r\n                } else if (parseInt(a[i], 10) <= 12 && m == -1) {\r\n                    m = a[i] - 1;\r\n                } else if (parseInt(a[i], 10) > 31 && y == 0) {\r\n                    y = parseInt(a[i], 10);\r\n                    (y < 100) && (y += (y > 29) ? 1900 : 2000);\r\n                } else if (d == 0) {\r\n                    d = a[i];\r\n                }\r\n            }\r\n            if (y == 0) {\r\n                y = today.getFullYear();\r\n            }\r\n            if (m === -1) {\r\n                m = today.getMonth();\r\n            }\r\n            if (m != -1 && d != 0) {\r\n                return BI.getDate(y, m, d, hr, min, sec);\r\n            }\r\n            return today;\r\n        },\r\n\r\n        getDate: function () {\r\n            var length = arguments.length;\r\n            var args = arguments;\r\n            var dt;\r\n            switch (length) {\r\n                // new Date()\r\n                case 0:\r\n                    dt = new Date();\r\n                    break;\r\n                // new Date(long)\r\n                case 1:\r\n                    dt = new Date(args[0]);\r\n                    break;\r\n                // new Date(year, month)\r\n                case 2:\r\n                    dt = new Date(args[0], args[1]);\r\n                    break;\r\n                // new Date(year, month, day)\r\n                case 3:\r\n                    dt = new Date(args[0], args[1], args[2]);\r\n                    break;\r\n                // new Date(year, month, day, hour)\r\n                case 4:\r\n                    dt = new Date(args[0], args[1], args[2], args[3]);\r\n                    break;\r\n                // new Date(year, month, day, hour, minute)\r\n                case 5:\r\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4]);\r\n                    break;\r\n                // new Date(year, month, day, hour, minute, second)\r\n                case 6:\r\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4], args[5]);\r\n                    break;\r\n                // new Date(year, month, day, hour, minute, second, millisecond)\r\n                case 7:\r\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\r\n                    break;\r\n                default:\r\n                    dt = new Date();\r\n                    break;\r\n            }\r\n            if (BI.isNotNull(BI.timeZone) && (arguments.length === 0 || (arguments.length === 1 && BI.isNumber(arguments[0])))) {\r\n                var localTime = dt.getTime();\r\n                // BI-33791 1901年以前的东8区标准是GMT+0805, 统一无论是什么时间，都以整的0800这样的为基准\r\n                var localOffset = dt.getTimezoneOffset() * 60000; // 获得当地时间偏移的毫秒数\r\n                var utc = localTime + localOffset; // utc即GMT时间标准时区\r\n                return new Date(utc + BI.timeZone);// + Pool.timeZone.offset);\r\n            }\r\n            return dt;\r\n\r\n        },\r\n\r\n        getTime: function () {\r\n            var length = arguments.length;\r\n            var args = arguments;\r\n            var dt;\r\n            switch (length) {\r\n                // new Date()\r\n                case 0:\r\n                    dt = new Date();\r\n                    break;\r\n                // new Date(long)\r\n                case 1:\r\n                    dt = new Date(args[0]);\r\n                    break;\r\n                // new Date(year, month)\r\n                case 2:\r\n                    dt = new Date(args[0], args[1]);\r\n                    break;\r\n                // new Date(year, month, day)\r\n                case 3:\r\n                    dt = new Date(args[0], args[1], args[2]);\r\n                    break;\r\n                // new Date(year, month, day, hour)\r\n                case 4:\r\n                    dt = new Date(args[0], args[1], args[2], args[3]);\r\n                    break;\r\n                // new Date(year, month, day, hour, minute)\r\n                case 5:\r\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4]);\r\n                    break;\r\n                // new Date(year, month, day, hour, minute, second)\r\n                case 6:\r\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4], args[5]);\r\n                    break;\r\n                // new Date(year, month, day, hour, minute, second, millisecond)\r\n                case 7:\r\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\r\n                    break;\r\n                default:\r\n                    dt = new Date();\r\n                    break;\r\n            }\r\n            if (BI.isNotNull(BI.timeZone)) {\r\n                // BI-33791 1901年以前的东8区标准是GMT+0805, 统一无论是什么时间，都以整的0800这样的为基准\r\n                return dt.getTime() - BI.timeZone - new Date().getTimezoneOffset() * 60000;\r\n            }\r\n            return dt.getTime();\r\n\r\n        }\r\n    });\r\n})();\r\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","!(function () {\r\n    function extend() {\r\n        var target = arguments[0] || {}, length = arguments.length, i = 1, options, name, src, copy;\r\n        for (; i < length; i++) {\r\n            // Only deal with non-null/undefined values\r\n            if ((options = arguments[i]) != null) {\r\n                // Extend the base object\r\n                for (name in options) {\r\n                    src = target[name];\r\n                    copy = options[name];\r\n\r\n                    // Prevent never-ending loop\r\n                    if (target === copy) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (copy !== undefined) {\r\n                        target[name] = copy;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    /**\r\n     * 客户端观察者，主要处理事件的添加、删除、执行等\r\n     * @class BI.OB\r\n     * @abstract\r\n     */\r\n    var OB = function (config) {\r\n        this._constructor(config);\r\n    };\r\n    BI._.extend(OB.prototype, {\r\n        props: {},\r\n\r\n        init: null,\r\n\r\n        destroyed: null,\r\n\r\n        _constructor: function (config) {\r\n            this._initProps(config);\r\n            this._init();\r\n            this._initRef();\r\n        },\r\n\r\n        _defaultConfig: function (config) {\r\n            return {};\r\n        },\r\n\r\n        _initProps: function (config) {\r\n            var props = this.props;\r\n            if (BI.isFunction(this.props)) {\r\n                props = this.props(config);\r\n            }\r\n            var defaultProps = extend(this._defaultConfig(config), props);\r\n            var modifiedDefaultProps = (config && config.type && BI.OB.configFunctions[config.type + \".props\"]) ? BI.reduce(BI.OB.configFunctions[config.type + \".props\"], function (value, conf, index) {\r\n                return extend(conf, value.fn(defaultProps, config, value.opt));\r\n            }, {}) : null;\r\n            this.options = extend(defaultProps, modifiedDefaultProps, config);\r\n        },\r\n\r\n        _init: function () {\r\n            this._initListeners();\r\n            this.init && this.init();\r\n        },\r\n\r\n        _initListeners: function () {\r\n            var self = this;\r\n            if (this.options.listeners != null) {\r\n                BI._.each(this.options.listeners, function (lis, eventName) {\r\n                    if (BI._.isFunction(lis)) {\r\n                        self.on(eventName, lis);\r\n                        return;\r\n                    }\r\n                    if (BI._.isArray(lis)) {\r\n                        BI._.each(lis, function (l) {\r\n                            self.on(eventName, l);\r\n                        });\r\n                        return;\r\n                    }\r\n                    (lis.target ? lis.target : self)[lis.once ? \"once\" : \"on\"](lis.eventName, BI._.bind(lis.action, self));\r\n                });\r\n                delete this.options.listeners;\r\n            }\r\n        },\r\n\r\n        // 获得一个当前对象的引用\r\n        _initRef: function () {\r\n            var o = this.options;\r\n            if (o.__ref) {\r\n                BI.isFunction(o.__ref) ? o.__ref.call(this, this) : o.__ref.current = this;\r\n            }\r\n            if (o.ref) {\r\n                BI.isFunction(o.ref) ? o.ref.call(this, this) : o.ref.current = this;\r\n            }\r\n        },\r\n\r\n        //释放当前对象\r\n        _purgeRef: function () {\r\n            var o = this.options;\r\n            if (o.__ref) {\r\n                BI.isFunction(o.__ref) ? o.__ref.call(null, null) : o.__ref.current = null;\r\n                o.__ref = null;\r\n            }\r\n            if (o.ref) {\r\n                BI.isFunction(o.ref) ? o.ref.call(null, null) : o.ref.current = null;\r\n                o.ref = null;\r\n            }\r\n        },\r\n\r\n        _getEvents: function () {\r\n            if (!BI._.isObject(this.events)) {\r\n                this.events = {};\r\n            }\r\n            return this.events;\r\n        },\r\n\r\n        /**\r\n         * 给观察者绑定一个事件\r\n         * @param {String} eventName 事件的名字\r\n         * @param {Function} fn 事件对应的执行函数\r\n         */\r\n        on: function (eventName, fn) {\r\n            var self = this;\r\n            eventName = eventName.toLowerCase();\r\n            var fns = this._getEvents()[eventName];\r\n            if (!BI._.isArray(fns)) {\r\n                fns = [];\r\n                this._getEvents()[eventName] = fns;\r\n            }\r\n            fns.push(fn);\r\n\r\n            return function () {\r\n                self.un(eventName, fn);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * 给观察者绑定一个只执行一次的事件\r\n         * @param {String} eventName 事件的名字\r\n         * @param {Function} fn 事件对应的执行函数\r\n         */\r\n        once: function (eventName, fn) {\r\n            var proxy = function () {\r\n                fn.apply(this, arguments);\r\n                this.un(eventName, proxy);\r\n            };\r\n            this.on(eventName, proxy);\r\n        },\r\n\r\n        /**\r\n         * 解除观察者绑定的指定事件\r\n         * @param {String} eventName 要解除绑定事件的名字\r\n         * @param {Function} fn 事件对应的执行函数，该参数是可选的，没有该参数时，将解除绑定所有同名字的事件\r\n         */\r\n        un: function (eventName, fn) {\r\n            eventName = eventName.toLowerCase();\r\n\r\n            /* alex:如果fn是null,就是把eventName上面所有方法都un掉*/\r\n            if (fn == null) {\r\n                delete this._getEvents()[eventName];\r\n            } else {\r\n                var fns = this._getEvents()[eventName];\r\n                if (BI._.isArray(fns)) {\r\n                    var newFns = [];\r\n                    BI._.each(fns, function (ifn) {\r\n                        if (ifn != fn) {\r\n                            newFns.push(ifn);\r\n                        }\r\n                    });\r\n                    this._getEvents()[eventName] = newFns;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 清除观察者的所有事件绑定\r\n         */\r\n        purgeListeners: function () {\r\n            /* alex:清空events*/\r\n            this.events = {};\r\n        },\r\n\r\n        /**\r\n         * 触发绑定过的事件\r\n         *\r\n         * @param {String} eventName 要触发的事件的名字\r\n         * @returns {Boolean} 如果事件函数返回false，则返回false并中断其他同名事件的执行，否则执行所有的同名事件并返回true\r\n         */\r\n        fireEvent: function () {\r\n            var eventName = arguments[0].toLowerCase();\r\n            var fns = this._getEvents()[eventName];\r\n            if (BI.isArray(fns)) {\r\n                if (BI.isArguments(arguments[1])) {\r\n                    for (var i = 0; i < fns.length; i++) {\r\n                        if (fns[i].apply(this, arguments[1]) === false) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    var args = Array.prototype.slice.call(arguments, 1);\r\n                    for (var i = 0; i < fns.length; i++) {\r\n                        if (fns[i].apply(this, args) === false) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        destroy: function () {\r\n            this.destroyed && this.destroyed();\r\n            this._purgeRef();\r\n            this.purgeListeners();\r\n        }\r\n    });\r\n    BI.OB = BI.OB || OB;\r\n})();\r\n","(function () {\r\n    var moduleInjection = {}, moduleInjectionMap = {\r\n        components: {},\r\n        constants: {},\r\n        stores: {},\r\n        services: {},\r\n        models: {},\r\n        providers: {}\r\n    };\r\n    BI.module = BI.module || function (xtype, cls) {\r\n        if (moduleInjection[xtype] != null) {\r\n            _global.console && console.error(\"module： [\" + xtype + \"] 已经注册过了\");\r\n        } else {\r\n            if (BI.isFunction(cls)) {\r\n                cls = cls();\r\n            }\r\n            for (var k in moduleInjectionMap) {\r\n                if (cls[k]) {\r\n                    for (var key in cls[k]) {\r\n                        if (!moduleInjectionMap[k]) {\r\n                            continue;\r\n                        }\r\n                        if (!moduleInjectionMap[k][key]) {\r\n                            moduleInjectionMap[k][key] = [];\r\n                        }\r\n                        moduleInjectionMap[k][key].push({\r\n                            version: cls[k][key],\r\n                            moduleId: xtype\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            moduleInjection[xtype] = cls;\r\n        }\r\n\r\n        return function () {\r\n            return BI.Modules.getModule(xtype);\r\n        };\r\n    };\r\n\r\n    var constantInjection = {};\r\n    BI.constant = BI.constant || function (xtype, cls) {\r\n        if (constantInjection[xtype] != null) {\r\n            _global.console && console.error(\"constant: [\" + xtype + \"]已经注册过了\");\r\n        } else {\r\n            constantInjection[xtype] = cls;\r\n        }\r\n\r\n        return function () {\r\n            return BI.Constants.getConstant(xtype);\r\n        };\r\n    };\r\n\r\n    var modelInjection = {};\r\n    BI.model = BI.model || function (xtype, cls) {\r\n        if (modelInjection[xtype] != null) {\r\n            _global.console && console.error(\"model: [\" + xtype + \"] 已经注册过了\");\r\n        } else {\r\n            modelInjection[xtype] = cls;\r\n        }\r\n\r\n        return function (config) {\r\n            return BI.Models.getModel(xtype, config);\r\n        };\r\n    };\r\n\r\n    var storeInjection = {};\r\n    BI.store = BI.store || function (xtype, cls) {\r\n        if (storeInjection[xtype] != null) {\r\n            _global.console && console.error(\"store: [\" + xtype + \"] 已经注册过了\");\r\n        } else {\r\n            storeInjection[xtype] = cls;\r\n        }\r\n\r\n        return function (config) {\r\n            return BI.Stores.getStore(xtype, config);\r\n        };\r\n    };\r\n\r\n    var serviceInjection = {};\r\n    BI.service = BI.service || function (xtype, cls) {\r\n        if (serviceInjection[xtype] != null) {\r\n            _global.console && console.error(\"service: [\" + xtype + \"] 已经注册过了\");\r\n        }\r\n\r\n        serviceInjection[xtype] = cls;\r\n\r\n        return function (config) {\r\n            return BI.Services.getService(xtype, config);\r\n        };\r\n    };\r\n\r\n    var providerInjection = {};\r\n    BI.provider = BI.provider || function (xtype, cls) {\r\n        if (providerInjection[xtype] != null) {\r\n            _global.console && console.error(\"provider: [\" + xtype + \"] 已经注册过了\");\r\n        } else {\r\n            providerInjection[xtype] = cls;\r\n        }\r\n\r\n        return function (config) {\r\n            return BI.Providers.getProvider(xtype, config);\r\n        };\r\n    };\r\n\r\n    var configFunctions = BI.OB.configFunctions = {};\r\n    var runConfigFunction = function (type, configFn) {\r\n        if (!type || !configFunctions[type]) {\r\n            return false;\r\n        }\r\n\r\n        var queue = [];\r\n        if (configFn) {\r\n            queue = configFunctions[type].filter(function (conf) {\r\n                return conf.fn === configFn;\r\n            });\r\n            configFunctions[type] = configFunctions[type].filter(function (conf) {\r\n                return conf.fn !== configFn;\r\n            });\r\n        } else {\r\n            queue = configFunctions[type];\r\n            delete configFunctions[type];\r\n        }\r\n\r\n        var dependencies = BI.Providers.getProvider(\"bi.provider.system\").getDependencies();\r\n        var modules = moduleInjectionMap.components[type]\r\n            || moduleInjectionMap.constants[type]\r\n            || moduleInjectionMap.services[type]\r\n            || moduleInjectionMap.stores[type]\r\n            || moduleInjectionMap.models[type]\r\n            || moduleInjectionMap.providers[type];\r\n        for (var i = 0; i < queue.length; i++) {\r\n            var conf = queue[i];\r\n            var version = conf.opt.version;\r\n            var fn = conf.fn;\r\n            if (modules && version) {\r\n                var findVersion = false;\r\n                for (var j = 0; j < modules.length; j++) {\r\n                    var module = modules[j];\r\n                    if (module && dependencies[module.moduleId] && module.version === version) {\r\n                        var minVersion = dependencies[module.moduleId].minVersion,\r\n                            maxVersion = dependencies[module.moduleId].maxVersion;\r\n                        if (minVersion && (moduleInjection[module.moduleId].version || version) < minVersion) {\r\n                            findVersion = true;\r\n                            break;\r\n                        }\r\n                        if (maxVersion && (moduleInjection[module.moduleId].version || version) > maxVersion) {\r\n                            findVersion = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (findVersion === true) {\r\n                    _global.console && console.error(\"moduleId: [\" + module.moduleId + \"] 接口: [\" + type + \"] 接口版本: [\" + version + \"] 已过期，版本要求为：\", dependencies[module.moduleId], \"=>\", moduleInjection[module.moduleId]);\r\n                    continue;\r\n                }\r\n            }\r\n            if (constantInjection[type]) {\r\n                constantInjection[type] = fn(constantInjection[type]);\r\n                continue;\r\n            }\r\n            if (providerInjection[type]) {\r\n                if (!providers[type]) {\r\n                    providers[type] = new providerInjection[type]();\r\n                }\r\n                if (providerInstance[type]) {\r\n                    delete providerInstance[type];\r\n                }\r\n                fn(providers[type]);\r\n                continue;\r\n            }\r\n            BI.Plugin.configWidget(type, fn, conf.opt);\r\n        }\r\n    };\r\n    BI.config = BI.config || function (type, configFn, opt) {\r\n        if (BI.isFunction(type)) {\r\n            opt = configFn;\r\n            configFn = type;\r\n            type = \"bi.provider.system\";\r\n        }\r\n        opt = opt || {};\r\n\r\n        // 系统配置直接执行\r\n        if (\"bi.provider.system\" === type) {\r\n            if (!providers[type]) {\r\n                providers[type] = new providerInjection[type]();\r\n            }\r\n            // 如果config被重新配置的话，需要删除掉之前的实例\r\n            if (providerInstance[type]) {\r\n                delete providerInstance[type];\r\n            }\r\n            return configFn(providers[type]);\r\n        }\r\n\r\n        if (!configFunctions[type]) {\r\n            configFunctions[type] = [];\r\n        }\r\n        configFunctions[type].push({\r\n            fn: configFn,\r\n            opt: opt\r\n        });\r\n\r\n        if (opt.immediately) {\r\n            return runConfigFunction(type, configFn);\r\n        }\r\n    };\r\n\r\n    BI.getReference = BI.getReference || function (type, fn) {\r\n        return BI.Plugin.registerObject(type, fn);\r\n    };\r\n\r\n    var actions = {};\r\n    var globalAction = [];\r\n    BI.action = BI.action || function (type, actionFn) {\r\n        if (BI.isFunction(type)) {\r\n            globalAction.push(type);\r\n            return function () {\r\n                BI.remove(globalAction, function (idx) {\r\n                    return globalAction.indexOf(actionFn) === idx;\r\n                });\r\n            };\r\n        }\r\n        if (!actions[type]) {\r\n            actions[type] = [];\r\n        }\r\n        actions[type].push(actionFn);\r\n        return function () {\r\n            BI.remove(actions[type], function (idx) {\r\n                return actions[type].indexOf(actionFn) === idx;\r\n            });\r\n            if (actions[type].length === 0) {\r\n                delete actions[type];\r\n            }\r\n        };\r\n    };\r\n\r\n    var points = {};\r\n    BI.point = BI.point || function (type, action, pointFn, after) {\r\n        if (!points[type]) {\r\n            points[type] = {};\r\n        }\r\n        if (!points[type][action]) {\r\n            points[type][action] = {};\r\n        }\r\n        if (!points[type][action][after ? \"after\" : \"before\"]) {\r\n            points[type][action][after ? \"after\" : \"before\"] = [];\r\n        }\r\n        points[type][action][after ? \"after\" : \"before\"].push(pointFn);\r\n    };\r\n\r\n    BI.Modules = BI.Modules || {\r\n        getModule: function (type) {\r\n            if (!moduleInjection[type]) {\r\n                _global.console && console.error(\"module: [\" + type + \"] 未定义\");\r\n            }\r\n            return moduleInjection[type];\r\n        },\r\n        getAllModules: function () {\r\n            return moduleInjection;\r\n        }\r\n    };\r\n\r\n    BI.Constants = BI.Constants || {\r\n        getConstant: function (type) {\r\n            if (BI.isNull(constantInjection[type])) {\r\n                _global.console && console.error(\"constant: [\" + type + \"] 未定义\");\r\n            }\r\n            runConfigFunction(type);\r\n            return BI.isFunction(constantInjection[type]) ? constantInjection[type]() : constantInjection[type];\r\n        }\r\n    };\r\n\r\n    var callPoint = function (inst, types) {\r\n        types = BI.isArray(types) ? types : [types];\r\n        BI.each(types, function (idx, type) {\r\n            if (points[type]) {\r\n                for (var action in points[type]) {\r\n                    var bfns = points[type][action].before;\r\n                    if (bfns) {\r\n                        BI.aspect.before(inst, action, function (bfns) {\r\n                            return function () {\r\n                                for (var i = 0, len = bfns.length; i < len; i++) {\r\n                                    try {\r\n                                        bfns[i].apply(inst, arguments);\r\n                                    } catch (e) {\r\n                                        _global.console && console.error(e);\r\n                                    }\r\n                                }\r\n                            };\r\n                        }(bfns));\r\n                    }\r\n                    var afns = points[type][action].after;\r\n                    if (afns) {\r\n                        BI.aspect.after(inst, action, function (afns) {\r\n                            return function () {\r\n                                for (var i = 0, len = afns.length; i < len; i++) {\r\n                                    try {\r\n                                        afns[i].apply(inst, arguments);\r\n                                    } catch (e) {\r\n                                        _global.console && console.error(e);\r\n                                    }\r\n                                }\r\n                            };\r\n                        }(afns));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    BI.Models = BI.Models || {\r\n        getModel: function (type, config) {\r\n            if (!modelInjection[type]) {\r\n                _global.console && console.error(\"model: [\" + type + \"] 未定义\");\r\n            }\r\n            runConfigFunction(type);\r\n            var inst = new modelInjection[type](config);\r\n            inst._constructor && inst._constructor(config);\r\n            inst.mixins && callPoint(inst, inst.mixins);\r\n            callPoint(inst, type);\r\n            return inst;\r\n        }\r\n    };\r\n\r\n    var stores = {};\r\n\r\n    BI.Stores = BI.Stores || {\r\n        getStore: function (type, config) {\r\n            if (!storeInjection[type]) {\r\n                _global.console && console.error(\"store: [\" + type + \"] 未定义\");\r\n            }\r\n            if (stores[type]) {\r\n                return stores[type];\r\n            }\r\n            var inst = stores[type] = new storeInjection[type](config);\r\n            inst._constructor && inst._constructor(config, function () {\r\n                delete stores[type];\r\n            });\r\n            callPoint(inst, type);\r\n            return inst;\r\n        }\r\n    };\r\n\r\n    var services = {};\r\n\r\n    BI.Services = BI.Services || {\r\n        getService: function (type, config) {\r\n            if (!serviceInjection[type]) {\r\n                _global.console && console.error(\"service: [\" + type + \"] 未定义\");\r\n            }\r\n            if (services[type]) {\r\n                return services[type];\r\n            }\r\n            services[type] = new serviceInjection[type](config);\r\n            callPoint(services[type], type);\r\n            return services[type];\r\n        }\r\n    };\r\n\r\n    var providers = {},\r\n        providerInstance = {};\r\n\r\n    BI.Providers = BI.Providers || {\r\n        getProvider: function (type, config) {\r\n            if (!providerInjection[type]) {\r\n                _global.console && console.error(\"provider: [\" + type + \"] 未定义\");\r\n            }\r\n            runConfigFunction(type);\r\n            if (!providers[type]) {\r\n                providers[type] = new providerInjection[type]();\r\n            }\r\n            if (!providerInstance[type] && providers[type].$get) {\r\n                providerInstance[type] = new (providers[type].$get())(config);\r\n            }\r\n            return providerInstance[type];\r\n        }\r\n    };\r\n\r\n    BI.Actions = BI.Actions || {\r\n        runAction: function (type, event, config) {\r\n            BI.each(actions[type], function (i, act) {\r\n                try {\r\n                    act(event, config);\r\n                } catch (e) {\r\n                    _global.console && console.error(e);\r\n                }\r\n            });\r\n        },\r\n        runGlobalAction: function () {\r\n            var args = [].slice.call(arguments);\r\n            BI.each(globalAction, function (i, act) {\r\n                try {\r\n                    act.apply(null, args);\r\n                } catch (e) {\r\n                    _global.console && console.error(e);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    var kv = {};\r\n    BI.shortcut = BI.component = BI.shortcut || function (xtype, cls) {\r\n        if (kv[xtype] != null) {\r\n            _global.console && console.error(\"组件： [\" + xtype + \"] 已经注册过了\");\r\n        }\r\n        if (cls) {\r\n            cls[\"xtype\"] = xtype;\r\n        }\r\n        kv[xtype] = cls;\r\n    };\r\n\r\n    // 根据配置属性生成widget\r\n    var createWidget = function (config, context, lazy) {\r\n        var cls = BI.isFunction(config.type) ? config.type : kv[config.type];\r\n\r\n        if (!cls) {\r\n            throw new Error(\"组件： [\" + config.type + \"] 未定义\");\r\n        }\r\n        var pushed = false;\r\n        var widget = new cls();\r\n        widget._context = BI.Widget.context || context;\r\n        if (!BI.Widget.context && context) {\r\n            pushed = true;\r\n            BI.Widget.pushContext(context);\r\n        }\r\n        callPoint(widget, config.type);\r\n        widget._initProps(config);\r\n        widget._initRoot();\r\n        widget._constructed();\r\n        // if (!lazy || config.element || config.root) {\r\n        widget._lazyConstructor();\r\n        // }\r\n        pushed && BI.Widget.popContext();\r\n        return widget;\r\n    };\r\n\r\n    BI.createWidget = BI.createWidget || function (item, options, context, lazy) {\r\n        item || (item = {});\r\n        if (BI.isWidget(options)) {\r\n            context = options;\r\n            options = {};\r\n        } else {\r\n            options || (options = {});\r\n        }\r\n\r\n        var el, w;\r\n        if (item.type || options.type) {\r\n            el = BI.extend({}, options, item);\r\n        } else if (item.el && (item.el.type || options.type)) {\r\n            el = BI.extend({}, options, item.el);\r\n        }\r\n\r\n        if (el) {\r\n            var elType = (el.type && el.type.xtype) || el.type;\r\n            runConfigFunction(elType);\r\n        }\r\n\r\n        // 先把准备环境准备好\r\n        BI.init();\r\n\r\n        if (BI.isEmpty(item) && BI.isEmpty(options)) {\r\n            return BI.createWidget({\r\n                type: \"bi.layout\"\r\n            });\r\n        }\r\n        if (BI.isWidget(item)) {\r\n            return item;\r\n        }\r\n        if (el) {\r\n            w = BI.Plugin.getWidget(elType, el);\r\n            var wType = (w.type && w.type.xtype) || w.type;\r\n            if (wType === elType) {\r\n                if (BI.Plugin.hasObject(elType)) {\r\n                    if (!w.listeners || BI.isArray(w.listeners)) {\r\n                        w.listeners = (w.listeners || []).concat([{\r\n                            eventName: BI.Events.MOUNT,\r\n                            action: function () {\r\n                                BI.Plugin.getObject(elType, this);\r\n                            }\r\n                        }]);\r\n                    } else {\r\n                        w.listeners[BI.Events.MOUNT] = [\r\n                            function () {\r\n                                BI.Plugin.getObject(elType, this);\r\n                            }\r\n                        ].concat(w.listeners[BI.Events.MOUNT] || []);\r\n                    }\r\n                }\r\n                return createWidget(w, context, lazy);\r\n            }\r\n            return BI.createWidget(w, options, context, lazy);\r\n        }\r\n        if (BI.isWidget(item.el)) {\r\n            return item.el;\r\n        }\r\n        throw new Error(\"组件：无法根据item创建组件\", item);\r\n    };\r\n\r\n    BI._lazyCreateWidget = BI._lazyCreateWidget || function (item, options, context) {\r\n        return BI.createWidget(item, options, context, true);\r\n    };\r\n\r\n    BI.createElement = BI.createElement || function () {\r\n        var widget = BI.createWidget.apply(this, arguments);\r\n        return widget.element;\r\n    };\r\n\r\n    BI.getResource = BI.getResource || function (type, config) {\r\n        if (BI.isNotNull(constantInjection[type])) {\r\n            return BI.Constants.getConstant(type);\r\n        }\r\n        if (modelInjection[type]) {\r\n            return BI.Models.getModel(type, config);\r\n        }\r\n        if (storeInjection[type]) {\r\n            return BI.Stores.getStore(type, config);\r\n        }\r\n        if (serviceInjection[type]) {\r\n            return BI.Services.getService(type, config);\r\n        }\r\n        if (providerInjection[type]) {\r\n            return BI.Providers.getProvider(type, config);\r\n        }\r\n        throw new Error(\"未知类型: [\" + type + \"] 未定义\");\r\n    };\r\n})();\r\n","/**\r\n * 事件集合\r\n * @class BI.Events\r\n */\r\nBI._.extend(BI, {\r\n    Events: {\r\n\r\n        /**\r\n         * @static\r\n         * @property keydown事件\r\n         */\r\n        KEYDOWN: \"_KEYDOWN\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 回撤事件\r\n         */\r\n        BACKSPACE: \"_BACKSPACE\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 空格事件\r\n         */\r\n        SPACE: \"_SPACE\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 回车事件\r\n         */\r\n        ENTER: \"_ENTER\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 确定事件\r\n         */\r\n        CONFIRM: \"_CONFIRM\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 错误事件\r\n         */\r\n        ERROR: \"_ERROR\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 暂停事件\r\n         */\r\n        PAUSE: \"_PAUSE\",\r\n\r\n        /**\r\n         * @static\r\n         * @property destroy事件\r\n         */\r\n        DESTROY: \"_DESTROY\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 挂载事件\r\n         */\r\n        MOUNT: \"_MOUNT\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 取消挂载事件\r\n         */\r\n        UNMOUNT: \"_UNMOUNT\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 清除选择\r\n         */\r\n        CLEAR: \"_CLEAR\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 添加数据\r\n         */\r\n        ADD: \"_ADD\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 正在编辑状态事件\r\n         */\r\n        EDITING: \"_EDITING\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 空状态事件\r\n         */\r\n        EMPTY: \"_EMPTY\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 显示隐藏事件\r\n         */\r\n        VIEW: \"_VIEW\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 窗体改变大小\r\n         */\r\n        RESIZE: \"_RESIZE\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 编辑前事件\r\n         */\r\n        BEFOREEDIT: \"_BEFOREEDIT\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 编辑后事件\r\n         */\r\n        AFTEREDIT: \"_AFTEREDIT\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 开始编辑事件\r\n         */\r\n        STARTEDIT: \"_STARTEDIT\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 停止编辑事件\r\n         */\r\n        STOPEDIT: \"_STOPEDIT\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 值改变事件\r\n         */\r\n        CHANGE: \"_CHANGE\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 下拉弹出菜单事件\r\n         */\r\n        EXPAND: \"_EXPAND\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 关闭下拉菜单事件\r\n         */\r\n        COLLAPSE: \"_COLLAPSE\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 下拉菜单切换展开收起事件\r\n         */\r\n        TOGGLE: \"_TOGGLE\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 回调事件\r\n         */\r\n        CALLBACK: \"_CALLBACK\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 点击事件\r\n         */\r\n        CLICK: \"_CLICK\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 状态改变事件，一般是用在复选按钮和单选按钮\r\n         */\r\n        STATECHANGE: \"_STATECHANGE\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 状态改变前事件\r\n         */\r\n        BEFORESTATECHANGE: \"_BEFORESTATECHANGE\",\r\n\r\n\r\n        /**\r\n         * @static\r\n         * @property 初始化事件\r\n         */\r\n        INIT: \"_INIT\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 初始化后事件\r\n         */\r\n        AFTERINIT: \"_AFTERINIT\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 滚动条滚动事件\r\n         */\r\n        SCROLL: \"_SCROLL\",\r\n\r\n\r\n        /**\r\n         * @static\r\n         * @property 开始加载事件\r\n         */\r\n        STARTLOAD: \"_STARTLOAD\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 加载后事件\r\n         */\r\n        AFTERLOAD: \"_AFTERLOAD\",\r\n\r\n\r\n        /**\r\n         * @static\r\n         * @property 提交前事件\r\n         */\r\n        BS: \"beforesubmit\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 提交后事件\r\n         */\r\n        AS: \"aftersubmit\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 提交完成事件\r\n         */\r\n        SC: \"submitcomplete\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 提交失败事件\r\n         */\r\n        SF: \"submitfailure\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 提交成功事件\r\n         */\r\n        SS: \"submitsuccess\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 校验提交前事件\r\n         */\r\n        BVW: \"beforeverifywrite\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 校验提交后事件\r\n         */\r\n        AVW: \"afterverifywrite\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 校验后事件\r\n         */\r\n        AV: \"afterverify\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 填报前事件\r\n         */\r\n        BW: \"beforewrite\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 填报后事件\r\n         */\r\n        AW: \"afterwrite\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 填报成功事件\r\n         */\r\n        WS: \"writesuccess\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 填报失败事件\r\n         */\r\n        WF: \"writefailure\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 添加行前事件\r\n         */\r\n        BA: \"beforeappend\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 添加行后事件\r\n         */\r\n        AA: \"afterappend\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 删除行前事件\r\n         */\r\n        BD: \"beforedelete\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 删除行后事件\r\n         */\r\n        AD: \"beforedelete\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 未提交离开事件\r\n         */\r\n        UC: \"unloadcheck\",\r\n\r\n\r\n        /**\r\n         * @static\r\n         * @property PDF导出前事件\r\n         */\r\n        BTOPDF: \"beforetopdf\",\r\n\r\n        /**\r\n         * @static\r\n         * @property PDF导出后事件\r\n         */\r\n        ATOPDF: \"aftertopdf\",\r\n\r\n        /**\r\n         * @static\r\n         * @property Excel导出前事件\r\n         */\r\n        BTOEXCEL: \"beforetoexcel\",\r\n\r\n        /**\r\n         * @static\r\n         * @property Excel导出后事件\r\n         */\r\n        ATOEXCEL: \"aftertoexcel\",\r\n\r\n        /**\r\n         * @static\r\n         * @property Word导出前事件\r\n         */\r\n        BTOWORD: \"beforetoword\",\r\n\r\n        /**\r\n         * @static\r\n         * @property Word导出后事件\r\n         */\r\n        ATOWORD: \"aftertoword\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 图片导出前事件\r\n         */\r\n        BTOIMAGE: \"beforetoimage\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 图片导出后事件\r\n         */\r\n        ATOIMAGE: \"aftertoimage\",\r\n\r\n        /**\r\n         * @static\r\n         * @property HTML导出前事件\r\n         */\r\n        BTOHTML: \"beforetohtml\",\r\n\r\n        /**\r\n         * @static\r\n         * @property HTML导出后事件\r\n         */\r\n        ATOHTML: \"aftertohtml\",\r\n\r\n        /**\r\n         * @static\r\n         * @property Excel导入前事件\r\n         */\r\n        BIMEXCEL: \"beforeimportexcel\",\r\n\r\n        /**\r\n         * @static\r\n         * @property Excel导出后事件\r\n         */\r\n        AIMEXCEL: \"afterimportexcel\",\r\n\r\n        /**\r\n         * @static\r\n         * @property PDF打印前事件\r\n         */\r\n        BPDFPRINT: \"beforepdfprint\",\r\n\r\n        /**\r\n         * @static\r\n         * @property PDF打印后事件\r\n         */\r\n        APDFPRINT: \"afterpdfprint\",\r\n\r\n        /**\r\n         * @static\r\n         * @property Flash打印前事件\r\n         */\r\n        BFLASHPRINT: \"beforeflashprint\",\r\n\r\n        /**\r\n         * @static\r\n         * @property Flash打印后事件\r\n         */\r\n        AFLASHPRINT: \"afterflashprint\",\r\n\r\n        /**\r\n         * @static\r\n         * @property Applet打印前事件\r\n         */\r\n        BAPPLETPRINT: \"beforeappletprint\",\r\n\r\n        /**\r\n         * @static\r\n         * @property Applet打印后事件\r\n         */\r\n        AAPPLETPRINT: \"afterappletprint\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 服务器打印前事件\r\n         */\r\n        BSEVERPRINT: \"beforeserverprint\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 服务器打印后事件\r\n         */\r\n        ASERVERPRINT: \"afterserverprint\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 邮件发送前事件\r\n         */\r\n        BEMAIL: \"beforeemail\",\r\n\r\n        /**\r\n         * @static\r\n         * @property 邮件发送后事件\r\n         */\r\n        AEMAIL: \"afteremail\"\r\n    }\r\n});\r\n","/**\r\n * 常量\r\n */\r\n\r\nBI._.extend(BI, {\r\n    MAX: 0xfffffffffffffff,\r\n    MIN: -0xfffffffffffffff,\r\n    EVENT_RESPONSE_TIME: 200,\r\n    EVENT_BLUR: true,\r\n    zIndex_layer: 1e5,\r\n    zIndex_popover: 1e6,\r\n    zIndex_popup: 1e7,\r\n    zIndex_masker: 1e8,\r\n    zIndex_tip: 1e9,\r\n    emptyStr: \"\",\r\n    pixUnit: \"px\",\r\n    pixRatio: 1,\r\n    // 一定返回最终的单位\r\n    pixFormat: function (pix, border) {\r\n        if (!BI.isNumber(pix)) {\r\n            return pix;\r\n        }\r\n        if (BI.pixUnit === \"px\") {\r\n            return (pix / BI.pixRatio - (border || 0)) + BI.pixUnit;\r\n        }\r\n        var length = pix / BI.pixRatio + BI.pixUnit;\r\n        if (border > 0) {\r\n            return `calc(${length} - ${border + \"px\"})`;\r\n        }\r\n        return length;\r\n    },\r\n    toPix: function (pix, border) {\r\n        if (!BI.isNumber(pix)) {\r\n            return pix;\r\n        }\r\n        if (BI.pixUnit === \"px\") {\r\n            return pix - (border || 0) * BI.pixRatio;\r\n        }\r\n        if (border > 0) {\r\n            return `calc(${pix / BI.pixRatio + BI.pixUnit} - ${border + \"px\"})`;\r\n        }\r\n        return pix;\r\n    },\r\n    emptyFn: function () {\r\n    },\r\n    empty: null,\r\n    Key: {\r\n        48: \"0\",\r\n        49: \"1\",\r\n        50: \"2\",\r\n        51: \"3\",\r\n        52: \"4\",\r\n        53: \"5\",\r\n        54: \"6\",\r\n        55: \"7\",\r\n        56: \"8\",\r\n        57: \"9\",\r\n        65: \"a\",\r\n        66: \"b\",\r\n        67: \"c\",\r\n        68: \"d\",\r\n        69: \"e\",\r\n        70: \"f\",\r\n        71: \"g\",\r\n        72: \"h\",\r\n        73: \"i\",\r\n        74: \"j\",\r\n        75: \"k\",\r\n        76: \"l\",\r\n        77: \"m\",\r\n        78: \"n\",\r\n        79: \"o\",\r\n        80: \"p\",\r\n        81: \"q\",\r\n        82: \"r\",\r\n        83: \"s\",\r\n        84: \"t\",\r\n        85: \"u\",\r\n        86: \"v\",\r\n        87: \"w\",\r\n        88: \"x\",\r\n        89: \"y\",\r\n        90: \"z\",\r\n        96: \"0\",\r\n        97: \"1\",\r\n        98: \"2\",\r\n        99: \"3\",\r\n        100: \"4\",\r\n        101: \"5\",\r\n        102: \"6\",\r\n        103: \"7\",\r\n        104: \"8\",\r\n        105: \"9\",\r\n        106: \"*\",\r\n        107: \"+\",\r\n        109: \"-\",\r\n        110: \".\",\r\n        111: \"/\"\r\n    },\r\n    KeyCode: {\r\n        BACKSPACE: 8,\r\n        COMMA: 188,\r\n        DELETE: 46,\r\n        DOWN: 40,\r\n        END: 35,\r\n        ENTER: 13,\r\n        ESCAPE: 27,\r\n        HOME: 36,\r\n        LEFT: 37,\r\n        NUMPAD_ADD: 107,\r\n        NUMPAD_DECIMAL: 110,\r\n        NUMPAD_DIVIDE: 111,\r\n        NUMPAD_ENTER: 108,\r\n        NUMPAD_MULTIPLY: 106,\r\n        NUMPAD_SUBTRACT: 109,\r\n        PAGE_DOWN: 34,\r\n        PAGE_UP: 33,\r\n        PERIOD: 190,\r\n        RIGHT: 39,\r\n        SPACE: 32,\r\n        TAB: 9,\r\n        UP: 38\r\n    },\r\n    Status: {\r\n        SUCCESS: 1,\r\n        WRONG: 2,\r\n        START: 3,\r\n        END: 4,\r\n        WAITING: 5,\r\n        READY: 6,\r\n        RUNNING: 7,\r\n        OUTOFBOUNDS: 8,\r\n        NULL: -1\r\n    },\r\n    Direction: {\r\n        Top: \"top\",\r\n        Bottom: \"bottom\",\r\n        Left: \"left\",\r\n        Right: \"right\",\r\n        Custom: \"custom\"\r\n    },\r\n    Axis: {\r\n        Vertical: \"vertical\",\r\n        Horizontal: \"horizontal\"\r\n    },\r\n    Selection: {\r\n        Default: -2,\r\n        None: -1,\r\n        Single: 0,\r\n        Multi: 1,\r\n        All: 2\r\n    },\r\n    HorizontalAlign: {\r\n        Left: \"left\",\r\n        Right: \"right\",\r\n        Center: \"center\",\r\n        Stretch: \"stretch\"\r\n    },\r\n    VerticalAlign: {\r\n        Middle: \"middle\",\r\n        Top: \"top\",\r\n        Bottom: \"bottom\",\r\n        Stretch: \"stretch\"\r\n    },\r\n    StartOfWeek: 1,\r\n    BlankSplitChar: \"\\u200b \\u200b\",\r\n});\r\n","(function () {\r\n    var _global;\r\n    if (typeof window !== \"undefined\") {\r\n        _global = window;\r\n    } else if (typeof global !== \"undefined\") {\r\n        _global = global;\r\n    } else if (typeof self !== \"undefined\") {\r\n        _global = self;\r\n    } else {\r\n        _global = this;\r\n    }\r\n    if (!_global.BI) {\r\n        _global.BI = {};\r\n    }\r\n\r\n    function isEmpty (value) {\r\n        // 判断是否为空值\r\n        var result = value === \"\" || value === null || value === undefined;\r\n        return result;\r\n    }\r\n\r\n    // 判断是否是无效的日期\r\n    function isInvalidDate (date) {\r\n        return date == \"Invalid Date\" || date == \"NaN\";\r\n    }\r\n\r\n    /**\r\n     * CHART-1400\r\n     * 使用数值计算的方式来获取任意数值的科学技术表示值。\r\n     * 科学计数格式\r\n     */\r\n    function _eFormat (text, fmt) {\r\n        text = +text;\r\n\r\n        return eFormat(text, fmt);\r\n\r\n        /**\r\n         * 科学计数格式具体计算过程\r\n         * @param num\r\n         * @param format {String}有两种形式，\r\n         *      1、\"0.00E00\"这样的字符串表示正常的科学计数表示，只不过规定了数值精确到百分位，\r\n         *         而数量级的绝对值如果是10以下的时候在前面补零。\r\n         *      2、 \"##0.0E0\"这样的字符串则规定用科学计数法表示之后的数值的整数部分是三位，精确到十分位，\r\n         *         数量级没有规定，因为没见过实数里有用科学计数法表示之后E的后面会小于一位的情况（0无所谓）。\r\n         * @returns {*}\r\n         */\r\n        function eFormat (num, format) {\r\n            var neg = num < 0 ? (num *= -1, \"-\") : \"\",\r\n                magnitudeNeg = \"\";\r\n\r\n            var funcName = num > 0 && num < 1 ? \"floor\" : \"ceil\";  // -0.9999->-1\r\n            // 数量级\r\n            var magnitude = Math[funcName](Math.log(num) / Math.log(10));\r\n\r\n            if (!isFinite(magnitude)) {\r\n                return format.replace(/#/ig, \"\").replace(/\\.e/ig, \"E\");\r\n            }\r\n\r\n            num = num / Math.pow(10, magnitude);\r\n\r\n            // 让num转化成[1, 10)区间上的数\r\n            if (num > 0 && num < 1) {\r\n                num *= 10;\r\n                magnitude -= 1;\r\n            }\r\n\r\n            // 计算出format中需要显示的整数部分的位数，然后更新这个数值，也更新数量级\r\n            var integerLen = getInteger(magnitude, format);\r\n            integerLen > 1 && (magnitude -= integerLen - 1, num *= Math.pow(10, integerLen - 1));\r\n\r\n            magnitude < 0 && (magnitudeNeg = \"-\", magnitude *= -1);\r\n\r\n            // 获取科学计数法精确到的位数\r\n            var precision = getPrecision(format);\r\n            // 判断num经过四舍五入之后是否有进位\r\n            var isValueCarry = isValueCarried(num);\r\n\r\n            num *= Math.pow(10, precision);\r\n            num = Math.round(num);\r\n            // 如果出现进位的情况，将num除以10\r\n            isValueCarry && (num /= 10, magnitude += magnitudeNeg === \"-\" ? -1 : 1);\r\n            num /= Math.pow(10, precision);\r\n\r\n            // 小数部分保留precision位\r\n            num = num.toFixed(precision);\r\n            // 格式化指数的部分\r\n            magnitude = formatExponential(format, magnitude, magnitudeNeg);\r\n\r\n            return neg + num + \"E\" + magnitude;\r\n        }\r\n\r\n        // 获取format格式规定的数量级的形式\r\n        function formatExponential (format, num, magnitudeNeg) {\r\n            num += \"\";\r\n            if (!/e/ig.test(format)) {\r\n                return num;\r\n            }\r\n            format = format.split(/e/ig)[1];\r\n\r\n            while (num.length < format.length) {\r\n                num = \"0\" + num;\r\n            }\r\n\r\n            // 如果magnitudeNeg是一个\"-\"，而且num正好全是0，那么就别显示负号了\r\n            var isAllZero = true;\r\n            for (var i = 0, len = num.length; i < len; i++) {\r\n                if (!isAllZero) {\r\n                    continue;\r\n                }\r\n                isAllZero = num.charAt(i) === \"0\";\r\n            }\r\n            magnitudeNeg = isAllZero ? \"\" : magnitudeNeg;\r\n\r\n            return magnitudeNeg + num;\r\n        }\r\n\r\n        // 获取format规定的科学计数法精确到的位数\r\n        function getPrecision (format) {\r\n            if (!/e/ig.test(format)) {\r\n                return 0;\r\n            }\r\n            var arr = format.split(/e/ig)[0].split(\".\");\r\n\r\n            return arr.length > 1 ? arr[1].length : 0;\r\n        }\r\n\r\n        // 获取数值科学计数法表示之后整数的位数\r\n        // 这边我们还需要考虑#和0的问题\r\n        function getInteger (magnitude, format) {\r\n            if (!/e/ig.test(format)) {\r\n                return 0;\r\n            }\r\n            // return format.split(/e/ig)[0].split(\".\")[0].length;\r\n\r\n            var formatLeft = format.split(/e/ig)[0].split(\".\")[0], i, f, len = formatLeft.length;\r\n            var valueLeftLen = 0;\r\n\r\n            for (i = 0; i < len; i++) {\r\n                f = formatLeft.charAt(i);\r\n                // \"#\"所在的位置到末尾长度小于等于值的整数部分长度，那么这个#才可以占位\r\n                if (f == 0 || (f == \"#\" && (len - i <= magnitude + 1))) {\r\n                    valueLeftLen++;\r\n                }\r\n            }\r\n\r\n            return valueLeftLen;\r\n        }\r\n\r\n        // 判断num通过round函数之后是否有进位\r\n        function isValueCarried (num) {\r\n            var roundNum = Math.round(num);\r\n            num = (num + \"\").split(\".\")[0];\r\n            roundNum = (roundNum + \"\").split(\".\")[0];\r\n            return num.length !== roundNum.length;\r\n        }\r\n    }\r\n\r\n    //'#.##'之类的格式处理 1.324e-18 这种的科学数字\r\n    function _dealNumberPrecision (text, fright) {\r\n        if (/[eE]/.test(text)) {\r\n            var precision = 0, i = 0, ch;\r\n\r\n            if (/[%‰]$/.test(fright)) {\r\n                precision = /[%]$/.test(fright) ? 2 : 3;\r\n            }\r\n\r\n            for (var len = fright.length; i < len; i++) {\r\n                if ((ch = fright.charAt(i)) == \"0\" || ch == \"#\") {\r\n                    precision++;\r\n                }\r\n            }\r\n            return Number(text).toFixed(precision);\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    /**\r\n     * 数字格式\r\n     */\r\n    function _numberFormat (text, format) {\r\n        var text = text + \"\";\r\n\r\n        //在调用数字格式的时候如果text里没有任何数字则不处理\r\n        if (!(/[0-9]/.test(text)) || !format) {\r\n            return text;\r\n        }\r\n\r\n        // 数字格式，区分正负数\r\n        var numMod = format.indexOf(\";\");\r\n        if (numMod > -1) {\r\n            if (text >= 0) {\r\n                return _numberFormat(text + \"\", format.substring(0, numMod));\r\n            }\r\n            return _numberFormat((-text) + \"\", format.substr(numMod + 1));\r\n\r\n        } else {\r\n            // 兼容格式处理负数的情况(copy:fr-jquery.format.js)\r\n            if (+text < 0 && format.charAt(0) !== \"-\") {\r\n                return _numberFormat((-text) + \"\", \"-\" + format);\r\n            }\r\n        }\r\n\r\n        var fp = format.split(\".\"), fleft = fp[0] || \"\", fright = fp[1] || \"\";\r\n        text = _dealNumberPrecision(text, fright);\r\n        var tp = text.split(\".\"), tleft = tp[0] || \"\", tright = tp[1] || \"\";\r\n\r\n        // 百分比,千分比的小数点移位处理\r\n        if (/[%‰]$/.test(format)) {\r\n            var paddingZero = /[%]$/.test(format) ? \"00\" : \"000\";\r\n            tright += paddingZero;\r\n            tleft += tright.substr(0, paddingZero.length);\r\n            tleft = tleft.replace(/^0+/gi, \"\");\r\n            tright = tright.substr(paddingZero.length).replace(/0+$/gi, \"\");\r\n        }\r\n        var right = _dealWithRight(tright, fright);\r\n        if (right.leftPlus) {\r\n            // 小数点后有进位\r\n            tleft = parseInt(tleft) + 1 + \"\";\r\n\r\n            tleft = isNaN(tleft) ? \"1\" : tleft;\r\n        }\r\n        right = right.num;\r\n        var left = _dealWithLeft(tleft, fleft);\r\n        if (!(/[0-9]/.test(left))) {\r\n            left = left + \"0\";\r\n        }\r\n        if (!(/[0-9]/.test(right))) {\r\n            return left + right;\r\n        } else {\r\n            return left + \".\" + right;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理小数点右边小数部分\r\n     * @param tright 右边内容\r\n     * @param fright 右边格式\r\n     * @returns {JSON} 返回处理结果和整数部分是否需要进位\r\n     * @private\r\n     */\r\n    function _dealWithRight (tright, fright) {\r\n        var right = \"\", j = 0, i = 0;\r\n        for (var len = fright.length; i < len; i++) {\r\n            var ch = fright.charAt(i);\r\n            var c = tright.charAt(j);\r\n            switch (ch) {\r\n                case \"0\":\r\n                    if (isEmpty(c)) {\r\n                        c = \"0\";\r\n                    }\r\n                    right += c;\r\n                    j++;\r\n                    break;\r\n                case \"#\":\r\n                    right += c;\r\n                    j++;\r\n                    break;\r\n                default :\r\n                    right += ch;\r\n                    break;\r\n            }\r\n        }\r\n        var rll = tright.substr(j);\r\n        var result = {};\r\n        if (!isEmpty(rll) && rll.charAt(0) > 4) {\r\n            // 有多余字符，需要四舍五入\r\n            result.leftPlus = true;\r\n            var numReg = right.match(/^[0-9]+/);\r\n            if (numReg) {\r\n                var num = numReg[0];\r\n                var orilen = num.length;\r\n                var newnum = parseInt(num) + 1 + \"\";\r\n                // 进位到整数部分\r\n                if (newnum.length > orilen) {\r\n                    newnum = newnum.substr(1);\r\n                } else {\r\n                    newnum = BI.leftPad(newnum, orilen, \"0\");\r\n                    result.leftPlus = false;\r\n                }\r\n                right = right.replace(/^[0-9]+/, newnum);\r\n            }\r\n        }\r\n        result.num = right;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 处理小数点左边整数部分\r\n     * @param tleft 左边内容\r\n     * @param fleft 左边格式\r\n     * @returns {string} 返回处理结果\r\n     * @private\r\n     */\r\n    function _dealWithLeft (tleft, fleft) {\r\n        var left = \"\";\r\n        var j = tleft.length - 1;\r\n        var combo = -1, last = -1;\r\n        var i = fleft.length - 1;\r\n        for (; i >= 0; i--) {\r\n            var ch = fleft.charAt(i);\r\n            var c = tleft.charAt(j);\r\n            switch (ch) {\r\n                case \"0\":\r\n                    if (isEmpty(c)) {\r\n                        c = \"0\";\r\n                    }\r\n                    last = -1;\r\n                    left = c + left;\r\n                    j--;\r\n                    break;\r\n                case \"#\":\r\n                    last = i;\r\n                    left = c + left;\r\n                    j--;\r\n                    break;\r\n                case \",\":\r\n                    if (!isEmpty(c)) {\r\n                        // 计算一个,分隔区间的长度\r\n                        var com = fleft.match(/,[#0]+/);\r\n                        if (com) {\r\n                            combo = com[0].length - 1;\r\n                        }\r\n                        left = \",\" + left;\r\n                    }\r\n                    break;\r\n                default :\r\n                    left = ch + left;\r\n                    break;\r\n            }\r\n        }\r\n        if (last > -1) {\r\n            // 处理剩余字符\r\n            var tll = tleft.substr(0, j + 1);\r\n            left = left.substr(0, last) + tll + left.substr(last);\r\n        }\r\n        if (combo > 0) {\r\n            // 处理,分隔区间\r\n            var res = left.match(/[0-9]+,/);\r\n            if (res) {\r\n                res = res[0];\r\n                var newstr = \"\", n = res.length - 1 - combo;\r\n                for (; n >= 0; n = n - combo) {\r\n                    newstr = res.substr(n, combo) + \",\" + newstr;\r\n                }\r\n                var lres = res.substr(0, n + combo);\r\n                if (!isEmpty(lres)) {\r\n                    newstr = lres + \",\" + newstr;\r\n                }\r\n            }\r\n            left = left.replace(/[0-9]+,/, newstr);\r\n        }\r\n        return left;\r\n    }\r\n\r\n\r\n    BI.cjkEncode = function (text) {\r\n        // alex:如果非字符串,返回其本身(cjkEncode(234) 返回 \"\"是不对的)\r\n        if (typeof text !== \"string\") {\r\n            return text;\r\n        }\r\n\r\n        var newText = \"\";\r\n        for (var i = 0; i < text.length; i++) {\r\n            var code = text.charCodeAt(i);\r\n            if (code >= 128 || code === 91 || code === 93) {// 91 is \"[\", 93 is \"]\".\r\n                newText += \"[\" + code.toString(16) + \"]\";\r\n            } else {\r\n                newText += text.charAt(i);\r\n            }\r\n        }\r\n\r\n        return newText;\r\n    };\r\n\r\n    /**\r\n     * 将cjkEncode处理过的字符串转化为原始字符串\r\n     *\r\n     * @static\r\n     * @param text 需要做解码的字符串\r\n     * @return {String} 解码后的字符串\r\n     */\r\n    BI.cjkDecode = function (text) {\r\n        if (text == null) {\r\n            return \"\";\r\n        }\r\n        // 查找没有 \"[\", 直接返回.  kunsnat:数字的时候, 不支持indexOf方法, 也是直接返回.\r\n        if (!isNaN(text) || text.indexOf(\"[\") == -1) {\r\n            return text;\r\n        }\r\n\r\n        var newText = \"\";\r\n        for (var i = 0; i < text.length; i++) {\r\n            var ch = text.charAt(i);\r\n            if (ch == \"[\") {\r\n                var rightIdx = text.indexOf(\"]\", i + 1);\r\n                if (rightIdx > i + 1) {\r\n                    var subText = text.substring(i + 1, rightIdx);\r\n                    // james：主要是考虑[CDATA[]]这样的值的出现\r\n                    if (subText.length > 0) {\r\n                        ch = String.fromCharCode(eval(\"0x\" + subText));\r\n                    }\r\n\r\n                    i = rightIdx;\r\n                }\r\n            }\r\n\r\n            newText += ch;\r\n        }\r\n\r\n        return newText;\r\n    };\r\n\r\n    // replace the html special tags\r\n    var SPECIAL_TAGS = {\r\n        \"&\": \"&amp;\",\r\n        \"\\\"\": \"&quot;\",\r\n        \"<\": \"&lt;\",\r\n        \">\": \"&gt;\",\r\n        \"\\x20\": \"&nbsp;\",\r\n        \"\\n\": \"&#10;\"\r\n    };\r\n    BI.htmlEncode = function (text) {\r\n        return BI.isNull(text) ? \"\" : BI.replaceAll(text + \"\", BI.keys(SPECIAL_TAGS).join(\"|\"), function (v) {\r\n            return SPECIAL_TAGS[v] ? SPECIAL_TAGS[v] : v;\r\n        });\r\n    };\r\n    // html decode\r\n    BI.htmlDecode = function (text) {\r\n        return BI.isNull(text) ? \"\" : BI.replaceAll(text + \"\", BI.values(SPECIAL_TAGS).join(\"|\"), function (v) {\r\n            switch (v) {\r\n                case \"&amp;\":\r\n                    return \"&\";\r\n                case \"&quot;\":\r\n                    return \"\\\"\";\r\n                case \"&lt;\":\r\n                    return \"<\";\r\n                case \"&gt;\":\r\n                    return \">\";\r\n                case \"&nbsp;\":\r\n                    return \" \";\r\n                case \"&#10;\":\r\n                    return \"\\n\";\r\n                default:\r\n                    return v;\r\n            }\r\n        });\r\n    };\r\n\r\n    BI.cjkEncodeDO = function (o) {\r\n        if (BI.isPlainObject(o)) {\r\n            var result = {};\r\n            BI._.each(o, function (v, k) {\r\n                if (!(typeof v === \"string\")) {\r\n                    v = BI.jsonEncode(v);\r\n                }\r\n                // wei:bug 43338，如果key是中文，cjkencode后o的长度就加了1，ie9以下版本死循环，所以新建对象result。\r\n                k = BI.cjkEncode(k);\r\n                result[k] = BI.cjkEncode(v);\r\n            });\r\n            return result;\r\n        }\r\n        return o;\r\n    };\r\n\r\n    BI.jsonEncode = function (o) {\r\n        // james:这个Encode是抄的EXT的\r\n        var useHasOwn = !!{}.hasOwnProperty;\r\n\r\n        // crashes Safari in some instances\r\n        // var validRE = /^(\"(\\\\.|[^\"\\\\\\n\\r])*?\"|[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t])+?$/;\r\n\r\n        var m = {\r\n            \"\\b\": \"\\\\b\",\r\n            \"\\t\": \"\\\\t\",\r\n            \"\\n\": \"\\\\n\",\r\n            \"\\f\": \"\\\\f\",\r\n            \"\\r\": \"\\\\r\",\r\n            \"\\\"\": \"\\\\\\\"\",\r\n            \"\\\\\": \"\\\\\\\\\"\r\n        };\r\n\r\n        var encodeString = function (s) {\r\n            if (/[\"\\\\\\x00-\\x1f]/.test(s)) {\r\n                return \"\\\"\" + s.replace(/([\\x00-\\x1f\\\\\"])/g, function (a, b) {\r\n                    var c = m[b];\r\n                    if (c) {\r\n                        return c;\r\n                    }\r\n                    c = b.charCodeAt();\r\n                    return \"\\\\u00\" +\r\n                        Math.floor(c / 16).toString(16) +\r\n                        (c % 16).toString(16);\r\n                }) + \"\\\"\";\r\n            }\r\n            return \"\\\"\" + s + \"\\\"\";\r\n        };\r\n\r\n        var encodeArray = function (o) {\r\n            var a = [\"[\"], b, i, l = o.length, v;\r\n            for (i = 0; i < l; i += 1) {\r\n                v = o[i];\r\n                switch (typeof v) {\r\n                    case \"undefined\":\r\n                    case \"function\":\r\n                    case \"unknown\":\r\n                        break;\r\n                    default:\r\n                        if (b) {\r\n                            a.push(\",\");\r\n                        }\r\n                        a.push(v === null ? \"null\" : BI.jsonEncode(v));\r\n                        b = true;\r\n                }\r\n            }\r\n            a.push(\"]\");\r\n            return a.join(\"\");\r\n        };\r\n\r\n        if (typeof o === \"undefined\" || o === null) {\r\n            return \"null\";\r\n        } else if (BI.isArray(o)) {\r\n            return encodeArray(o);\r\n        } else if (o instanceof Date) {\r\n            /*\r\n             * alex:原来只是把年月日时分秒简单地拼成一个String,无法decode\r\n             * 现在这么处理就可以decode了,但是JS.jsonDecode和Java.JSONObject也要跟着改一下\r\n             */\r\n            return BI.jsonEncode({\r\n                __time__: o.getTime()\r\n            });\r\n        } else if (typeof o === \"string\") {\r\n            return encodeString(o);\r\n        } else if (typeof o === \"number\") {\r\n            return isFinite(o) ? String(o) : \"null\";\r\n        } else if (typeof o === \"boolean\") {\r\n            return String(o);\r\n        } else if (BI.isFunction(o)) {\r\n            return String(o);\r\n        }\r\n        var a = [\"{\"], b, i, v;\r\n        for (i in o) {\r\n            if (!useHasOwn || o.hasOwnProperty(i)) {\r\n                v = o[i];\r\n                switch (typeof v) {\r\n                    case \"undefined\":\r\n                    case \"unknown\":\r\n                        break;\r\n                    default:\r\n                        if (b) {\r\n                            a.push(\",\");\r\n                        }\r\n                        a.push(BI.jsonEncode(i), \":\",\r\n                            v === null ? \"null\" : BI.jsonEncode(v));\r\n                        b = true;\r\n                }\r\n            }\r\n        }\r\n        a.push(\"}\");\r\n        return a.join(\"\");\r\n\r\n    };\r\n\r\n    BI.jsonDecode = function (text) {\r\n\r\n        try {\r\n            // 注意0啊\r\n            // var jo = $.parseJSON(text) || {};\r\n            var jo = BI.$ ? BI.$.parseJSON(text) : _global.JSON.parse(text);\r\n            if (jo == null) {\r\n                jo = {};\r\n            }\r\n        } catch (e) {\r\n            /*\r\n             * richie:浏览器只支持标准的JSON字符串转换，而jQuery会默认调用浏览器的window.JSON.parse()函数进行解析\r\n             * 比如：var str = \"{'a':'b'}\",这种形式的字符串转换为JSON就会抛异常\r\n             */\r\n            try {\r\n                jo = new Function(\"return \" + text)() || {};\r\n            } catch (e) {\r\n                // do nothing\r\n            }\r\n            if (jo == null) {\r\n                jo = [];\r\n            }\r\n        }\r\n        if (!_hasDateInJson(text)) {\r\n            return jo;\r\n        }\r\n\r\n        function _hasDateInJson (json) {\r\n            if (!json || typeof json !== \"string\") {\r\n                return false;\r\n            }\r\n            return json.indexOf(\"__time__\") != -1;\r\n        }\r\n\r\n        return (function (o) {\r\n            if (typeof o === \"string\") {\r\n                return o;\r\n            }\r\n            if (o && o.__time__ != null) {\r\n                return new Date(o.__time__);\r\n            }\r\n            for (var a in o) {\r\n                if (o[a] == o || typeof o[a] === \"object\" || BI._.isFunction(o[a])) {\r\n                    break;\r\n                }\r\n                o[a] = arguments.callee(o[a]);\r\n            }\r\n\r\n            return o;\r\n        })(jo);\r\n    };\r\n\r\n    /**\r\n     * 获取编码后的url\r\n     * @param urlTemplate url模板\r\n     * @param param 参数\r\n     * @returns {*|String}\r\n     * @example\r\n     * BI.getEncodeURL(\"design/{tableName}/{fieldName}\",{tableName: \"A\", fieldName: \"a\"}) //  design/A/a\r\n     */\r\n    BI.getEncodeURL = function (urlTemplate, param) {\r\n        return BI.replaceAll(urlTemplate, \"\\\\{(.*?)\\\\}\", function (ori, str) {\r\n            return BI.encodeURIComponent(BI.isObject(param) ? param[str] : param);\r\n        });\r\n    };\r\n\r\n    BI.encodeURIComponent = function (url) {\r\n        BI.specialCharsMap = BI.specialCharsMap || {};\r\n        url = url || \"\";\r\n        url = BI.replaceAll(url + \"\", BI.keys(BI.specialCharsMap || []).join(\"|\"), function (str) {\r\n            switch (str) {\r\n                case \"\\\\\":\r\n                    return BI.specialCharsMap[\"\\\\\\\\\"] || str;\r\n                default:\r\n                    return BI.specialCharsMap[str] || str;\r\n            }\r\n        });\r\n        return _global.encodeURIComponent(url);\r\n    };\r\n\r\n    BI.decodeURIComponent = function (url) {\r\n        var reserveSpecialCharsMap = {};\r\n        BI.each(BI.specialCharsMap, function (initialChar, encodeChar) {\r\n            reserveSpecialCharsMap[encodeChar] = initialChar === \"\\\\\\\\\" ? \"\\\\\" : initialChar;\r\n        });\r\n        url = url || \"\";\r\n        url = BI.replaceAll(url + \"\", BI.keys(reserveSpecialCharsMap || []).join(\"|\"), function (str) {\r\n            return reserveSpecialCharsMap[str] || str;\r\n        });\r\n        return _global.decodeURIComponent(url);\r\n    };\r\n\r\n    BI.contentFormat = function (cv, fmt) {\r\n        if (isEmpty(cv)) {\r\n            // 原值为空，返回空字符\r\n            return \"\";\r\n        }\r\n        var text = cv.toString();\r\n        if (isEmpty(fmt)) {\r\n            // 格式为空，返回原字符\r\n            return text;\r\n        }\r\n        if (fmt.match(/^T/)) {\r\n            // T - 文本格式\r\n            return text;\r\n        } else if (fmt.match(/^D/)) {\r\n            // D - 日期(时间)格式\r\n            if (!(cv instanceof Date)) {\r\n                if (typeof cv === \"number\") {\r\n                    // 毫秒数类型\r\n                    cv = new Date(cv);\r\n                } else {\r\n                    //字符串类型转化为date类型\r\n                    cv = new Date(Date.parse((\"\" + cv).replace(/-|\\./g, \"/\")));\r\n                }\r\n            }\r\n            if (!isInvalidDate(cv) && !BI.isNull(cv)) {\r\n                var needTrim = fmt.match(/^DT/);\r\n                text = BI.date2Str(cv, fmt.substring(needTrim ? 2 : 1));\r\n            }\r\n        } else if (fmt.match(/E/)) {\r\n            // 科学计数格式\r\n            text = _eFormat(text, fmt);\r\n        } else {\r\n            // 数字格式\r\n            text = _numberFormat(text, fmt);\r\n        }\r\n        // ¤ - 货币格式\r\n        text = text.replace(/¤/g, \"￥\");\r\n        return text;\r\n    };\r\n\r\n    /**\r\n     * 将Java提供的日期格式字符串装换为JS识别的日期格式字符串\r\n     * @class FR.parseFmt\r\n     * @param fmt 日期格式\r\n     * @returns {String}\r\n     */\r\n    BI.parseFmt = function (fmt) {\r\n        if (!fmt) {\r\n            return \"\";\r\n        }\r\n        //日期\r\n        fmt = String(fmt)\r\n        //年\r\n            .replace(/y{4,}/g, \"%Y\")//yyyy的时候替换为Y\r\n            .replace(/y{2}/g, \"%y\")//yy的时候替换为y\r\n            //月\r\n            .replace(/M{4,}/g, \"%b\")//MMMM的时候替换为b，八\r\n            .replace(/M{3}/g, \"%B\")//MMM的时候替换为M，八月\r\n            .replace(/M{2}/g, \"%X\")//MM的时候替换为X，08\r\n            .replace(/M{1}/g, \"%x\")//M的时候替换为x，8\r\n            .replace(/a{1}/g, \"%p\");\r\n        //天\r\n        if (new RegExp(\"d{2,}\", \"g\").test(fmt)) {\r\n            fmt = fmt.replace(/d{2,}/g, \"%d\");//dd的时候替换为d\r\n        } else {\r\n            fmt = fmt.replace(/d{1}/g, \"%e\");//d的时候替换为j\r\n        }\r\n        //时\r\n        if (new RegExp(\"h{2,}\", \"g\").test(fmt)) {//12小时制\r\n            fmt = fmt.replace(/h{2,}/g, \"%I\");\r\n        } else {\r\n            fmt = fmt.replace(/h{1}/g, \"%I\");\r\n        }\r\n        if (new RegExp(\"H{2,}\", \"g\").test(fmt)) {//24小时制\r\n            fmt = fmt.replace(/H{2,}/g, \"%H\");\r\n        } else {\r\n            fmt = fmt.replace(/H{1}/g, \"%H\");\r\n        }\r\n        fmt = fmt.replace(/m{2,}/g, \"%M\")//分\r\n        //秒\r\n            .replace(/s{2,}/g, \"%S\");\r\n\r\n        return fmt;\r\n    };\r\n\r\n    /**\r\n     * 把字符串按照对应的格式转化成日期对象\r\n     *\r\n     *      @example\r\n     *      var result = BI.str2Date('2013-12-12', 'yyyy-MM-dd');//Thu Dec 12 2013 00:00:00 GMT+0800\r\n     *\r\n     * @class BI.str2Date\r\n     * @param str 字符串\r\n     * @param format 日期格式\r\n     * @returns {*}\r\n     */\r\n    BI.str2Date = function (str, format) {\r\n        if (typeof str != \"string\" || typeof format != \"string\") {\r\n            return null;\r\n        }\r\n        var fmt = BI.parseFmt(format);\r\n        return BI.parseDateTime(str, fmt);\r\n    };\r\n\r\n    /**\r\n     * 把日期对象按照指定格式转化成字符串\r\n     *\r\n     *      @example\r\n     *      var date = new Date('Thu Dec 12 2013 00:00:00 GMT+0800');\r\n     *      var result = BI.date2Str(date, 'yyyy-MM-dd');//2013-12-12\r\n     *\r\n     * @class BI.date2Str\r\n     * @param date 日期\r\n     * @param format 日期格式\r\n     * @returns {String}\r\n     */\r\n    BI.date2Str = function (date, format) {\r\n        if (!date) {\r\n            return \"\";\r\n        }\r\n        // O(len(format))\r\n        var len = format.length, result = \"\";\r\n        if (len > 0) {\r\n            var flagch = format.charAt(0), start = 0, str = flagch;\r\n            for (var i = 1; i < len; i++) {\r\n                var ch = format.charAt(i);\r\n                if (flagch !== ch) {\r\n                    result += compileJFmt({\r\n                        char: flagch,\r\n                        str: str,\r\n                        len: i - start\r\n                    }, date);\r\n                    flagch = ch;\r\n                    start = i;\r\n                    str = flagch;\r\n                } else {\r\n                    str += ch;\r\n                }\r\n            }\r\n            result += compileJFmt({\r\n                char: flagch,\r\n                str: str,\r\n                len: len - start\r\n            }, date);\r\n        }\r\n        return result;\r\n\r\n        function compileJFmt (jfmt, date) {\r\n            var str = jfmt.str, len = jfmt.len, ch = jfmt[\"char\"];\r\n            switch (ch) {\r\n                case \"E\": // 星期\r\n                    str = BI.getFullDayName(date.getDay());\r\n                    break;\r\n                case \"y\": // 年\r\n                    if (len <= 3) {\r\n                        str = (date.getFullYear() + \"\").slice(2, 4);\r\n                    } else {\r\n                        str = date.getFullYear();\r\n                    }\r\n                    break;\r\n                case \"M\": // 月\r\n                    if (len > 2) {\r\n                        str = BI.getMonthName(date.getMonth());\r\n                    } else if (len < 2) {\r\n                        str = date.getMonth() + 1;\r\n                    } else {\r\n                        str = BI.leftPad(date.getMonth() + 1 + \"\", 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"d\": // 日\r\n                    if (len > 1) {\r\n                        str = BI.leftPad(date.getDate() + \"\", 2, \"0\");\r\n                    } else {\r\n                        str = date.getDate();\r\n                    }\r\n                    break;\r\n                case \"h\": // 时(12)\r\n                    var hour = date.getHours() % 12;\r\n                    if (hour === 0) {\r\n                        hour = 12;\r\n                    }\r\n                    if (len > 1) {\r\n                        str = BI.leftPad(hour + \"\", 2, \"0\");\r\n                    } else {\r\n                        str = hour;\r\n                    }\r\n                    break;\r\n                case \"H\": // 时(24)\r\n                    if (len > 1) {\r\n                        str = BI.leftPad(date.getHours() + \"\", 2, \"0\");\r\n                    } else {\r\n                        str = date.getHours();\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    if (len > 1) {\r\n                        str = BI.leftPad(date.getMinutes() + \"\", 2, \"0\");\r\n                    } else {\r\n                        str = date.getMinutes();\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    if (len > 1) {\r\n                        str = BI.leftPad(date.getSeconds() + \"\", 2, \"0\");\r\n                    } else {\r\n                        str = date.getSeconds();\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    str = date.getHours() < 12 ? \"am\" : \"pm\";\r\n                    break;\r\n                case \"z\":\r\n                    str = BI.getTimezone(date);\r\n                    break;\r\n                default:\r\n                    str = jfmt.str;\r\n                    break;\r\n            }\r\n            return str;\r\n        }\r\n    };\r\n\r\n    BI.object2Number = function (value) {\r\n        if (value == null) {\r\n            return 0;\r\n        }\r\n        if (typeof value === \"number\") {\r\n            return value;\r\n        }\r\n        var str = value + \"\";\r\n        if (str.indexOf(\".\") === -1) {\r\n            return parseInt(str);\r\n        }\r\n        return parseFloat(str);\r\n    };\r\n\r\n    BI.object2Date = function (obj) {\r\n        if (obj == null) {\r\n            return new Date();\r\n        }\r\n        if (obj instanceof Date) {\r\n            return obj;\r\n        } else if (typeof obj === \"number\") {\r\n            return new Date(obj);\r\n        }\r\n        var str = obj + \"\";\r\n        str = str.replace(/-/g, \"/\");\r\n        var dt = new Date(str);\r\n        if (!isInvalidDate(dt)) {\r\n            return dt;\r\n        }\r\n\r\n        return new Date();\r\n\r\n    };\r\n\r\n    BI.object2Time = function (obj) {\r\n        if (obj == null) {\r\n            return new Date();\r\n        }\r\n        if (obj instanceof Date) {\r\n            return obj;\r\n        }\r\n        var str = obj + \"\";\r\n        str = str.replace(/-/g, \"/\");\r\n        var dt = new Date(str);\r\n        if (!isInvalidDate(dt)) {\r\n            return dt;\r\n        }\r\n        if (str.indexOf(\"/\") === -1 && str.indexOf(\":\") !== -1) {\r\n            dt = new Date(\"1970/01/01 \" + str);\r\n            if (!isInvalidDate(dt)) {\r\n                return dt;\r\n            }\r\n        }\r\n        dt = BI.parseDateTime(str, \"HH:mm:ss\");\r\n        if (!isInvalidDate(dt)) {\r\n            return dt;\r\n        }\r\n        return new Date();\r\n\r\n    };\r\n})();\r\n","/**\r\n * 对数组对象的扩展\r\n * @class Array\r\n */\r\nBI._.extend(BI, {\r\n\r\n    pushArray: function (sArray, array) {\r\n        for (var i = 0; i < array.length; i++) {\r\n            sArray.push(array[i]);\r\n        }\r\n    },\r\n    pushDistinct: function (sArray, obj) {\r\n        if (!BI.contains(sArray, obj)) {\r\n            sArray.push(obj);\r\n        }\r\n    },\r\n    pushDistinctArray: function (sArray, array) {\r\n        for (var i = 0, len = array.length; i < len; i++) {\r\n            BI.pushDistinct(sArray, array[i]);\r\n        }\r\n    }\r\n});\r\n","/** Constants used for time computations */\r\nBI.Date = BI.Date || {};\r\nBI.Date.SECOND = 1000;\r\nBI.Date.MINUTE = 60 * BI.Date.SECOND;\r\nBI.Date.HOUR = 60 * BI.Date.MINUTE;\r\nBI.Date.DAY = 24 * BI.Date.HOUR;\r\nBI.Date.WEEK = 7 * BI.Date.DAY;\r\n\r\n// Monday first, etc.\r\nBI.Date._FD = 1;\r\n\r\n// short month names\r\nBI.Date._SMN = [0,\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10,\r\n    11];\r\n\r\n/** Adds the number of days array to the Date object. */\r\nBI.Date._MD = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n// 实际上无论周几作为一周的第一天，周初周末都是在-6-0间做偏移，用一个数组就可以\r\nBI.Date._OFFSET = [0, -1, -2, -3, -4, -5, -6];\r\n\r\nBI._.extend(BI, {\r\n    /**\r\n     * 获取时区\r\n     * @returns {String}\r\n     */\r\n    getTimezone: function (date) {\r\n        return date.toString().replace(/^.* (?:\\((.*)\\)|([A-Z]{1,4})(?:[\\-+][0-9]{4})?(?: -?\\d+)?)$/, \"$1$2\").replace(/[^A-Z]/g, \"\");\r\n    },\r\n\r\n    /** Returns the number of days in the current month */\r\n    getMonthDays: function (date, month) {\r\n        var year = date.getFullYear();\r\n        if (typeof month === \"undefined\") {\r\n            month = date.getMonth();\r\n        }\r\n        if (((0 == (year % 4)) && ((0 != (year % 100)) || (0 == (year % 400)))) && month == 1) {\r\n            return 29;\r\n        }\r\n        return BI.Date._MD[month];\r\n\r\n    },\r\n\r\n    /**\r\n     * 获取每月的最后一天\r\n     * @returns {Date}\r\n     */\r\n    getLastDateOfMonth: function (date) {\r\n        return BI.getDate(date.getFullYear(), date.getMonth(), BI.getMonthDays(date));\r\n    },\r\n\r\n    /** Returns the number of day in the year. */\r\n    getDayOfYear: function (date) {\r\n        var now = BI.getDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);\r\n        var then = BI.getDate(date.getFullYear(), 0, 0, 0, 0, 0);\r\n        var time = now - then;\r\n        return Math.floor(time / BI.Date.DAY);\r\n    },\r\n\r\n    /** Returns the number of the week in year, as defined in ISO 8601. */\r\n    getWeekNumber: function (date) {\r\n        var d = BI.getDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);\r\n        var week = d.getDay();\r\n        var startOfWeek = BI.StartOfWeek % 7;\r\n        var middleDay = (startOfWeek + 3) % 7;\r\n        middleDay = middleDay || 7;\r\n        // 偏移到周周首之前需要多少天\r\n        var offsetWeekStartCount = week < startOfWeek ? (7 + week - startOfWeek) : (week - startOfWeek);\r\n        var offsetWeekMiddleCount = middleDay < startOfWeek ? (7 + middleDay - startOfWeek) : (middleDay - startOfWeek);\r\n        d.setDate(d.getDate() - offsetWeekStartCount + offsetWeekMiddleCount);\r\n        var ms = d.valueOf();\r\n        d.setMonth(0);\r\n        d.setDate(1);\r\n        return Math.floor((ms - d.valueOf()) / (7 * 864e5)) + 1;\r\n    },\r\n\r\n    getQuarter: function (date) {\r\n        return Math.floor(date.getMonth() / 3) + 1;\r\n    },\r\n\r\n    // 离当前时间多少天的时间\r\n    getOffsetDate: function (date, offset) {\r\n        return BI.getDate(BI.getTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()) + offset * 864e5);\r\n    },\r\n\r\n    getOffsetQuarter: function (date, n) {\r\n        var dt = BI.getDate(BI.getTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));\r\n        var day = dt.getDate();\r\n        var monthDay = BI.getMonthDays(BI.getDate(dt.getFullYear(), dt.getMonth() + BI.parseInt(n) * 3, 1));\r\n        if (day > monthDay) {\r\n            day = monthDay;\r\n        }\r\n        dt.setDate(day);\r\n        dt.setMonth(dt.getMonth() + parseInt(n) * 3);\r\n        return dt;\r\n    },\r\n\r\n    // 得到本季度的起始月份\r\n    getQuarterStartMonth: function (date) {\r\n        var quarterStartMonth = 0;\r\n        var nowMonth = date.getMonth();\r\n        if (nowMonth < 3) {\r\n            quarterStartMonth = 0;\r\n        }\r\n        if (2 < nowMonth && nowMonth < 6) {\r\n            quarterStartMonth = 3;\r\n        }\r\n        if (5 < nowMonth && nowMonth < 9) {\r\n            quarterStartMonth = 6;\r\n        }\r\n        if (nowMonth > 8) {\r\n            quarterStartMonth = 9;\r\n        }\r\n        return quarterStartMonth;\r\n    },\r\n    // 获得本季度的起始日期\r\n    getQuarterStartDate: function (date) {\r\n        return BI.getDate(date.getFullYear(), BI.getQuarterStartMonth(date), 1);\r\n    },\r\n    // 得到本季度的结束日期\r\n    getQuarterEndDate: function (date) {\r\n        var quarterEndMonth = BI.getQuarterStartMonth(date) + 2;\r\n        return BI.getDate(date.getFullYear(), quarterEndMonth, BI.getMonthDays(date, quarterEndMonth));\r\n    },\r\n\r\n    // 指定日期n个月之前或之后的日期\r\n    getOffsetMonth: function (date, n) {\r\n        var dt = BI.getDate(BI.getTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));\r\n        var day = dt.getDate();\r\n        var monthDay = BI.getMonthDays(BI.getDate(dt.getFullYear(), dt.getMonth() + parseInt(n), 1));\r\n        if (day > monthDay) {\r\n            day = monthDay;\r\n        }\r\n        dt.setDate(day);\r\n        dt.setMonth(dt.getMonth() + parseInt(n));\r\n        return dt;\r\n    },\r\n\r\n    // 获得本周的起始日期\r\n    getWeekStartDate: function (date) {\r\n        var w = date.getDay();\r\n        var startOfWeek = BI.StartOfWeek % 7;\r\n        return BI.getOffsetDate(date, BI.Date._OFFSET[w < startOfWeek ? (7 + w - startOfWeek) : (w - startOfWeek)]);\r\n    },\r\n    // 得到本周的结束日期\r\n    getWeekEndDate: function (date) {\r\n        var w = date.getDay();\r\n        var startOfWeek = BI.StartOfWeek % 7;\r\n        return BI.getOffsetDate(date, BI.Date._OFFSET[w < startOfWeek ? (7 + w - startOfWeek) : (w - startOfWeek)] + 6);\r\n    },\r\n\r\n    getFullDayName: function (index) {\r\n        return [BI.i18nText(\"BI-Basic_Sunday\"),\r\n            BI.i18nText(\"BI-Basic_Monday\"),\r\n            BI.i18nText(\"BI-Basic_Tuesday\"),\r\n            BI.i18nText(\"BI-Basic_Wednesday\"),\r\n            BI.i18nText(\"BI-Basic_Thursday\"),\r\n            BI.i18nText(\"BI-Basic_Friday\"),\r\n            BI.i18nText(\"BI-Basic_Saturday\"),\r\n            BI.i18nText(\"BI-Basic_Sunday\")][index];\r\n    },\r\n\r\n    getShortDayName: function (index) {\r\n        return [BI.i18nText(\"BI-Basic_Simple_Sunday\"),\r\n            BI.i18nText(\"BI-Basic_Simple_Monday\"),\r\n            BI.i18nText(\"BI-Basic_Simple_Tuesday\"),\r\n            BI.i18nText(\"BI-Basic_Simple_Wednesday\"),\r\n            BI.i18nText(\"BI-Basic_Simple_Thursday\"),\r\n            BI.i18nText(\"BI-Basic_Simple_Friday\"),\r\n            BI.i18nText(\"BI-Basic_Simple_Saturday\"),\r\n            BI.i18nText(\"BI-Basic_Simple_Sunday\")][index];\r\n    },\r\n\r\n    getMonthName: function (index) {\r\n        return [BI.i18nText(\"BI-Basic_January\"),\r\n            BI.i18nText(\"BI-Basic_February\"),\r\n            BI.i18nText(\"BI-Basic_March\"),\r\n            BI.i18nText(\"BI-Basic_April\"),\r\n            BI.i18nText(\"BI-Basic_May\"),\r\n            BI.i18nText(\"BI-Basic_June\"),\r\n            BI.i18nText(\"BI-Basic_July\"),\r\n            BI.i18nText(\"BI-Basic_August\"),\r\n            BI.i18nText(\"BI-Basic_September\"),\r\n            BI.i18nText(\"BI-Basic_October\"),\r\n            BI.i18nText(\"BI-Basic_November\"),\r\n            BI.i18nText(\"BI-Basic_December\")][index]\r\n    },\r\n\r\n    getQuarterName: function (index) {\r\n        return [\"\", BI.i18nText(\"BI-Quarter_1\"),\r\n            BI.i18nText(\"BI-Quarter_2\"),\r\n            BI.i18nText(\"BI-Quarter_3\"),\r\n            BI.i18nText(\"BI-Quarter_4\")][index];\r\n    },\r\n\r\n    // 格式化打印日期\r\n    print: function (date, str) {\r\n        var m = date.getMonth();\r\n        var d = date.getDate();\r\n        var y = date.getFullYear();\r\n        var yWith4number = y + \"\";\r\n        while (yWith4number.length < 4) {\r\n            yWith4number = \"0\" + yWith4number;\r\n        }\r\n        var wn = BI.getWeekNumber(date);\r\n        var qr = BI.getQuarter(date);\r\n        var w = date.getDay();\r\n        var s = {};\r\n        var hr = date.getHours();\r\n        var pm = (hr >= 12);\r\n        var ir = (pm) ? (hr - 12) : hr;\r\n        var dy = BI.getDayOfYear(date);\r\n        if (ir == 0) {\r\n            ir = 12;\r\n        }\r\n        var min = date.getMinutes();\r\n        var sec = date.getSeconds();\r\n        s[\"%a\"] = BI.getShortDayName(w); // abbreviated weekday name [FIXME: I18N]\r\n        s[\"%A\"] = BI.getFullDayName(w); // full weekday name\r\n        s[\"%b\"] = BI.Date._SMN[m]; // abbreviated month name [FIXME: I18N]\r\n        s[\"%B\"] = BI.getMonthName(m); // full month name\r\n        // FIXME: %c : preferred date and time representation for the current locale\r\n        s[\"%C\"] = 1 + Math.floor(y / 100); // the century number\r\n        s[\"%d\"] = (d < 10) ? (\"0\" + d) : d; // the day of the month (range 01 to 31)\r\n        s[\"%e\"] = d; // the day of the month (range 1 to 31)\r\n        // FIXME: %D : american date style: %m/%d/%y\r\n        // FIXME: %E, %F, %G, %g, %h (man strftime)\r\n        s[\"%H\"] = (hr < 10) ? (\"0\" + hr) : hr; // hour, range 00 to 23 (24h format)\r\n        s[\"%I\"] = (ir < 10) ? (\"0\" + ir) : ir; // hour, range 01 to 12 (12h format)\r\n        s[\"%j\"] = (dy < 100) ? ((dy < 10) ? (\"00\" + dy) : (\"0\" + dy)) : dy; // day of the year (range 001 to 366)\r\n        s[\"%k\"] = hr + \"\";\t\t// hour, range 0 to 23 (24h format)\r\n        s[\"%l\"] = ir + \"\";\t\t// hour, range 1 to 12 (12h format)\r\n        s[\"%X\"] = (m < 9) ? (\"0\" + (1 + m)) : (1 + m); // month, range 01 to 12\r\n        s[\"%x\"] = m + 1; // month, range 1 to 12\r\n        s[\"%M\"] = (min < 10) ? (\"0\" + min) : min; // minute, range 00 to 59\r\n        s[\"%n\"] = \"\\n\";\t\t// a newline character\r\n        s[\"%p\"] = pm ? \"PM\" : \"AM\";\r\n        s[\"%P\"] = pm ? \"pm\" : \"am\";\r\n        // FIXME: %r : the time in am/pm notation %I:%M:%S %p\r\n        // FIXME: %R : the time in 24-hour notation %H:%M\r\n        s[\"%s\"] = Math.floor(date.getTime() / 1000);\r\n        s[\"%S\"] = (sec < 10) ? (\"0\" + sec) : sec; // seconds, range 00 to 59\r\n        s[\"%t\"] = \"\\t\";\t\t// a tab character\r\n        // FIXME: %T : the time in 24-hour notation (%H:%M:%S)\r\n        s[\"%U\"] = s[\"%W\"] = s[\"%V\"] = (wn < 10) ? (\"0\" + wn) : wn;\r\n        s[\"%u\"] = w + 1;\t// the day of the week (range 1 to 7, 1 = MON)\r\n        s[\"%w\"] = w;\t\t// the day of the week (range 0 to 6, 0 = SUN)\r\n        // FIXME: %x : preferred date representation for the current locale without the time\r\n        // FIXME: %X : preferred time representation for the current locale without the date\r\n        s[\"%y\"] = yWith4number.substr(2, 2); // year without the century (range 00 to 99)\r\n        s[\"%Y\"] = yWith4number;\t\t// year with the century\r\n        s[\"%%\"] = \"%\";\t\t// a literal '%' character\r\n        s[\"%q\"] = \"0\" + qr;\r\n        s[\"%Q\"] = qr;\r\n\r\n        var re = /%./g;\r\n        BI.isKhtml = BI.isKhtml || function () {\r\n            if(!_global.navigator) {\r\n                return false;\r\n            }\r\n            return /Konqueror|Safari|KHTML/i.test(navigator.userAgent);\r\n        };\r\n\r\n        // 包含年周的格式化，ISO8601标准周的计数会影响年\r\n        if ((str.indexOf(\"%Y\") !== -1 || str.indexOf(\"%y\") !== -1) && (str.indexOf(\"%W\") !== -1 || str.indexOf(\"%U\") !== -1 || str.indexOf(\"%V\") !== -1)) {\r\n            switch (wn) {\r\n                // 如果周数是1，但是当前却在12月，表示此周数为下一年的\r\n                case 1:\r\n                    if (m === 11) {\r\n                        s[\"%y\"] = parseInt(s[\"%y\"]) + 1;\r\n                        s[\"%Y\"] = parseInt(s[\"%Y\"]) + 1;\r\n                    }\r\n                    break;\r\n                // 如果周数是53，但是当前却在1月，表示此周数为上一年的\r\n                case 53:\r\n                    if (m === 0) {\r\n                        s[\"%y\"] = parseInt(s[\"%y\"]) - 1;\r\n                        s[\"%Y\"] = parseInt(s[\"%Y\"]) - 1;\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (!BI.isKhtml()) {\r\n            return str.replace(re, function (par) {\r\n                return s[par] || par;\r\n            });\r\n        }\r\n        var a = str.match(re);\r\n        for (var i = 0; i < a.length; i++) {\r\n            var tmp = s[a[i]];\r\n            if (tmp) {\r\n                re = new RegExp(a[i], \"g\");\r\n                str = str.replace(re, tmp);\r\n            }\r\n        }\r\n\r\n        return str;\r\n    }\r\n});\r\n","/**\r\n * 基本的函数\r\n * Created by GUY on 2015/6/24.\r\n */\r\nBI.Func = BI.Func || {};\r\nBI._.extend(BI.Func, {\r\n    /**\r\n     * 创建唯一的名字\r\n     * @param array\r\n     * @param name\r\n     * @returns {*}\r\n     */\r\n    createDistinctName: function (array, name) {\r\n        var src = name, idx = 1;\r\n        name = name || \"\";\r\n        while (true) {\r\n            if (BI.every(array, function (i, item) {\r\n                return BI.isKey(item) ? item !== name : item.name !== name;\r\n            })) {\r\n                break;\r\n            }\r\n            name = src + (idx++);\r\n        }\r\n        return name;\r\n    },\r\n\r\n    /**\r\n     * 获取字符宽度\r\n     * @param str\r\n     * @return {number}\r\n     */\r\n    getGBWidth: function (str) {\r\n        str = str + \"\";\r\n        str = str.replace(/[^\\x00-\\xff]/g, \"xx\");\r\n        return Math.ceil(str.length / 2);\r\n    },\r\n\r\n    /**\r\n     * 获取搜索结果\r\n     * @param items\r\n     * @param keyword\r\n     * @param param  搜索哪个属性\r\n     */\r\n    getSearchResult: function (items, keyword, param) {\r\n        var isArray = BI.isArray(items);\r\n        items = isArray ? BI.flatten(items) : items;\r\n        param || (param = \"text\");\r\n        if (!BI.isKey(keyword)) {\r\n            return {\r\n                find: items,\r\n                match: isArray ? [] : {}\r\n            };\r\n        }\r\n        var t, text, py;\r\n        keyword = BI.toUpperCase(keyword);\r\n        var matched = isArray ? [] : {}, find = isArray ? [] : {};\r\n        BI.each(items, function (i, item) {\r\n            // 兼容item为null的处理\r\n            if (BI.isNull(item)) {\r\n                return;\r\n            }\r\n            t = BI.stripEL(item);\r\n            text = BI.find([t[param], t.text, t.value, t.name, t], function (index, val) {\r\n                return BI.isNotNull(val);\r\n            });\r\n\r\n            if (BI.isNull(text) || BI.isObject(text)) return;\r\n\r\n            py = BI.makeFirstPY(text, {\r\n                splitChar: \"\\u200b\"\r\n            });\r\n            text = BI.toUpperCase(text);\r\n            py = BI.toUpperCase(py);\r\n            var pidx;\r\n            if (text.indexOf(keyword) > -1) {\r\n                if (text === keyword) {\r\n                    isArray ? matched.push(item) : (matched[i] = item);\r\n                } else {\r\n                    isArray ? find.push(item) : (find[i] = item);\r\n                }\r\n                // BI-56386 这边两个pid / text.length是为了防止截取的首字符串不是完整的，但光这样做还不够，即时错位了，也不能说明就不符合条件\r\n            } else if (pidx = py.indexOf(keyword), (pidx > -1)) {\r\n                if (text === keyword || keyword.length === text.length) {\r\n                    isArray ? matched.push(item) : (matched[i] = item);\r\n                } else {\r\n                    isArray ? find.push(item) : (find[i] = item);\r\n                }\r\n            }\r\n        });\r\n        return {\r\n            match: matched,\r\n            find: find\r\n        };\r\n    },\r\n\r\n    /**\r\n     * 获取按GB2312排序的结果\r\n     * @param items\r\n     * @param key\r\n     * @return {any[]}\r\n     */\r\n    getSortedResult: function (items, key) {\r\n        var getTextOfItem = BI.isFunction(key) ? key :\r\n            function (item, key) {\r\n                if (BI.isNotNull(key)) {\r\n                    return item[key];\r\n                }\r\n                if (BI.isNotNull(item.text)) {\r\n                    return item.text;\r\n                }\r\n                if (BI.isNotNull(item.value)) {\r\n                    return item.value;\r\n                }\r\n                return item;\r\n            };\r\n\r\n        return items.sort(function (item1, item2) {\r\n            var str1 = getTextOfItem(item1, key);\r\n            var str2 = getTextOfItem(item2, key);\r\n            if (BI.isNull(str1) && BI.isNull(str2)) {\r\n                return 0;\r\n            }\r\n            if (BI.isNull(str1)) {\r\n                return -1;\r\n            }\r\n            if (BI.isNull(str2)) {\r\n                return 1;\r\n            }\r\n            if (str1 === str2) {\r\n                return 0;\r\n            }\r\n            var len1 = str1.length, len2 = str2.length;\r\n            for (var i = 0; i < len1 && i < len2; i++) {\r\n                var char1 = str1[i];\r\n                var char2 = str2[i];\r\n                if (char1 !== char2) {\r\n                    // 找不到的字符都往后面放\r\n                    return (BI.isNull(BI.CODE_INDEX[char1]) ? BI.MAX : BI.CODE_INDEX[char1]) - (BI.isNull(BI.CODE_INDEX[char2]) ? BI.MAX : BI.CODE_INDEX[char2]);\r\n                }\r\n            }\r\n            return len1 - len2;\r\n        });\r\n    }\r\n});\r\n\r\nBI._.extend(BI, {\r\n    beforeFunc: function (sFunc, func) {\r\n        var __self = sFunc;\r\n        return function () {\r\n            if (func.apply(sFunc, arguments) === false) {\r\n                return false;\r\n            }\r\n            return __self.apply(sFunc, arguments);\r\n        };\r\n    },\r\n\r\n    afterFunc: function (sFunc, func) {\r\n        var __self = sFunc;\r\n        return function () {\r\n            var ret = __self.apply(sFunc, arguments);\r\n            if (ret === false) {\r\n                return false;\r\n            }\r\n            func.apply(sFunc, arguments);\r\n            return ret;\r\n        };\r\n    }\r\n});\r\n","BI._.extend(BI, {\r\n    // 给Number类型增加一个add方法，调用起来更加方便。\r\n    add: function (num, arg) {\r\n        return accAdd(arg, num);\r\n\r\n        /**\r\n         ** 加法函数，用来得到精确的加法结果\r\n         ** 说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。\r\n         ** 调用：accAdd(arg1,arg2)\r\n         ** 返回值：arg1加上arg2的精确结果\r\n         **/\r\n        function accAdd (arg1, arg2) {\r\n            var r1, r2, m, c;\r\n            try {\r\n                r1 = arg1.toString().split(\".\")[1].length;\r\n            } catch (e) {\r\n                r1 = 0;\r\n            }\r\n            try {\r\n                r2 = arg2.toString().split(\".\")[1].length;\r\n            } catch (e) {\r\n                r2 = 0;\r\n            }\r\n            c = Math.abs(r1 - r2);\r\n            m = Math.pow(10, Math.max(r1, r2));\r\n            if (c > 0) {\r\n                var cm = Math.pow(10, c);\r\n                if (r1 > r2) {\r\n                    arg1 = Number(arg1.toString().replace(\".\", \"\"));\r\n                    arg2 = Number(arg2.toString().replace(\".\", \"\")) * cm;\r\n                } else {\r\n                    arg1 = Number(arg1.toString().replace(\".\", \"\")) * cm;\r\n                    arg2 = Number(arg2.toString().replace(\".\", \"\"));\r\n                }\r\n            } else {\r\n                arg1 = Number(arg1.toString().replace(\".\", \"\"));\r\n                arg2 = Number(arg2.toString().replace(\".\", \"\"));\r\n            }\r\n            return (arg1 + arg2) / m;\r\n        }\r\n    },\r\n\r\n    // 给Number类型增加一个sub方法，调用起来更加方便。\r\n    sub: function (num, arg) {\r\n        return accSub(num, arg);\r\n\r\n        /**\r\n         ** 减法函数，用来得到精确的减法结果\r\n         ** 说明：javascript的减法结果会有误差，在两个浮点数相减的时候会比较明显。这个函数返回较为精确的减法结果。\r\n         ** 调用：accSub(arg1,arg2)\r\n         ** 返回值：arg1加上arg2的精确结果\r\n         **/\r\n        function accSub (arg1, arg2) {\r\n            var r1, r2, m, n;\r\n            try {\r\n                r1 = arg1.toString().split(\".\")[1].length;\r\n            } catch (e) {\r\n                r1 = 0;\r\n            }\r\n            try {\r\n                r2 = arg2.toString().split(\".\")[1].length;\r\n            } catch (e) {\r\n                r2 = 0;\r\n            }\r\n            m = Math.pow(10, Math.max(r1, r2)); // last modify by deeka //动态控制精度长度\r\n            n = (r1 >= r2) ? r1 : r2;\r\n            return ((arg1 * m - arg2 * m) / m).toFixed(n);\r\n        }\r\n    },\r\n\r\n    // 给Number类型增加一个mul方法，调用起来更加方便。\r\n    mul: function (num, arg) {\r\n        return accMul(arg, num);\r\n\r\n        /**\r\n         ** 乘法函数，用来得到精确的乘法结果\r\n         ** 说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。\r\n         ** 调用：accMul(arg1,arg2)\r\n         ** 返回值：arg1乘以 arg2的精确结果\r\n         **/\r\n        function accMul (arg1, arg2) {\r\n            var m = 0, s1 = arg1.toString(), s2 = arg2.toString();\r\n            try {\r\n                m += s1.split(\".\")[1].length;\r\n            } catch (e) {\r\n            }\r\n            try {\r\n                m += s2.split(\".\")[1].length;\r\n            } catch (e) {\r\n            }\r\n            return Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\")) / Math.pow(10, m);\r\n        }\r\n    },\r\n    \r\n    // 给Number类型增加一个div方法，调用起来更加方便。\r\n    div: function (num, arg) {\r\n        return accDivide(num, arg);\r\n\r\n        /**\r\n         * Return digits length of a number\r\n         * @param {*number} num Input number\r\n         */\r\n        function digitLength (num) {\r\n            // Get digit length of e\r\n            var eSplit = num.toString().split(/[eE]/);\r\n            var len = (eSplit[0].split(\".\")[1] || \"\").length - (+(eSplit[1] || 0));\r\n            return len > 0 ? len : 0;\r\n        }\r\n        /**\r\n         * 把小数转成整数，支持科学计数法。如果是小数则放大成整数\r\n         * @param {*number} num 输入数\r\n         */\r\n        function float2Fixed (num) {\r\n            if (num.toString().indexOf(\"e\") === -1) {\r\n                return Number(num.toString().replace(\".\", \"\"));\r\n            }\r\n            var dLen = digitLength(num);\r\n            return dLen > 0 ? num * Math.pow(10, dLen) : num;\r\n        }\r\n\r\n        /**\r\n         * 精确乘法\r\n         */\r\n        function times (num1, num2) {\r\n            var others = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                others[_i - 2] = arguments[_i];\r\n            }\r\n            if (others.length > 0) {\r\n                return times.apply(void 0, [times(num1, num2), others[0]].concat(others.slice(1)));\r\n            }\r\n            var num1Changed = float2Fixed(num1);\r\n            var num2Changed = float2Fixed(num2);\r\n            var baseNum = digitLength(num1) + digitLength(num2);\r\n            var leftValue = num1Changed * num2Changed;\r\n            return leftValue / Math.pow(10, baseNum);\r\n        }\r\n\r\n        /**\r\n         * 精确除法\r\n         */\r\n        function accDivide (num1, num2) {\r\n            var others = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                others[_i - 2] = arguments[_i];\r\n            }\r\n            if (others.length > 0) {\r\n                return accDivide.apply(void 0, [accDivide(num1, num2), others[0]].concat(others.slice(1)));\r\n            }\r\n            var num1Changed = float2Fixed(num1);\r\n            var num2Changed = float2Fixed(num2);\r\n            return times((num1Changed / num2Changed), Math.pow(10, digitLength(num2) - digitLength(num1)));\r\n        }\r\n    }\r\n\r\n});","/**\r\n * 对字符串对象的扩展\r\n * @class String\r\n */\r\nBI._.extend(BI, {\r\n\r\n    /**\r\n     * 判断字符串是否已指定的字符串开始\r\n     * @param str source字符串\r\n     * @param {String} startTag   指定的开始字符串\r\n     * @return {Boolean}  如果字符串以指定字符串开始则返回true，否则返回false\r\n     */\r\n    startWith: function (str, startTag) {\r\n        str = str || \"\";\r\n        if (startTag == null || startTag == \"\" || str.length === 0 || startTag.length > str.length) {\r\n            return false;\r\n        }\r\n        return str.substr(0, startTag.length) == startTag;\r\n    },\r\n    /**\r\n     * 判断字符串是否以指定的字符串结束\r\n     * @param str source字符串\r\n     * @param {String} endTag 指定的字符串\r\n     * @return {Boolean}  如果字符串以指定字符串结束则返回true，否则返回false\r\n     */\r\n    endWith: function (str, endTag) {\r\n        if (endTag == null || endTag == \"\" || str.length === 0 || endTag.length > str.length) {\r\n            return false;\r\n        }\r\n        return str.substring(str.length - endTag.length) == endTag;\r\n    },\r\n\r\n    /**\r\n     * 获取url中指定名字的参数\r\n     * @param str source字符串\r\n     * @param {String} name 参数的名字\r\n     * @return {String} 参数的值\r\n     */\r\n    getQuery: function (str, name) {\r\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\r\n        var r = str.substr(str.indexOf(\"?\") + 1).match(reg);\r\n        if (r) {\r\n            return unescape(r[2]);\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * 给url加上给定的参数\r\n     * @param str source字符串\r\n     * @param {Object} paras 参数对象，是一个键值对对象\r\n     * @return {String} 添加了给定参数的url\r\n     */\r\n    appendQuery: function (str, paras) {\r\n        if (!paras) {\r\n            return str;\r\n        }\r\n        var src = str;\r\n        // 没有问号说明还没有参数\r\n        if (src.indexOf(\"?\") === -1) {\r\n            src += \"?\";\r\n        }\r\n        // 如果以问号结尾，说明没有其他参数\r\n        if (BI.endWith(src, \"?\") !== false) {\r\n        } else {\r\n            src += \"&\";\r\n        }\r\n        BI._.each(paras, function (value, name) {\r\n            if (typeof(name) === \"string\") {\r\n                src += name + \"=\" + value + \"&\";\r\n            }\r\n        });\r\n        src = src.substr(0, src.length - 1);\r\n        return src;\r\n    },\r\n    /**\r\n     * 将所有符合第一个字符串所表示的字符串替换成为第二个字符串\r\n     * @param str source字符串\r\n     * @param {String} s1 要替换的字符串的正则表达式\r\n     * @param {String} s2 替换的结果字符串\r\n     * @returns {String} 替换后的字符串\r\n     */\r\n    replaceAll: function (str, s1, s2) {\r\n        return BI.isString(str) ? str.replace(new RegExp(s1, \"gm\"), s2) : str;\r\n    },\r\n    /**\r\n     * 总是让字符串以指定的字符开头\r\n     * @param str source字符串\r\n     * @param {String} start 指定的字符\r\n     * @returns {String} 以指定字符开头的字符串\r\n     */\r\n    perfectStart: function (str, start) {\r\n        if (BI.startWith(str, start)) {\r\n            return str;\r\n        }\r\n        return start + str;\r\n\r\n    },\r\n\r\n    /**\r\n     * 获取字符串中某字符串的所有项位置数组\r\n     * @param str source字符串\r\n     * @param {String} sub 子字符串\r\n     * @return {Number[]} 子字符串在父字符串中出现的所有位置组成的数组\r\n     */\r\n    allIndexOf: function (str, sub) {\r\n        if (typeof sub !== \"string\") {\r\n            return [];\r\n        }\r\n        var location = [];\r\n        var offset = 0;\r\n        while (str.length > 0) {\r\n            var loc = str.indexOf(sub);\r\n            if (loc === -1) {\r\n                break;\r\n            }\r\n            location.push(offset + loc);\r\n            str = str.substring(loc + sub.length, str.length);\r\n            offset += loc + sub.length;\r\n        }\r\n        return location;\r\n    }\r\n});","/**\r\n * 汉字拼音索引\r\n */\r\n\r\n!(function () {\r\n    var _ChineseFirstr\n\r\n    // 此处收录了375个多音字,数据来自于http://www.51windows.net/pages/pinyin.asp\r\n    var oMultiDiff = {\r\n        19969: \"DZ\",\r\n        19975: \"WM\",\r\n        19988: \"QJ\",\r\n        20048: \"YL\",\r\n        20056: \"SC\",\r\n        20060: \"NM\",\r\n        20094: \"QG\",\r\n        20127: \"QJ\",\r\n        20167: \"QC\",\r\n        20193: \"YG\",\r\n        20250: \"KH\",\r\n        20256: \"ZC\",\r\n        20282: \"SC\",\r\n        20285: \"QJG\",\r\n        20291: \"TD\",\r\n        20314: \"YD\",\r\n        20315: \"BF\",\r\n        20340: \"NE\",\r\n        20375: \"TD\",\r\n        20389: \"YJ\",\r\n        20391: \"CZ\",\r\n        20415: \"PB\",\r\n        20446: \"YS\",\r\n        20447: \"SQ\",\r\n        20504: \"TC\",\r\n        20608: \"KG\",\r\n        20854: \"QJ\",\r\n        20857: \"ZC\",\r\n        20911: \"PF\",\r\n        20985: \"AW\",\r\n        21032: \"PB\",\r\n        21048: \"XQ\",\r\n        21049: \"SC\",\r\n        21089: \"YS\",\r\n        21119: \"JC\",\r\n        21242: \"SB\",\r\n        21273: \"SC\",\r\n        21305: \"YP\",\r\n        21306: \"QO\",\r\n        21330: \"ZC\",\r\n        21333: \"SDC\",\r\n        21345: \"QK\",\r\n        21378: \"CA\",\r\n        21397: \"SC\",\r\n        21414: \"XS\",\r\n        21442: \"SC\",\r\n        21477: \"JG\",\r\n        21480: \"TD\",\r\n        21484: \"ZS\",\r\n        21494: \"YX\",\r\n        21505: \"YX\",\r\n        21512: \"HG\",\r\n        21523: \"XH\",\r\n        21537: \"PB\",\r\n        21542: \"PF\",\r\n        21549: \"KH\",\r\n        21571: \"E\",\r\n        21574: \"DA\",\r\n        21588: \"TD\",\r\n        21589: \"O\",\r\n        21618: \"ZC\",\r\n        21621: \"KHA\",\r\n        21632: \"ZJ\",\r\n        21654: \"KG\",\r\n        21679: \"LKG\",\r\n        21683: \"KH\",\r\n        21710: \"A\",\r\n        21719: \"YH\",\r\n        21734: \"WOE\",\r\n        21769: \"A\",\r\n        21780: \"WN\",\r\n        21804: \"XH\",\r\n        21834: \"A\",\r\n        21899: \"ZD\",\r\n        21903: \"RN\",\r\n        21908: \"WO\",\r\n        21939: \"ZC\",\r\n        21956: \"SA\",\r\n        21964: \"YA\",\r\n        21970: \"TD\",\r\n        22003: \"A\",\r\n        22031: \"JG\",\r\n        22040: \"XS\",\r\n        22060: \"ZC\",\r\n        22066: \"ZC\",\r\n        22079: \"MH\",\r\n        22129: \"XJ\",\r\n        22179: \"XA\",\r\n        22237: \"NJ\",\r\n        22244: \"TD\",\r\n        22280: \"JQ\",\r\n        22300: \"YH\",\r\n        22313: \"XW\",\r\n        22331: \"YQ\",\r\n        22343: \"YJ\",\r\n        22351: \"PH\",\r\n        22395: \"DC\",\r\n        22412: \"TD\",\r\n        22484: \"PB\",\r\n        22500: \"PB\",\r\n        22534: \"ZD\",\r\n        22549: \"DH\",\r\n        22561: \"PB\",\r\n        22612: \"TD\",\r\n        22771: \"KQ\",\r\n        22831: \"HB\",\r\n        22841: \"JG\",\r\n        22855: \"QJ\",\r\n        22865: \"XQ\",\r\n        23013: \"ML\",\r\n        23081: \"WM\",\r\n        23487: \"SX\",\r\n        23558: \"QJ\",\r\n        23561: \"YW\",\r\n        23586: \"YW\",\r\n        23614: \"YW\",\r\n        23615: \"SN\",\r\n        23631: \"PB\",\r\n        23646: \"ZS\",\r\n        23663: \"ZT\",\r\n        23673: \"YG\",\r\n        23762: \"TD\",\r\n        23769: \"ZS\",\r\n        23780: \"QJ\",\r\n        23884: \"QK\",\r\n        24055: \"XH\",\r\n        24113: \"DC\",\r\n        24162: \"ZC\",\r\n        24191: \"GA\",\r\n        24273: \"QJ\",\r\n        24324: \"NL\",\r\n        24377: \"TD\",\r\n        24378: \"QJ\",\r\n        24439: \"PF\",\r\n        24554: \"ZS\",\r\n        24683: \"TD\",\r\n        24694: \"WE\",\r\n        24733: \"LK\",\r\n        24925: \"TN\",\r\n        25094: \"ZG\",\r\n        25100: \"XQ\",\r\n        25103: \"XH\",\r\n        25153: \"PB\",\r\n        25170: \"PB\",\r\n        25179: \"KG\",\r\n        25203: \"PB\",\r\n        25240: \"ZS\",\r\n        25282: \"FB\",\r\n        25303: \"NA\",\r\n        25324: \"KG\",\r\n        25341: \"ZY\",\r\n        25373: \"WZ\",\r\n        25375: \"XJ\",\r\n        25384: \"A\",\r\n        25457: \"A\",\r\n        25528: \"SD\",\r\n        25530: \"SC\",\r\n        25552: \"TD\",\r\n        25774: \"ZC\",\r\n        25874: \"ZC\",\r\n        26044: \"YW\",\r\n        26080: \"WM\",\r\n        26292: \"PB\",\r\n        26333: \"PB\",\r\n        26355: \"ZY\",\r\n        26366: \"CZ\",\r\n        26397: \"ZC\",\r\n        26399: \"QJ\",\r\n        26415: \"ZS\",\r\n        26451: \"SB\",\r\n        26526: \"ZC\",\r\n        26552: \"JG\",\r\n        26561: \"TD\",\r\n        26588: \"JG\",\r\n        26597: \"CZ\",\r\n        26629: \"ZS\",\r\n        26638: \"YL\",\r\n        26646: \"XQ\",\r\n        26653: \"KG\",\r\n        26657: \"XJ\",\r\n        26727: \"HG\",\r\n        26894: \"ZC\",\r\n        26937: \"ZS\",\r\n        26946: \"ZC\",\r\n        26999: \"KJ\",\r\n        27099: \"KJ\",\r\n        27449: \"YQ\",\r\n        27481: \"XS\",\r\n        27542: \"ZS\",\r\n        27663: \"ZS\",\r\n        27748: \"TS\",\r\n        27784: \"SC\",\r\n        27788: \"ZD\",\r\n        27795: \"TD\",\r\n        27812: \"O\",\r\n        27850: \"PB\",\r\n        27852: \"MB\",\r\n        27895: \"SL\",\r\n        27898: \"PL\",\r\n        27973: \"QJ\",\r\n        27981: \"KH\",\r\n        27986: \"HX\",\r\n        27994: \"XJ\",\r\n        28044: \"YC\",\r\n        28065: \"WG\",\r\n        28177: \"SM\",\r\n        28267: \"QJ\",\r\n        28291: \"KH\",\r\n        28337: \"ZQ\",\r\n        28463: \"TL\",\r\n        28548: \"DC\",\r\n        28601: \"TD\",\r\n        28689: \"PB\",\r\n        28805: \"JG\",\r\n        28820: \"QG\",\r\n        28846: \"PB\",\r\n        28952: \"TD\",\r\n        28975: \"ZC\",\r\n        29100: \"A\",\r\n        29325: \"QJ\",\r\n        29575: \"SL\",\r\n        29602: \"FB\",\r\n        30010: \"TD\",\r\n        30044: \"CX\",\r\n        30058: \"PF\",\r\n        30091: \"YSP\",\r\n        30111: \"YN\",\r\n        30229: \"XJ\",\r\n        30427: \"SC\",\r\n        30465: \"SX\",\r\n        30631: \"YQ\",\r\n        30655: \"QJ\",\r\n        30684: \"QJG\",\r\n        30707: \"SD\",\r\n        30729: \"XH\",\r\n        30796: \"LG\",\r\n        30917: \"PB\",\r\n        31074: \"NM\",\r\n        31085: \"JZ\",\r\n        31109: \"SC\",\r\n        31181: \"ZC\",\r\n        31192: \"MLB\",\r\n        31293: \"JQ\",\r\n        31400: \"YX\",\r\n        31584: \"YJ\",\r\n        31896: \"ZN\",\r\n        31909: \"ZY\",\r\n        31995: \"XJ\",\r\n        32321: \"PF\",\r\n        32327: \"ZY\",\r\n        32418: \"HG\",\r\n        32420: \"XQ\",\r\n        32421: \"HG\",\r\n        32438: \"LG\",\r\n        32473: \"GJ\",\r\n        32488: \"TD\",\r\n        32521: \"QJ\",\r\n        32527: \"PB\",\r\n        32562: \"ZSQ\",\r\n        32564: \"JZ\",\r\n        32735: \"ZD\",\r\n        32793: \"PB\",\r\n        33071: \"PF\",\r\n        33098: \"XL\",\r\n        33100: \"YA\",\r\n        33152: \"PB\",\r\n        33261: \"CX\",\r\n        33324: \"BP\",\r\n        33333: \"TD\",\r\n        33406: \"YA\",\r\n        33426: \"WM\",\r\n        33432: \"PB\",\r\n        33445: \"JG\",\r\n        33486: \"ZN\",\r\n        33493: \"TS\",\r\n        33507: \"QJ\",\r\n        33540: \"QJ\",\r\n        33544: \"ZC\",\r\n        33564: \"XQ\",\r\n        33617: \"YT\",\r\n        33632: \"QJ\",\r\n        33636: \"XH\",\r\n        33637: \"YX\",\r\n        33694: \"WG\",\r\n        33705: \"PF\",\r\n        33728: \"YW\",\r\n        33882: \"SR\",\r\n        34067: \"WM\",\r\n        34074: \"YW\",\r\n        34121: \"QJ\",\r\n        34255: \"ZC\",\r\n        34259: \"XL\",\r\n        34425: \"JH\",\r\n        34430: \"XH\",\r\n        34485: \"KH\",\r\n        34503: \"YS\",\r\n        34532: \"HG\",\r\n        34552: \"XS\",\r\n        34558: \"YE\",\r\n        34593: \"ZL\",\r\n        34660: \"YQ\",\r\n        34892: \"XH\",\r\n        34928: \"SC\",\r\n        34999: \"QJ\",\r\n        35048: \"PB\",\r\n        35059: \"SC\",\r\n        35098: \"ZC\",\r\n        35203: \"TQ\",\r\n        35265: \"JX\",\r\n        35299: \"JX\",\r\n        35782: \"SZ\",\r\n        35828: \"YS\",\r\n        35830: \"E\",\r\n        35843: \"TD\",\r\n        35895: \"YG\",\r\n        35977: \"MH\",\r\n        36158: \"JG\",\r\n        36228: \"QJ\",\r\n        36426: \"XQ\",\r\n        36466: \"DC\",\r\n        36710: \"CJ\",\r\n        36711: \"ZYG\",\r\n        36767: \"PB\",\r\n        36866: \"SK\",\r\n        36951: \"YW\",\r\n        37034: \"YX\",\r\n        37063: \"XH\",\r\n        37218: \"ZC\",\r\n        37325: \"ZC\",\r\n        38063: \"PB\",\r\n        38079: \"TD\",\r\n        38085: \"QY\",\r\n        38107: \"DC\",\r\n        38116: \"TD\",\r\n        38123: \"YD\",\r\n        38224: \"HG\",\r\n        38241: \"XTC\",\r\n        38271: \"ZC\",\r\n        38415: \"YE\",\r\n        38426: \"KH\",\r\n        38461: \"YD\",\r\n        38463: \"AE\",\r\n        38466: \"PB\",\r\n        38477: \"XJ\",\r\n        38518: \"YT\",\r\n        38551: \"WK\",\r\n        38585: \"ZC\",\r\n        38704: \"XS\",\r\n        38739: \"LJ\",\r\n        38761: \"GJ\",\r\n        38808: \"SQ\",\r\n        39048: \"JG\",\r\n        39049: \"XJ\",\r\n        39052: \"HG\",\r\n        39076: \"CZ\",\r\n        39271: \"XT\",\r\n        39534: \"TD\",\r\n        39552: \"TD\",\r\n        39584: \"PB\",\r\n        39647: \"SB\",\r\n        39730: \"LG\",\r\n        39748: \"TPB\",\r\n        40109: \"ZQ\",\r\n        40479: \"ND\",\r\n        40516: \"HG\",\r\n        40536: \"HG\",\r\n        40583: \"QJ\",\r\n        40765: \"YQ\",\r\n        40784: \"QJ\",\r\n        40840: \"YK\",\r\n        40863: \"QJG\"\r\n    };\r\n\r\n    var _checkPYCh = function (ch) {\r\n        var uni = ch.charCodeAt(0);\r\n        // 如果不在汉字处理范围之内,返回原字符,也可以调用自己的处理函数\r\n        if (uni > 40869 || uni < 19968) {return ch;} // dealWithOthers(ch);\r\n        return (oMultiDiff[uni] ? oMultiDiff[uni] : (_ChineseFirstPY.charAt(uni - 19968)));\r\n    };\r\n\r\n    var _mkPYRslt = function (arr, options) {\r\n        var ignoreMulti = options.ignoreMulti;\r\n        var splitChar = options.splitChar;\r\n        var arrRslt = [\"\"], k, multiLen = 0;\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            var str = arr[i];\r\n            var strlen = str.length;\r\n            // 多音字过多的情况下，指数增长会造成浏览器卡死，超过20完全卡死，18勉强能用，考虑到不同性能最好是16或者14\r\n            // 超过14个多音字之后，后面的都用第一个拼音\r\n            if (strlen == 1 || multiLen > 14 || ignoreMulti) {\r\n                var tmpStr = str.substring(0, 1);\r\n                for (k = 0; k < arrRslt.length; k++) {\r\n                    arrRslt[k] += tmpStr;\r\n                }\r\n            } else {\r\n                var tmpArr = arrRslt.slice(0);\r\n                arrRslt = [];\r\n                multiLen ++;\r\n                for (k = 0; k < strlen; k++) {\r\n                    // 复制一个相同的arrRslt\r\n                    var tmp = tmpArr.slice(0);\r\n                    // 把当前字符str[k]添加到每个元素末尾\r\n                    for (var j = 0; j < tmp.length; j++) {\r\n                        tmp[j] += str.charAt(k);\r\n                    }\r\n                    // 把复制并修改后的数组连接到arrRslt上\r\n                    arrRslt = arrRslt.concat(tmp);\r\n                }\r\n            }\r\n        }\r\n        // BI-56386 这边直接将所有多音字组合拼接是有风险的，因为丢失了每一组的起始索引信息, 外部使用indexOf等方法会造成错位\r\n        // 一旦错位就可能认为不符合条件， 但实际上还是有可能符合条件的，故此处以一个无法搜索的不可见字符作为连接\r\n        return arrRslt.join(splitChar || \"\").toLowerCase();\r\n    };\r\n\r\n    BI._.extend(BI, {\r\n        makeFirstPY: function (str, options) {\r\n            options = options || {};\r\n            if (typeof (str) !== \"string\") {return \"\" + str;}\r\n            var arrResult = []; // 保存中间结果的数组\r\n            for (var i = 0, len = str.length; i < len; i++) {\r\n                // 获得unicode码\r\n                var ch = str.charAt(i);\r\n                // 检查该unicode码是否在处理范围之内,在则返回该码对映汉字的拼音首字母,不在则调用其它函数处理\r\n                arrResult.push(_checkPYCh(ch));\r\n            }\r\n            // 处理arrResult,返回所有可能的拼音首字母串数组\r\n            return _mkPYRslt(arrResult, options);\r\n        }\r\n    });\r\n})();","BI.DOM = BI.DOM || {};\r\nBI.extend(BI.DOM, {\r\n    isColor: function (color) {\r\n        return color && (this.isRGBColor(color) || this.isHexColor(color));\r\n    },\r\n\r\n    isRGBColor: function (color) {\r\n        if (!color) {\r\n            return false;\r\n        }\r\n        return color.substr(0, 3) === \"rgb\";\r\n    },\r\n\r\n    isHexColor: function (color) {\r\n        if (!color) {\r\n            return false;\r\n        }\r\n        return color[0] === \"#\" && color.length === 7;\r\n    },\r\n\r\n    isDarkColor: function (hex) {\r\n        if (!hex || !this.isHexColor(hex)) {\r\n            return false;\r\n        }\r\n        var rgb = this.rgb2json(this.hex2rgb(hex));\r\n        var grayLevel = Math.round(rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114);\r\n        if (grayLevel < 192/** 网上给的是140**/) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    // 获取对比颜色\r\n    getContrastColor: function (color) {\r\n        if (!color || !this.isColor(color)) {\r\n            return \"\";\r\n        }\r\n        if (this.isDarkColor(color)) {\r\n            return \"#FFFFFF\";\r\n        }\r\n        return \"#3D4D66\";\r\n    },\r\n\r\n    rgb2hex: function (rgbColour) {\r\n        if (!rgbColour || rgbColour.substr(0, 3) != \"rgb\") {\r\n            return \"\";\r\n        }\r\n        var rgbValues = rgbColour.match(/\\d+(\\.\\d+)?/g);\r\n        var red = BI.parseInt(rgbValues[0]);\r\n        var green = BI.parseInt(rgbValues[1]);\r\n        var blue = BI.parseInt(rgbValues[2]);\r\n\r\n        var hexColour = \"#\" + this.int2hex(red) + this.int2hex(green) + this.int2hex(blue);\r\n\r\n        return hexColour;\r\n    },\r\n\r\n    _hue2rgb: function (m1, m2, h) {\r\n        h = (h < 0) ? h + 1 : ((h > 1) ? h - 1 : h);\r\n        if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\r\n        if (h * 2 < 1) return m2;\r\n        if (h * 3 < 2) return m1 + (m2 - m1) * (0.66666 - h) * 6;\r\n        return m1;\r\n    },\r\n\r\n    hsl2rgb: function (hsl) {\r\n        var m1, m2, r, g, b;\r\n        var h = hsl[0], s = hsl[1], l = hsl[2];\r\n        m2 = (l <= 0.5) ? l * (s + 1) : l + s - l * s;\r\n        m1 = l * 2 - m2;\r\n        return [this._hue2rgb(m1, m2, h + 0.33333),\r\n            this._hue2rgb(m1, m2, h),\r\n            this._hue2rgb(m1, m2, h - 0.33333)];\r\n    },\r\n\r\n    rgb2hsl: function (rgb) {\r\n        var min, max, delta, h, s, l;\r\n        var r = rgb[0], g = rgb[1], b = rgb[2];\r\n        min = Math.min(r, Math.min(g, b));\r\n        max = Math.max(r, Math.max(g, b));\r\n        delta = max - min;\r\n        l = (min + max) / 2;\r\n        s = 0;\r\n        if (l > 0 && l < 1) {\r\n            s = delta / (l < 0.5 ? (2 * l) : (2 - 2 * l));\r\n        }\r\n        h = 0;\r\n        if (delta > 0) {\r\n            if (max == r && max != g) h += (g - b) / delta;\r\n            if (max == g && max != b) h += (2 + (b - r) / delta);\r\n            if (max == b && max != r) h += (4 + (r - g) / delta);\r\n            h /= 6;\r\n        }\r\n        return [h, s, l];\r\n    },\r\n\r\n    rgb2json: function (rgbColour) {\r\n        if (!rgbColour) {\r\n            return {};\r\n        }\r\n        if (!this.isRGBColor(rgbColour)) {\r\n            return {};\r\n        }\r\n        var rgbValues = rgbColour.match(/\\d+(\\.\\d+)?/g);\r\n        return {\r\n            r: BI.parseInt(rgbValues[0]),\r\n            g: BI.parseInt(rgbValues[1]),\r\n            b: BI.parseInt(rgbValues[2])\r\n        };\r\n    },\r\n\r\n    rgba2json: function (rgbColour) {\r\n        if (!rgbColour) {\r\n            return {};\r\n        }\r\n        var rgbValues = rgbColour.match(/\\d+(\\.\\d+)?/g);\r\n        return {\r\n            r: BI.parseInt(rgbValues[0]),\r\n            g: BI.parseInt(rgbValues[1]),\r\n            b: BI.parseInt(rgbValues[2]),\r\n            a: BI.parseFloat(rgbValues[3])\r\n        };\r\n    },\r\n\r\n    json2rgb: function (rgb) {\r\n        if (!BI.isKey(rgb.r) || !BI.isKey(rgb.g) || !BI.isKey(rgb.b)) {\r\n            return \"\";\r\n        }\r\n        return \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \")\";\r\n    },\r\n\r\n    json2rgba: function (rgba) {\r\n        if (!BI.isKey(rgba.r) || !BI.isKey(rgba.g) || !BI.isKey(rgba.b)) {\r\n            return \"\";\r\n        }\r\n        return \"rgba(\" + rgba.r + \",\" + rgba.g + \",\" + rgba.b + \",\" + rgba.a + \")\";\r\n    },\r\n\r\n    int2hex: function (strNum) {\r\n        var hexdig = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n\r\n        return hexdig[strNum >>> 4] + \"\" + hexdig[strNum & 15];\r\n    },\r\n\r\n    hex2rgb: function (color) {\r\n        if (!color) {\r\n            return \"\";\r\n        }\r\n        if (!this.isHexColor(color)) {\r\n            return color;\r\n        }\r\n        var tempValue = \"rgb(\", colorArray;\r\n\r\n        if (color.length === 7) {\r\n            colorArray = [BI.parseInt(\"0x\" + color.substring(1, 3)),\r\n                BI.parseInt(\"0x\" + color.substring(3, 5)),\r\n                BI.parseInt(\"0x\" + color.substring(5, 7))];\r\n        } else if (color.length === 4) {\r\n            colorArray = [BI.parseInt(\"0x\" + color.substring(1, 2)),\r\n                BI.parseInt(\"0x\" + color.substring(2, 3)),\r\n                BI.parseInt(\"0x\" + color.substring(3, 4))];\r\n        }\r\n        tempValue += colorArray[0] + \",\";\r\n        tempValue += colorArray[1] + \",\";\r\n        tempValue += colorArray[2] + \")\";\r\n\r\n        return tempValue;\r\n    },\r\n\r\n    rgba2rgb: function (rgbColor, bgColor) {\r\n        if (BI.isNull(bgColor)) {\r\n            bgColor = 1;\r\n        }\r\n        if (rgbColor.substr(0, 4) != \"rgba\") {\r\n            return \"\";\r\n        }\r\n        var rgbValues = rgbColor.match(/\\d+(\\.\\d+)?/g);\r\n        if (rgbValues.length < 4) {\r\n            return \"\";\r\n        }\r\n        var R = BI.parseFloat(rgbValues[0]);\r\n        var G = BI.parseFloat(rgbValues[1]);\r\n        var B = BI.parseFloat(rgbValues[2]);\r\n        var A = BI.parseFloat(rgbValues[3]);\r\n\r\n        return \"rgb(\" + Math.floor(255 * (bgColor * (1 - A)) + R * A) + \",\" +\r\n            Math.floor(255 * (bgColor * (1 - A)) + G * A) + \",\" +\r\n            Math.floor(255 * (bgColor * (1 - A)) + B * A) + \")\";\r\n    }\r\n});\r\n","!(function () {\r\n    var i18nStore = {};\r\n\r\n    var i18nFormatters = {};\r\n\r\n    BI._.extend(BI, {\r\n        changeI18n: function (i18n) {\r\n            if (i18n) {\r\n                i18nStore = i18n;\r\n            }\r\n        },\r\n        addI18n: function (i18n) {\r\n            BI.extend(i18nStore, i18n);\r\n        },\r\n\r\n        i18nText: function (key) {\r\n            var localeText = i18nStore[key] || (BI.i18n && BI.i18n[key]) || \"\";\r\n            if (!localeText) {\r\n                localeText = key;\r\n            }\r\n            var len = arguments.length;\r\n            if (len > 1) {\r\n                if (localeText.indexOf(\"{R1\") > -1) {\r\n                    for (var i = 1; i < len; i++) {\r\n                        var reg = new RegExp(`{R${i},(.*?)}`, \"g\");\r\n\r\n                        var result = reg.exec(localeText);\r\n\r\n                        if (result) {\r\n                            var formatName = result[1];\r\n                            localeText = BI.replaceAll(localeText, reg, i18nFormatters[formatName](key, arguments[i]));\r\n                        } else {\r\n                            localeText = BI.replaceAll(localeText, `{R${i}}`, arguments[i] + \"\");\r\n                        }\r\n                    }\r\n                } else {\r\n                    var args = Array.prototype.slice.call(arguments);\r\n                    var count = 1;\r\n                    return BI.replaceAll(localeText, \"\\\\{\\\\s*\\\\}\", function () {\r\n                        return args[count++] + \"\";\r\n                    });\r\n                }\r\n            }\r\n            return localeText;\r\n        },\r\n\r\n        addI18nFormatter: function (formatName, fn) {\r\n            i18nFormatters[formatName] = fn;\r\n        }\r\n    });\r\n})();\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","BI.i18n = {\r\n    \"BI-Multi_Date_Quarter_End\": \"季度末\",\r\n    \"BI-Multi_Date_Month_Begin\": \"月初\",\r\n    \"BI-Multi_Date_YMD\": \"年月日\",\r\n    \"BI-Custom_Color\": \"自定义颜色\",\r\n    \"BI-Numerical_Interval_Input_Data\": \"请输入数值\",\r\n    \"BI-Please_Input_Natural_Number\": \"请输入非负整数\",\r\n    \"BI-No_More_Data\": \"无更多数据\",\r\n    \"BI-Basic_Altogether\": \"共\",\r\n    \"BI-Basic_Sunday\": \"星期日\",\r\n    \"BI-Widget_Background_Colour\": \"组件背景\",\r\n    \"BI-Color_Picker_Error_Text\": \"请输入0-255的正整数\",\r\n    \"BI-Multi_Date_Month\": \"月\",\r\n    \"BI-No_Selected_Item\": \"没有可选项\",\r\n    \"BI-Multi_Date_Year_Begin\": \"年初\",\r\n    \"BI-Quarter_1\": \"第1季度\",\r\n    \"BI-Quarter_2\": \"第2季度\",\r\n    \"BI-Quarter_3\": \"第3季度\",\r\n    \"BI-Quarter_4\": \"第4季度\",\r\n    \"BI-Multi_Date_Year_Next\": \"年后\",\r\n    \"BI-Multi_Date_Month_Prev\": \"个月前\",\r\n    \"BI-Month_Trigger_Error_Text\": \"请输入1~12的正整数\",\r\n    \"BI-Less_And_Equal\": \"小于等于\",\r\n    \"BI-Year_Trigger_Invalid_Text\": \"请输入有效时间\",\r\n    \"BI-Multi_Date_Week_Next\": \"周后\",\r\n    \"BI-Font_Size\": \"字号\",\r\n    \"BI-Basic_Total\": \"共\",\r\n    \"BI-Already_Selected\": \"已选择\",\r\n    \"BI-Formula_Insert\": \"插入\",\r\n    \"BI-Select_All\": \"全选\",\r\n    \"BI-Basic_Tuesday\": \"星期二\",\r\n    \"BI-Multi_Date_Month_End\": \"月末\",\r\n    \"BI-Load_More\": \"点击加载更多数据\",\r\n    \"BI-Basic_September\": \"九月\",\r\n    \"BI-Current_Is_Last_Page\": \"当前已是最后一页\",\r\n    \"BI-Basic_Auto\": \"自动\",\r\n    \"BI-Basic_Count\": \"个\",\r\n    \"BI-Basic_Value\": \"值\",\r\n    \"BI-Basic_Unrestricted\": \"无限制\",\r\n    \"BI-Quarter_Trigger_Error_Text\": \"请输入1~4的正整数\",\r\n    \"BI-Basic_More\": \"更多\",\r\n    \"BI-Basic_Wednesday\": \"星期三\",\r\n    \"BI-Basic_Bold\": \"加粗\",\r\n    \"BI-Basic_Simple_Saturday\": \"六\",\r\n    \"BI-Multi_Date_Month_Next\": \"个月后\",\r\n    \"BI-Basic_March\": \"三月\",\r\n    \"BI-Current_Is_First_Page\": \"当前已是第一页\",\r\n    \"BI-Basic_Thursday\": \"星期四\",\r\n    \"BI-Basic_Prompt\": \"提示\",\r\n    \"BI-Multi_Date_Today\": \"今天\",\r\n    \"BI-Multi_Date_Quarter_Prev\": \"个季度前\",\r\n    \"BI-Row_Header\": \"行表头\",\r\n    \"BI-Date_Trigger_Error_Text\": \"日期格式示例:2015-3-11\",\r\n    \"BI-Basic_Cancel\": \"取消\",\r\n    \"BI-Basic_January\": \"一月\",\r\n    \"BI-Basic_June\": \"六月\",\r\n    \"BI-Basic_July\": \"七月\",\r\n    \"BI-Basic_April\": \"四月\",\r\n    \"BI-Multi_Date_Quarter_Begin\": \"季度初\",\r\n    \"BI-Multi_Date_Week\": \"周\",\r\n    \"BI-Click_Blank_To_Select\": \"点击\\\"空格键\\\"选中完全匹配项\",\r\n    \"BI-Basic_August\": \"八月\",\r\n    \"BI-Word_Align_Left\": \"文字居左\",\r\n    \"BI-Basic_November\": \"十一月\",\r\n    \"BI-Font_Colour\": \"字体颜色\",\r\n    \"BI-Multi_Date_Day_Prev\": \"天前\",\r\n    \"BI-Select_Part\": \"部分选择\",\r\n    \"BI-Multi_Date_Day_Next\": \"天后\",\r\n    \"BI-Less_Than\": \"小于\",\r\n    \"BI-Basic_February\": \"二月\",\r\n    \"BI-Multi_Date_Year\": \"年\",\r\n    \"BI-Number_Index\": \"序号\",\r\n    \"BI-Multi_Date_Week_Prev\": \"周前\",\r\n    \"BI-Next_Page\": \"下一页\",\r\n    \"BI-Right_Page\": \"向右翻页\",\r\n    \"BI-Numerical_Interval_Signal_Value\": \"前后值相等，请将操作符改为“≤”\",\r\n    \"BI-Basic_December\": \"十二月\",\r\n    \"BI-Basic_Saturday\": \"星期六\",\r\n    \"BI-Basic_Simple_Wednesday\": \"三\",\r\n    \"BI-Multi_Date_Quarter_Next\": \"个季度后\",\r\n    \"BI-Basic_October\": \"十月\",\r\n    \"BI-Basic_Simple_Friday\": \"五\",\r\n    \"BI-Basic_Save\": \"保存\",\r\n    \"BI-Numerical_Interval_Number_Value\": \"请保证前面的数值小于/等于后面的数值\",\r\n    \"BI-Previous_Page\": \"上一页\",\r\n    \"BI-No_Select\": \"搜索结果为空\",\r\n    \"BI-Basic_Clears\": \"清空\",\r\n    \"BI-Created_By_Me\": \"我创建的\",\r\n    \"BI-Basic_Simple_Tuesday\": \"二\",\r\n    \"BI-Word_Align_Right\": \"文字居右\",\r\n    \"BI-Summary_Values\": \"汇总\",\r\n    \"BI-Basic_Clear\": \"清除\",\r\n    \"BI-Upload_File_Size_Error\": \"文件大小不支持\",\r\n    \"BI-Upload_File_Count_Error\": \"超出上传数量上限{R1}，请重新上传\",\r\n    \"BI-Up_Page\": \"向上翻页\",\r\n    \"BI-Basic_Simple_Sunday\": \"日\",\r\n    \"BI-Multi_Date_Relative_Current_Time\": \"相对当前时间\",\r\n    \"BI-Selected_Data\": \"已选数据：\",\r\n    \"BI-Multi_Date_Quarter\": \"季度\",\r\n    \"BI-Check_Selected\": \"查看已选\",\r\n    \"BI-Basic_Search\": \"搜索\",\r\n    \"BI-Basic_May\": \"五月\",\r\n    \"BI-Continue_Select\": \"继续选择\",\r\n    \"BI-Please_Input_Positive_Integer\": \"请输入正整数\",\r\n    \"BI-Upload_File_Type_Error\": \"文件类型不支持\",\r\n    \"BI-Upload_File_Error\": \"文件上传失败\",\r\n    \"BI-Basic_Friday\": \"星期五\",\r\n    \"BI-Down_Page\": \"向下翻页\",\r\n    \"BI-Basic_Monday\": \"星期一\",\r\n    \"BI-Left_Page\": \"向左翻页\",\r\n    \"BI-Transparent_Color\": \"透明\",\r\n    \"BI-Basic_Simple_Monday\": \"一\",\r\n    \"BI-Multi_Date_Year_End\": \"年末\",\r\n    \"BI-Time_Interval_Error_Text\": \"请保证开始时间早于/等于结束时间\",\r\n    \"BI-Basic_Time\": \"时间\",\r\n    \"BI-Basic_OK\": \"确定\",\r\n    \"BI-Basic_Sure\": \"确定\",\r\n    \"BI-Basic_Simple_Thursday\": \"四\",\r\n    \"BI-Multi_Date_Year_Prev\": \"年前\",\r\n    \"BI-Tiao_Data\": \"条数据\",\r\n    \"BI-Basic_Italic\": \"斜体\",\r\n    \"BI-Basic_Dynamic_Title\": \"动态时间\",\r\n    \"BI-Basic_Year\": \"年\",\r\n    \"BI-Basic_Single_Quarter\": \"季\",\r\n    \"BI-Basic_Month\": \"月\",\r\n    \"BI-Basic_Week\": \"周\",\r\n    \"BI-Basic_Day\": \"天\",\r\n    \"BI-Basic_Work_Day\": \"工作日\",\r\n    \"BI-Basic_Front\": \"前\",\r\n    \"BI-Basic_Behind\": \"后\",\r\n    \"BI-Basic_Empty\": \"空\",\r\n    \"BI-Basic_Month_End\": \"月末\",\r\n    \"BI-Basic_Month_Begin\": \"月初\",\r\n    \"BI-Basic_Year_End\": \"年末\",\r\n    \"BI-Basic_Year_Begin\": \"年初\",\r\n    \"BI-Basic_Quarter_End\": \"季末\",\r\n    \"BI-Basic_Quarter_Begin\": \"季初\",\r\n    \"BI-Basic_Week_End\": \"周末\",\r\n    \"BI-Basic_Week_Begin\": \"周初\",\r\n    \"BI-Basic_Current_Day\": \"当天\",\r\n    \"BI-Basic_Begin_Start\": \"初\",\r\n    \"BI-Basic_End_Stop\": \"末\",\r\n    \"BI-Basic_Current_Year\": \"今年\",\r\n    \"BI-Basic_Year_Fen\": \"年份\",\r\n    \"BI-Basic_Current_Month\": \"本月\",\r\n    \"BI-Basic_Current_Quarter\": \"本季度\",\r\n    \"BI-Basic_Year_Month\": \"年月\",\r\n    \"BI-Basic_Year_Quarter\": \"年季度\",\r\n    \"BI-Basic_Input_Can_Not_Null\": \"输入框不能为空\",\r\n    \"BI-Basic_Date_Time_Error_Text\": \"日期格式示例:2015-3-11 00:00:00\",\r\n    \"BI-Basic_Input_From_To_Number\": \"请输入{R1}的数值\",\r\n    \"BI-Basic_Or\": \"或\",\r\n    \"BI-Basic_And\": \"且\",\r\n    \"BI-Conf_Add_Formula\": \"添加公式\",\r\n    \"BI-Conf_Add_Condition\": \"添加条件\",\r\n    \"BI-Conf_Formula_And\": \"且公式条件\",\r\n    \"BI-Conf_Formula_Or\": \"或公式条件\",\r\n    \"BI-Conf_Condition_And\": \"且条件\",\r\n    \"BI-Conf_Condition_Or\": \"或条件\",\r\n    \"BI-Microsoft_YaHei\": \"微软雅黑\",\r\n    \"BI-Apple_Light\": \"苹方-light\",\r\n    \"BI-Font_Family\": \"字体\",\r\n    \"BI-Basic_Please_Input_Content\": \"请输入内容\",\r\n    \"BI-Word_Align_Center\": \"文字居中\",\r\n    \"BI-Basic_Please_Enter_Number_Between\": \"请输入{R1}-{R2}的值\",\r\n    \"BI-More_Than\": \"大于\",\r\n    \"BI-More_And_Equal\": \"大于等于\",\r\n    \"BI-Please_Enter_SQL\": \"请输入SQL\",\r\n    \"BI-Basic_Click_To_Add_Text\": \"+点击新增\\\"{R1}\\\"\",\r\n    \"BI-Basic_Press_Enter_To_Add_Text\": \"点按回车键添加\\\"{R1}\\\"\",\r\n    \"BI-Basic_Please_Select\": \"请选择\",\r\n    \"BI-Basic_Font_Color\": \"文字颜色\",\r\n    \"BI-Basic_Background_Color\": \"背景色\",\r\n    \"BI-Basic_Underline\": \"下划线\",\r\n    \"BI-Basic_Param_Month\": \"{R1}月\",\r\n    \"BI-Basic_Param_Day\": \"{R1}日\",\r\n    \"BI-Basic_Param_Quarter\": \"{R1}季度\",\r\n    \"BI-Basic_Param_Week_Count\": \"第{R1}周\",\r\n    \"BI-Basic_Param_Hour\": \"{R1}时\",\r\n    \"BI-Basic_Param_Minute\": \"{R1}分\",\r\n    \"BI-Basic_Param_Second\": \"{R1}秒\",\r\n    \"BI-Basic_Param_Year\": \"{R1}年\",\r\n    \"BI-Basic_Date_Day\": \"日\",\r\n    \"BI-Basic_Hour_Sin\": \"时\",\r\n    \"BI-Basic_Seconds\": \"秒\",\r\n    \"BI-Basic_Minute\": \"分\",\r\n    \"BI-Basic_Thousand\": \"千\",\r\n    \"BI-Basic_Wan\": \"万\",\r\n    \"BI-Basic_Million\": \"百万\",\r\n    \"BI-Basic_Billion\": \"亿\",\r\n    \"BI-Basic_Quarter\": \"季度\",\r\n    \"BI-Basic_No_Select\": \"不选\",\r\n    \"BI-Basic_Now\": \"此刻\",\r\n    \"BI-Color_Picker_Error_Text_Hex\": \"请输入6位16进制颜色编号\",\r\n    \"BI-Basic_Date_Range_Error\": \"请选择{R1}年{R2}月{R3}日-{R4}年{R5}月{R6}日的日期\",\r\n    \"BI-Basic_Year_Range_Error\": \"请选择{R1}年-{R2}年的日期\",\r\n    \"BI-Basic_Year_Month_Range_Error\": \"请选择{R1}年{R2}月-{R3}年{R4}月的日期\",\r\n    \"BI-Basic_Year_Quarter_Range_Error\": \"请选择{R1}年{R2}季度-{R3}年{R4}季度的日期\",\r\n    \"BI-Basic_Search_And_Patch_Paste\": \"搜索，支持批量粘贴、粘贴值通过换行识别\",\r\n    \"BI-Basic_Recommend_Color\": \"推荐色\",\r\n    \"BI-Basic_Too_Much_Value_Get_Two_Thousand\": \"粘贴的值过多，只能识别出前2000个值\",\r\n    \"BI-Basic_Simple_Open\": \"开\",\r\n    \"BI-Basic_Simple_Close\": \"关\",\r\n};"],"sourceRoot":""}