import type { WorkerBaseAction } from "./action/worker.action";
import { WorkerMainThreadController } from "./controller/worker.main_thread.controller";
import { IWorkerOptions } from "./worker.core";
/**
 * 主线程Worker
 */
export declare class MainThreadWorker {
    /**
     * Worker 名称
     */
    name: string;
    /**
     * 主线程通信控制器
     */
    controller: WorkerMainThreadController;
    /**
     * 是否已经终止掉 Worker
     */
    protected isTerminated: boolean;
    constructor(options: IWorkerOptions);
    /**
     * 初始化业务actions
     */
    initActions(): void;
    /**
     * 销毁 worker 实例
     * 子实例需要销毁action
     */
    terminate(): void;
    /**
     * 实例化action
     * @param Action action类
     */
    protected createAction<T extends typeof WorkerBaseAction>(Action: T): InstanceType<T>;
}
