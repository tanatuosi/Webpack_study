import { WorkerChannel } from "./worker.channel";
import { WorkerBaseController } from "./controller/worker.controller";
import { IWorkerOptions } from "./worker.core";
import { WorkerMainThreadController } from "./controller/worker.main_thread.controller";
import { WorkerThreadController } from "./controller/worker.worker_thread.controller";
import { WorkerBaseAction } from "./action/worker.action";
import { MainThreadWorker } from "./worker.main_thread";
import { WorkerThreadWorker } from "./worker.worker_thread";
declare function createWorker<T extends typeof MainThreadWorker>(ThreadWorker: T, options: IWorkerOptions): InstanceType<T>;
declare function createWorker<T extends typeof WorkerThreadWorker>(ThreadWorker: T): InstanceType<T>;
export declare const Workers: {
    WorkerChannel: typeof WorkerChannel;
    WorkerBaseController: typeof WorkerBaseController;
    WorkerMainThreadController: typeof WorkerMainThreadController;
    WorkerThreadController: typeof WorkerThreadController;
    WorkerBaseAction: typeof WorkerBaseAction;
    MainThreadWorker: typeof MainThreadWorker;
    WorkerThreadWorker: typeof WorkerThreadWorker;
    WorkerMessageType: {
        REQUEST: string;
        REPLY: string;
    };
    createWorker: typeof createWorker;
};
export {};
